pub mod bpfman_csi
pub mod bpfman_csi::v1
pub mod bpfman_csi::v1::controller_client
pub struct bpfman_csi::v1::controller_client::ControllerClient<T>
impl<T> bpfman_csi::v1::controller_client::ControllerClient<T> where T: tonic::client::service::GrpcService<tonic::body::BoxBody>, <T as tonic::client::service::GrpcService>::Error: core::convert::Into<tonic::codegen::StdError>, <T as tonic::client::service::GrpcService>::ResponseBody: http_body::Body<Data = bytes::bytes::Bytes> + core::marker::Send + 'static, <<T as tonic::client::service::GrpcService>::ResponseBody as http_body::Body>::Error: core::convert::Into<tonic::codegen::StdError> + core::marker::Send
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::accept_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub async fn bpfman_csi::v1::controller_client::ControllerClient<T>::controller_expand_volume(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::ControllerExpandVolumeRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::ControllerExpandVolumeResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::controller_client::ControllerClient<T>::controller_get_capabilities(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::ControllerGetCapabilitiesRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::ControllerGetCapabilitiesResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::controller_client::ControllerClient<T>::controller_get_volume(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::ControllerGetVolumeRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::ControllerGetVolumeResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::controller_client::ControllerClient<T>::controller_modify_volume(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::ControllerModifyVolumeRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::ControllerModifyVolumeResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::controller_client::ControllerClient<T>::controller_publish_volume(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::ControllerPublishVolumeRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::ControllerPublishVolumeResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::controller_client::ControllerClient<T>::controller_unpublish_volume(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::ControllerUnpublishVolumeRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::ControllerUnpublishVolumeResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::controller_client::ControllerClient<T>::create_snapshot(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::CreateSnapshotRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::CreateSnapshotResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::controller_client::ControllerClient<T>::create_volume(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::CreateVolumeRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::CreateVolumeResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::controller_client::ControllerClient<T>::delete_snapshot(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::DeleteSnapshotRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::DeleteSnapshotResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::controller_client::ControllerClient<T>::delete_volume(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::DeleteVolumeRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::DeleteVolumeResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::controller_client::ControllerClient<T>::get_capacity(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::GetCapacityRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::GetCapacityResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::controller_client::ControllerClient<T>::list_snapshots(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::ListSnapshotsRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::ListSnapshotsResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::controller_client::ControllerClient<T>::list_volumes(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::ListVolumesRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::ListVolumesResponse>, tonic::status::Status>
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::max_decoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::max_encoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::new(inner: T) -> Self
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::send_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub async fn bpfman_csi::v1::controller_client::ControllerClient<T>::validate_volume_capabilities(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::ValidateVolumeCapabilitiesRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::ValidateVolumeCapabilitiesResponse>, tonic::status::Status>
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::with_interceptor<F>(inner: T, interceptor: F) -> bpfman_csi::v1::controller_client::ControllerClient<tonic::service::interceptor::InterceptedService<T, F>> where F: tonic::service::interceptor::Interceptor, <T as tonic::client::service::GrpcService>::ResponseBody: core::default::Default, T: tower_service::Service<http::request::Request<tonic::body::BoxBody>, Response = http::response::Response<<T as tonic::client::service::GrpcService<tonic::body::BoxBody>>::ResponseBody>>, <T as tower_service::Service<http::request::Request<tonic::body::BoxBody>>>::Error: core::convert::Into<tonic::codegen::StdError> + core::marker::Send + core::marker::Sync
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::with_origin(inner: T, origin: http::uri::Uri) -> Self
impl<T: core::clone::Clone> core::clone::Clone for bpfman_csi::v1::controller_client::ControllerClient<T>
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::clone(&self) -> bpfman_csi::v1::controller_client::ControllerClient<T>
impl<T: core::fmt::Debug> core::fmt::Debug for bpfman_csi::v1::controller_client::ControllerClient<T>
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T> !core::marker::Freeze for bpfman_csi::v1::controller_client::ControllerClient<T>
impl<T> core::marker::Send for bpfman_csi::v1::controller_client::ControllerClient<T> where T: core::marker::Send
impl<T> core::marker::Sync for bpfman_csi::v1::controller_client::ControllerClient<T> where T: core::marker::Sync
impl<T> core::marker::Unpin for bpfman_csi::v1::controller_client::ControllerClient<T> where T: core::marker::Unpin
impl<T> core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::controller_client::ControllerClient<T> where T: core::panic::unwind_safe::RefUnwindSafe
impl<T> core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::controller_client::ControllerClient<T> where T: core::panic::unwind_safe::UnwindSafe
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::controller_client::ControllerClient<T> where U: core::convert::From<T>
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::controller_client::ControllerClient<T> where U: core::convert::Into<T>
pub type bpfman_csi::v1::controller_client::ControllerClient<T>::Error = core::convert::Infallible
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::controller_client::ControllerClient<T> where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::controller_client::ControllerClient<T>::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::controller_client::ControllerClient<T> where T: core::clone::Clone
pub type bpfman_csi::v1::controller_client::ControllerClient<T>::Owned = T
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::controller_client::ControllerClient<T> where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::controller_client::ControllerClient<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::controller_client::ControllerClient<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::controller_client::ControllerClient<T>
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::controller_client::ControllerClient<T>
pub fn bpfman_csi::v1::controller_client::ControllerClient<T>::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::controller_client::ControllerClient<T>
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::controller_client::ControllerClient<T>
pub mod bpfman_csi::v1::controller_get_volume_response
pub struct bpfman_csi::v1::controller_get_volume_response::VolumeStatus
pub bpfman_csi::v1::controller_get_volume_response::VolumeStatus::published_node_ids: alloc::vec::Vec<alloc::string::String>
pub bpfman_csi::v1::controller_get_volume_response::VolumeStatus::volume_condition: core::option::Option<bpfman_csi::v1::VolumeCondition>
impl core::clone::Clone for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::clone(&self) -> bpfman_csi::v1::controller_get_volume_response::VolumeStatus
impl core::cmp::PartialEq for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::eq(&self, other: &bpfman_csi::v1::controller_get_volume_response::VolumeStatus) -> bool
impl core::default::Default for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
impl prost::message::Message for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::clear(&mut self)
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
impl core::marker::Send for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
impl core::marker::Sync for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
impl core::marker::Unpin for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::controller_get_volume_response::VolumeStatus where U: core::convert::From<T>
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::controller_get_volume_response::VolumeStatus where U: core::convert::Into<T>
pub type bpfman_csi::v1::controller_get_volume_response::VolumeStatus::Error = core::convert::Infallible
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::controller_get_volume_response::VolumeStatus where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::controller_get_volume_response::VolumeStatus::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::controller_get_volume_response::VolumeStatus where T: core::clone::Clone
pub type bpfman_csi::v1::controller_get_volume_response::VolumeStatus::Owned = T
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::controller_get_volume_response::VolumeStatus where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::controller_get_volume_response::VolumeStatus where T: core::marker::Sized
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::controller_get_volume_response::VolumeStatus where T: core::marker::Sized
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
pub fn bpfman_csi::v1::controller_get_volume_response::VolumeStatus::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::controller_get_volume_response::VolumeStatus
pub mod bpfman_csi::v1::controller_server
pub struct bpfman_csi::v1::controller_server::ControllerServer<T: bpfman_csi::v1::controller_server::Controller>
impl<T: bpfman_csi::v1::controller_server::Controller> bpfman_csi::v1::controller_server::ControllerServer<T>
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::accept_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::from_arc(inner: alloc::sync::Arc<T>) -> Self
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::max_decoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::max_encoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::new(inner: T) -> Self
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::send_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::with_interceptor<F>(inner: T, interceptor: F) -> tonic::service::interceptor::InterceptedService<Self, F> where F: tonic::service::interceptor::Interceptor
impl<T, B> tower_service::Service<http::request::Request<B>> for bpfman_csi::v1::controller_server::ControllerServer<T> where T: bpfman_csi::v1::controller_server::Controller, B: http_body::Body + core::marker::Send + 'static, <B as http_body::Body>::Error: core::convert::Into<tonic::codegen::StdError> + core::marker::Send + 'static
pub type bpfman_csi::v1::controller_server::ControllerServer<T>::Error = core::convert::Infallible
pub type bpfman_csi::v1::controller_server::ControllerServer<T>::Future = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<<bpfman_csi::v1::controller_server::ControllerServer<T> as tower_service::Service<http::request::Request<B>>>::Response, <bpfman_csi::v1::controller_server::ControllerServer<T> as tower_service::Service<http::request::Request<B>>>::Error>> + core::marker::Send)>>
pub type bpfman_csi::v1::controller_server::ControllerServer<T>::Response = http::response::Response<http_body::combinators::box_body::UnsyncBoxBody<bytes::bytes::Bytes, tonic::status::Status>>
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::call(&mut self, req: http::request::Request<B>) -> Self::Future
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::poll_ready(&mut self, _cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::result::Result<(), Self::Error>>
impl<T: bpfman_csi::v1::controller_server::Controller> core::clone::Clone for bpfman_csi::v1::controller_server::ControllerServer<T>
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::clone(&self) -> Self
impl<T: bpfman_csi::v1::controller_server::Controller> tonic::server::NamedService for bpfman_csi::v1::controller_server::ControllerServer<T>
pub const bpfman_csi::v1::controller_server::ControllerServer<T>::NAME: &'static str
impl<T: core::fmt::Debug + bpfman_csi::v1::controller_server::Controller> core::fmt::Debug for bpfman_csi::v1::controller_server::ControllerServer<T>
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T> core::marker::Freeze for bpfman_csi::v1::controller_server::ControllerServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::marker::Send for bpfman_csi::v1::controller_server::ControllerServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::marker::Sync for bpfman_csi::v1::controller_server::ControllerServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::marker::Unpin for bpfman_csi::v1::controller_server::ControllerServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::controller_server::ControllerServer<T> where T: core::marker::Sync + core::marker::Send + 'static + core::panic::unwind_safe::RefUnwindSafe
impl<T> core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::controller_server::ControllerServer<T> where T: core::marker::Sync + core::marker::Send + 'static + core::panic::unwind_safe::RefUnwindSafe
impl<T, ReqBody, ResBody> tonic::client::service::GrpcService<ReqBody> for bpfman_csi::v1::controller_server::ControllerServer<T> where T: tower_service::Service<http::request::Request<ReqBody>, Response = http::response::Response<ResBody>>, <T as tower_service::Service<http::request::Request<ReqBody>>>::Error: core::convert::Into<alloc::boxed::Box<(dyn core::error::Error + core::marker::Sync + core::marker::Send)>>, ResBody: http_body::Body, <ResBody as http_body::Body>::Error: core::convert::Into<alloc::boxed::Box<(dyn core::error::Error + core::marker::Sync + core::marker::Send)>>
pub type bpfman_csi::v1::controller_server::ControllerServer<T>::Error = <T as tower_service::Service<http::request::Request<ReqBody>>>::Error
pub type bpfman_csi::v1::controller_server::ControllerServer<T>::Future = <T as tower_service::Service<http::request::Request<ReqBody>>>::Future
pub type bpfman_csi::v1::controller_server::ControllerServer<T>::ResponseBody = ResBody
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::call(&mut self, request: http::request::Request<ReqBody>) -> <T as tonic::client::service::GrpcService<ReqBody>>::Future
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::poll_ready(&mut self, cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::result::Result<(), <T as tonic::client::service::GrpcService<ReqBody>>::Error>>
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::controller_server::ControllerServer<T> where U: core::convert::From<T>
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::controller_server::ControllerServer<T> where U: core::convert::Into<T>
pub type bpfman_csi::v1::controller_server::ControllerServer<T>::Error = core::convert::Infallible
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::controller_server::ControllerServer<T> where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::controller_server::ControllerServer<T>::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::controller_server::ControllerServer<T> where T: core::clone::Clone
pub type bpfman_csi::v1::controller_server::ControllerServer<T>::Owned = T
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::controller_server::ControllerServer<T> where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::controller_server::ControllerServer<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::controller_server::ControllerServer<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::controller_server::ControllerServer<T>
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::controller_server::ControllerServer<T>
pub fn bpfman_csi::v1::controller_server::ControllerServer<T>::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::controller_server::ControllerServer<T>
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::controller_server::ControllerServer<T>
pub trait bpfman_csi::v1::controller_server::Controller: core::marker::Send + core::marker::Sync + 'static
pub fn bpfman_csi::v1::controller_server::Controller::controller_expand_volume<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::ControllerExpandVolumeRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::ControllerExpandVolumeResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::controller_server::Controller::controller_get_capabilities<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::ControllerGetCapabilitiesRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::ControllerGetCapabilitiesResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::controller_server::Controller::controller_get_volume<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::ControllerGetVolumeRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::ControllerGetVolumeResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::controller_server::Controller::controller_modify_volume<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::ControllerModifyVolumeRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::ControllerModifyVolumeResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::controller_server::Controller::controller_publish_volume<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::ControllerPublishVolumeRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::ControllerPublishVolumeResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::controller_server::Controller::controller_unpublish_volume<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::ControllerUnpublishVolumeRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::ControllerUnpublishVolumeResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::controller_server::Controller::create_snapshot<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::CreateSnapshotRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::CreateSnapshotResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::controller_server::Controller::create_volume<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::CreateVolumeRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::CreateVolumeResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::controller_server::Controller::delete_snapshot<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::DeleteSnapshotRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::DeleteSnapshotResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::controller_server::Controller::delete_volume<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::DeleteVolumeRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::DeleteVolumeResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::controller_server::Controller::get_capacity<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::GetCapacityRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::GetCapacityResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::controller_server::Controller::list_snapshots<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::ListSnapshotsRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::ListSnapshotsResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::controller_server::Controller::list_volumes<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::ListVolumesRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::ListVolumesResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::controller_server::Controller::validate_volume_capabilities<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::ValidateVolumeCapabilitiesRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::ValidateVolumeCapabilitiesResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub mod bpfman_csi::v1::controller_service_capability
pub mod bpfman_csi::v1::controller_service_capability::rpc
#[repr(i32)] pub enum bpfman_csi::v1::controller_service_capability::rpc::Type
pub bpfman_csi::v1::controller_service_capability::rpc::Type::CloneVolume = 7
pub bpfman_csi::v1::controller_service_capability::rpc::Type::CreateDeleteSnapshot = 5
pub bpfman_csi::v1::controller_service_capability::rpc::Type::CreateDeleteVolume = 1
pub bpfman_csi::v1::controller_service_capability::rpc::Type::ExpandVolume = 9
pub bpfman_csi::v1::controller_service_capability::rpc::Type::GetCapacity = 4
pub bpfman_csi::v1::controller_service_capability::rpc::Type::GetVolume = 12
pub bpfman_csi::v1::controller_service_capability::rpc::Type::ListSnapshots = 6
pub bpfman_csi::v1::controller_service_capability::rpc::Type::ListVolumes = 3
pub bpfman_csi::v1::controller_service_capability::rpc::Type::ListVolumesPublishedNodes = 10
pub bpfman_csi::v1::controller_service_capability::rpc::Type::ModifyVolume = 14
pub bpfman_csi::v1::controller_service_capability::rpc::Type::PublishReadonly = 8
pub bpfman_csi::v1::controller_service_capability::rpc::Type::PublishUnpublishVolume = 2
pub bpfman_csi::v1::controller_service_capability::rpc::Type::SingleNodeMultiWriter = 13
pub bpfman_csi::v1::controller_service_capability::rpc::Type::Unknown = 0
pub bpfman_csi::v1::controller_service_capability::rpc::Type::VolumeCondition = 11
impl bpfman_csi::v1::controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::as_str_name(&self) -> &'static str
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::from_str_name(value: &str) -> core::option::Option<Self>
impl bpfman_csi::v1::controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::from_i32(value: i32) -> core::option::Option<bpfman_csi::v1::controller_service_capability::rpc::Type>
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::is_valid(value: i32) -> bool
impl core::clone::Clone for bpfman_csi::v1::controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::clone(&self) -> bpfman_csi::v1::controller_service_capability::rpc::Type
impl core::cmp::Eq for bpfman_csi::v1::controller_service_capability::rpc::Type
impl core::cmp::Ord for bpfman_csi::v1::controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::cmp(&self, other: &bpfman_csi::v1::controller_service_capability::rpc::Type) -> core::cmp::Ordering
impl core::cmp::PartialEq for bpfman_csi::v1::controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::eq(&self, other: &bpfman_csi::v1::controller_service_capability::rpc::Type) -> bool
impl core::cmp::PartialOrd for bpfman_csi::v1::controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::partial_cmp(&self, other: &bpfman_csi::v1::controller_service_capability::rpc::Type) -> core::option::Option<core::cmp::Ordering>
impl core::convert::From<bpfman_csi::v1::controller_service_capability::rpc::Type> for i32
pub fn i32::from(value: bpfman_csi::v1::controller_service_capability::rpc::Type) -> i32
impl core::convert::TryFrom<i32> for bpfman_csi::v1::controller_service_capability::rpc::Type
pub type bpfman_csi::v1::controller_service_capability::rpc::Type::Error = prost::error::DecodeError
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::try_from(value: i32) -> core::result::Result<bpfman_csi::v1::controller_service_capability::rpc::Type, prost::error::DecodeError>
impl core::default::Default for bpfman_csi::v1::controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::default() -> bpfman_csi::v1::controller_service_capability::rpc::Type
impl core::fmt::Debug for bpfman_csi::v1::controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::hash::Hash for bpfman_csi::v1::controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::hash<__H: core::hash::Hasher>(&self, state: &mut __H)
impl core::marker::Copy for bpfman_csi::v1::controller_service_capability::rpc::Type
impl core::marker::StructuralPartialEq for bpfman_csi::v1::controller_service_capability::rpc::Type
impl core::marker::Freeze for bpfman_csi::v1::controller_service_capability::rpc::Type
impl core::marker::Send for bpfman_csi::v1::controller_service_capability::rpc::Type
impl core::marker::Sync for bpfman_csi::v1::controller_service_capability::rpc::Type
impl core::marker::Unpin for bpfman_csi::v1::controller_service_capability::rpc::Type
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::controller_service_capability::rpc::Type
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::controller_service_capability::rpc::Type
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::controller_service_capability::rpc::Type where U: core::convert::From<T>
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::controller_service_capability::rpc::Type where U: core::convert::Into<T>
pub type bpfman_csi::v1::controller_service_capability::rpc::Type::Error = core::convert::Infallible
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::controller_service_capability::rpc::Type where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::controller_service_capability::rpc::Type::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::controller_service_capability::rpc::Type where T: core::clone::Clone
pub type bpfman_csi::v1::controller_service_capability::rpc::Type::Owned = T
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::controller_service_capability::rpc::Type where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::controller_service_capability::rpc::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::controller_service_capability::rpc::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::controller_service_capability::rpc::Type::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::controller_service_capability::rpc::Type
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::controller_service_capability::rpc::Type
pub enum bpfman_csi::v1::controller_service_capability::Type
pub bpfman_csi::v1::controller_service_capability::Type::Rpc(bpfman_csi::v1::controller_service_capability::Rpc)
impl bpfman_csi::v1::controller_service_capability::Type
pub fn bpfman_csi::v1::controller_service_capability::Type::encode<B>(&self, buf: &mut B) where B: bytes::buf::buf_mut::BufMut
pub fn bpfman_csi::v1::controller_service_capability::Type::encoded_len(&self) -> usize
pub fn bpfman_csi::v1::controller_service_capability::Type::merge<B>(field: &mut core::option::Option<bpfman_csi::v1::controller_service_capability::Type>, tag: u32, wire_type: prost::encoding::WireType, buf: &mut B, ctx: prost::encoding::DecodeContext) -> core::result::Result<(), prost::error::DecodeError> where B: bytes::buf::buf_impl::Buf
impl core::clone::Clone for bpfman_csi::v1::controller_service_capability::Type
pub fn bpfman_csi::v1::controller_service_capability::Type::clone(&self) -> bpfman_csi::v1::controller_service_capability::Type
impl core::cmp::PartialEq for bpfman_csi::v1::controller_service_capability::Type
pub fn bpfman_csi::v1::controller_service_capability::Type::eq(&self, other: &bpfman_csi::v1::controller_service_capability::Type) -> bool
impl core::fmt::Debug for bpfman_csi::v1::controller_service_capability::Type
pub fn bpfman_csi::v1::controller_service_capability::Type::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::controller_service_capability::Type
impl core::marker::Freeze for bpfman_csi::v1::controller_service_capability::Type
impl core::marker::Send for bpfman_csi::v1::controller_service_capability::Type
impl core::marker::Sync for bpfman_csi::v1::controller_service_capability::Type
impl core::marker::Unpin for bpfman_csi::v1::controller_service_capability::Type
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::controller_service_capability::Type
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::controller_service_capability::Type
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::controller_service_capability::Type where U: core::convert::From<T>
pub fn bpfman_csi::v1::controller_service_capability::Type::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::controller_service_capability::Type where U: core::convert::Into<T>
pub type bpfman_csi::v1::controller_service_capability::Type::Error = core::convert::Infallible
pub fn bpfman_csi::v1::controller_service_capability::Type::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::controller_service_capability::Type where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::controller_service_capability::Type::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::controller_service_capability::Type::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::controller_service_capability::Type where T: core::clone::Clone
pub type bpfman_csi::v1::controller_service_capability::Type::Owned = T
pub fn bpfman_csi::v1::controller_service_capability::Type::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::controller_service_capability::Type::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::controller_service_capability::Type where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::controller_service_capability::Type::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::controller_service_capability::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::controller_service_capability::Type::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::controller_service_capability::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::controller_service_capability::Type::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::controller_service_capability::Type
pub fn bpfman_csi::v1::controller_service_capability::Type::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::controller_service_capability::Type
pub fn bpfman_csi::v1::controller_service_capability::Type::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::controller_service_capability::Type
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::controller_service_capability::Type
pub struct bpfman_csi::v1::controller_service_capability::Rpc
pub bpfman_csi::v1::controller_service_capability::Rpc::type: i32
impl bpfman_csi::v1::controller_service_capability::Rpc
pub fn bpfman_csi::v1::controller_service_capability::Rpc::set_type(&mut self, value: bpfman_csi::v1::controller_service_capability::rpc::Type)
pub fn bpfman_csi::v1::controller_service_capability::Rpc::type(&self) -> bpfman_csi::v1::controller_service_capability::rpc::Type
impl core::clone::Clone for bpfman_csi::v1::controller_service_capability::Rpc
pub fn bpfman_csi::v1::controller_service_capability::Rpc::clone(&self) -> bpfman_csi::v1::controller_service_capability::Rpc
impl core::cmp::PartialEq for bpfman_csi::v1::controller_service_capability::Rpc
pub fn bpfman_csi::v1::controller_service_capability::Rpc::eq(&self, other: &bpfman_csi::v1::controller_service_capability::Rpc) -> bool
impl core::default::Default for bpfman_csi::v1::controller_service_capability::Rpc
pub fn bpfman_csi::v1::controller_service_capability::Rpc::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::controller_service_capability::Rpc
pub fn bpfman_csi::v1::controller_service_capability::Rpc::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::controller_service_capability::Rpc
impl prost::message::Message for bpfman_csi::v1::controller_service_capability::Rpc
pub fn bpfman_csi::v1::controller_service_capability::Rpc::clear(&mut self)
pub fn bpfman_csi::v1::controller_service_capability::Rpc::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::controller_service_capability::Rpc
impl core::marker::Send for bpfman_csi::v1::controller_service_capability::Rpc
impl core::marker::Sync for bpfman_csi::v1::controller_service_capability::Rpc
impl core::marker::Unpin for bpfman_csi::v1::controller_service_capability::Rpc
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::controller_service_capability::Rpc
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::controller_service_capability::Rpc
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::controller_service_capability::Rpc where U: core::convert::From<T>
pub fn bpfman_csi::v1::controller_service_capability::Rpc::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::controller_service_capability::Rpc where U: core::convert::Into<T>
pub type bpfman_csi::v1::controller_service_capability::Rpc::Error = core::convert::Infallible
pub fn bpfman_csi::v1::controller_service_capability::Rpc::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::controller_service_capability::Rpc where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::controller_service_capability::Rpc::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::controller_service_capability::Rpc::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::controller_service_capability::Rpc where T: core::clone::Clone
pub type bpfman_csi::v1::controller_service_capability::Rpc::Owned = T
pub fn bpfman_csi::v1::controller_service_capability::Rpc::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::controller_service_capability::Rpc::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::controller_service_capability::Rpc where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::controller_service_capability::Rpc::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::controller_service_capability::Rpc where T: core::marker::Sized
pub fn bpfman_csi::v1::controller_service_capability::Rpc::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::controller_service_capability::Rpc where T: core::marker::Sized
pub fn bpfman_csi::v1::controller_service_capability::Rpc::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::controller_service_capability::Rpc
pub fn bpfman_csi::v1::controller_service_capability::Rpc::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::controller_service_capability::Rpc
pub fn bpfman_csi::v1::controller_service_capability::Rpc::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::controller_service_capability::Rpc
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::controller_service_capability::Rpc
pub mod bpfman_csi::v1::group_controller_client
pub struct bpfman_csi::v1::group_controller_client::GroupControllerClient<T>
impl<T> bpfman_csi::v1::group_controller_client::GroupControllerClient<T> where T: tonic::client::service::GrpcService<tonic::body::BoxBody>, <T as tonic::client::service::GrpcService>::Error: core::convert::Into<tonic::codegen::StdError>, <T as tonic::client::service::GrpcService>::ResponseBody: http_body::Body<Data = bytes::bytes::Bytes> + core::marker::Send + 'static, <<T as tonic::client::service::GrpcService>::ResponseBody as http_body::Body>::Error: core::convert::Into<tonic::codegen::StdError> + core::marker::Send
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::accept_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub async fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::create_volume_group_snapshot(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::CreateVolumeGroupSnapshotRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::CreateVolumeGroupSnapshotResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::delete_volume_group_snapshot(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::get_volume_group_snapshot(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::GetVolumeGroupSnapshotRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::GetVolumeGroupSnapshotResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::group_controller_get_capabilities(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::GroupControllerGetCapabilitiesRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::GroupControllerGetCapabilitiesResponse>, tonic::status::Status>
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::max_decoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::max_encoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::new(inner: T) -> Self
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::send_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::with_interceptor<F>(inner: T, interceptor: F) -> bpfman_csi::v1::group_controller_client::GroupControllerClient<tonic::service::interceptor::InterceptedService<T, F>> where F: tonic::service::interceptor::Interceptor, <T as tonic::client::service::GrpcService>::ResponseBody: core::default::Default, T: tower_service::Service<http::request::Request<tonic::body::BoxBody>, Response = http::response::Response<<T as tonic::client::service::GrpcService<tonic::body::BoxBody>>::ResponseBody>>, <T as tower_service::Service<http::request::Request<tonic::body::BoxBody>>>::Error: core::convert::Into<tonic::codegen::StdError> + core::marker::Send + core::marker::Sync
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::with_origin(inner: T, origin: http::uri::Uri) -> Self
impl<T: core::clone::Clone> core::clone::Clone for bpfman_csi::v1::group_controller_client::GroupControllerClient<T>
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::clone(&self) -> bpfman_csi::v1::group_controller_client::GroupControllerClient<T>
impl<T: core::fmt::Debug> core::fmt::Debug for bpfman_csi::v1::group_controller_client::GroupControllerClient<T>
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T> !core::marker::Freeze for bpfman_csi::v1::group_controller_client::GroupControllerClient<T>
impl<T> core::marker::Send for bpfman_csi::v1::group_controller_client::GroupControllerClient<T> where T: core::marker::Send
impl<T> core::marker::Sync for bpfman_csi::v1::group_controller_client::GroupControllerClient<T> where T: core::marker::Sync
impl<T> core::marker::Unpin for bpfman_csi::v1::group_controller_client::GroupControllerClient<T> where T: core::marker::Unpin
impl<T> core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::group_controller_client::GroupControllerClient<T> where T: core::panic::unwind_safe::RefUnwindSafe
impl<T> core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::group_controller_client::GroupControllerClient<T> where T: core::panic::unwind_safe::UnwindSafe
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::group_controller_client::GroupControllerClient<T> where U: core::convert::From<T>
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::group_controller_client::GroupControllerClient<T> where U: core::convert::Into<T>
pub type bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::Error = core::convert::Infallible
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::group_controller_client::GroupControllerClient<T> where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::group_controller_client::GroupControllerClient<T> where T: core::clone::Clone
pub type bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::Owned = T
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::group_controller_client::GroupControllerClient<T> where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::group_controller_client::GroupControllerClient<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::group_controller_client::GroupControllerClient<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::group_controller_client::GroupControllerClient<T>
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::group_controller_client::GroupControllerClient<T>
pub fn bpfman_csi::v1::group_controller_client::GroupControllerClient<T>::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::group_controller_client::GroupControllerClient<T>
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::group_controller_client::GroupControllerClient<T>
pub mod bpfman_csi::v1::group_controller_server
pub struct bpfman_csi::v1::group_controller_server::GroupControllerServer<T: bpfman_csi::v1::group_controller_server::GroupController>
impl<T: bpfman_csi::v1::group_controller_server::GroupController> bpfman_csi::v1::group_controller_server::GroupControllerServer<T>
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::accept_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::from_arc(inner: alloc::sync::Arc<T>) -> Self
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::max_decoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::max_encoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::new(inner: T) -> Self
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::send_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::with_interceptor<F>(inner: T, interceptor: F) -> tonic::service::interceptor::InterceptedService<Self, F> where F: tonic::service::interceptor::Interceptor
impl<T, B> tower_service::Service<http::request::Request<B>> for bpfman_csi::v1::group_controller_server::GroupControllerServer<T> where T: bpfman_csi::v1::group_controller_server::GroupController, B: http_body::Body + core::marker::Send + 'static, <B as http_body::Body>::Error: core::convert::Into<tonic::codegen::StdError> + core::marker::Send + 'static
pub type bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::Error = core::convert::Infallible
pub type bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::Future = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<<bpfman_csi::v1::group_controller_server::GroupControllerServer<T> as tower_service::Service<http::request::Request<B>>>::Response, <bpfman_csi::v1::group_controller_server::GroupControllerServer<T> as tower_service::Service<http::request::Request<B>>>::Error>> + core::marker::Send)>>
pub type bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::Response = http::response::Response<http_body::combinators::box_body::UnsyncBoxBody<bytes::bytes::Bytes, tonic::status::Status>>
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::call(&mut self, req: http::request::Request<B>) -> Self::Future
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::poll_ready(&mut self, _cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::result::Result<(), Self::Error>>
impl<T: bpfman_csi::v1::group_controller_server::GroupController> core::clone::Clone for bpfman_csi::v1::group_controller_server::GroupControllerServer<T>
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::clone(&self) -> Self
impl<T: bpfman_csi::v1::group_controller_server::GroupController> tonic::server::NamedService for bpfman_csi::v1::group_controller_server::GroupControllerServer<T>
pub const bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::NAME: &'static str
impl<T: core::fmt::Debug + bpfman_csi::v1::group_controller_server::GroupController> core::fmt::Debug for bpfman_csi::v1::group_controller_server::GroupControllerServer<T>
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T> core::marker::Freeze for bpfman_csi::v1::group_controller_server::GroupControllerServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::marker::Send for bpfman_csi::v1::group_controller_server::GroupControllerServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::marker::Sync for bpfman_csi::v1::group_controller_server::GroupControllerServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::marker::Unpin for bpfman_csi::v1::group_controller_server::GroupControllerServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::group_controller_server::GroupControllerServer<T> where T: core::marker::Sync + core::marker::Send + 'static + core::panic::unwind_safe::RefUnwindSafe
impl<T> core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::group_controller_server::GroupControllerServer<T> where T: core::marker::Sync + core::marker::Send + 'static + core::panic::unwind_safe::RefUnwindSafe
impl<T, ReqBody, ResBody> tonic::client::service::GrpcService<ReqBody> for bpfman_csi::v1::group_controller_server::GroupControllerServer<T> where T: tower_service::Service<http::request::Request<ReqBody>, Response = http::response::Response<ResBody>>, <T as tower_service::Service<http::request::Request<ReqBody>>>::Error: core::convert::Into<alloc::boxed::Box<(dyn core::error::Error + core::marker::Sync + core::marker::Send)>>, ResBody: http_body::Body, <ResBody as http_body::Body>::Error: core::convert::Into<alloc::boxed::Box<(dyn core::error::Error + core::marker::Sync + core::marker::Send)>>
pub type bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::Error = <T as tower_service::Service<http::request::Request<ReqBody>>>::Error
pub type bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::Future = <T as tower_service::Service<http::request::Request<ReqBody>>>::Future
pub type bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::ResponseBody = ResBody
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::call(&mut self, request: http::request::Request<ReqBody>) -> <T as tonic::client::service::GrpcService<ReqBody>>::Future
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::poll_ready(&mut self, cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::result::Result<(), <T as tonic::client::service::GrpcService<ReqBody>>::Error>>
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::group_controller_server::GroupControllerServer<T> where U: core::convert::From<T>
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::group_controller_server::GroupControllerServer<T> where U: core::convert::Into<T>
pub type bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::Error = core::convert::Infallible
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::group_controller_server::GroupControllerServer<T> where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::group_controller_server::GroupControllerServer<T> where T: core::clone::Clone
pub type bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::Owned = T
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::group_controller_server::GroupControllerServer<T> where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::group_controller_server::GroupControllerServer<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::group_controller_server::GroupControllerServer<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::group_controller_server::GroupControllerServer<T>
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::group_controller_server::GroupControllerServer<T>
pub fn bpfman_csi::v1::group_controller_server::GroupControllerServer<T>::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::group_controller_server::GroupControllerServer<T>
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::group_controller_server::GroupControllerServer<T>
pub trait bpfman_csi::v1::group_controller_server::GroupController: core::marker::Send + core::marker::Sync + 'static
pub fn bpfman_csi::v1::group_controller_server::GroupController::create_volume_group_snapshot<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::CreateVolumeGroupSnapshotRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::CreateVolumeGroupSnapshotResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::group_controller_server::GroupController::delete_volume_group_snapshot<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::group_controller_server::GroupController::get_volume_group_snapshot<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::GetVolumeGroupSnapshotRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::GetVolumeGroupSnapshotResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::group_controller_server::GroupController::group_controller_get_capabilities<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::GroupControllerGetCapabilitiesRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::GroupControllerGetCapabilitiesResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub mod bpfman_csi::v1::group_controller_service_capability
pub mod bpfman_csi::v1::group_controller_service_capability::rpc
#[repr(i32)] pub enum bpfman_csi::v1::group_controller_service_capability::rpc::Type
pub bpfman_csi::v1::group_controller_service_capability::rpc::Type::CreateDeleteGetVolumeGroupSnapshot = 1
pub bpfman_csi::v1::group_controller_service_capability::rpc::Type::Unknown = 0
impl bpfman_csi::v1::group_controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::as_str_name(&self) -> &'static str
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::from_str_name(value: &str) -> core::option::Option<Self>
impl bpfman_csi::v1::group_controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::from_i32(value: i32) -> core::option::Option<bpfman_csi::v1::group_controller_service_capability::rpc::Type>
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::is_valid(value: i32) -> bool
impl core::clone::Clone for bpfman_csi::v1::group_controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::clone(&self) -> bpfman_csi::v1::group_controller_service_capability::rpc::Type
impl core::cmp::Eq for bpfman_csi::v1::group_controller_service_capability::rpc::Type
impl core::cmp::Ord for bpfman_csi::v1::group_controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::cmp(&self, other: &bpfman_csi::v1::group_controller_service_capability::rpc::Type) -> core::cmp::Ordering
impl core::cmp::PartialEq for bpfman_csi::v1::group_controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::eq(&self, other: &bpfman_csi::v1::group_controller_service_capability::rpc::Type) -> bool
impl core::cmp::PartialOrd for bpfman_csi::v1::group_controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::partial_cmp(&self, other: &bpfman_csi::v1::group_controller_service_capability::rpc::Type) -> core::option::Option<core::cmp::Ordering>
impl core::convert::From<bpfman_csi::v1::group_controller_service_capability::rpc::Type> for i32
pub fn i32::from(value: bpfman_csi::v1::group_controller_service_capability::rpc::Type) -> i32
impl core::convert::TryFrom<i32> for bpfman_csi::v1::group_controller_service_capability::rpc::Type
pub type bpfman_csi::v1::group_controller_service_capability::rpc::Type::Error = prost::error::DecodeError
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::try_from(value: i32) -> core::result::Result<bpfman_csi::v1::group_controller_service_capability::rpc::Type, prost::error::DecodeError>
impl core::default::Default for bpfman_csi::v1::group_controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::default() -> bpfman_csi::v1::group_controller_service_capability::rpc::Type
impl core::fmt::Debug for bpfman_csi::v1::group_controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::hash::Hash for bpfman_csi::v1::group_controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::hash<__H: core::hash::Hasher>(&self, state: &mut __H)
impl core::marker::Copy for bpfman_csi::v1::group_controller_service_capability::rpc::Type
impl core::marker::StructuralPartialEq for bpfman_csi::v1::group_controller_service_capability::rpc::Type
impl core::marker::Freeze for bpfman_csi::v1::group_controller_service_capability::rpc::Type
impl core::marker::Send for bpfman_csi::v1::group_controller_service_capability::rpc::Type
impl core::marker::Sync for bpfman_csi::v1::group_controller_service_capability::rpc::Type
impl core::marker::Unpin for bpfman_csi::v1::group_controller_service_capability::rpc::Type
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::group_controller_service_capability::rpc::Type
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::group_controller_service_capability::rpc::Type
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::group_controller_service_capability::rpc::Type where U: core::convert::From<T>
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::group_controller_service_capability::rpc::Type where U: core::convert::Into<T>
pub type bpfman_csi::v1::group_controller_service_capability::rpc::Type::Error = core::convert::Infallible
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::group_controller_service_capability::rpc::Type where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::group_controller_service_capability::rpc::Type::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::group_controller_service_capability::rpc::Type where T: core::clone::Clone
pub type bpfman_csi::v1::group_controller_service_capability::rpc::Type::Owned = T
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::group_controller_service_capability::rpc::Type where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::group_controller_service_capability::rpc::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::group_controller_service_capability::rpc::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::group_controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::group_controller_service_capability::rpc::Type
pub fn bpfman_csi::v1::group_controller_service_capability::rpc::Type::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::group_controller_service_capability::rpc::Type
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::group_controller_service_capability::rpc::Type
pub enum bpfman_csi::v1::group_controller_service_capability::Type
pub bpfman_csi::v1::group_controller_service_capability::Type::Rpc(bpfman_csi::v1::group_controller_service_capability::Rpc)
impl bpfman_csi::v1::group_controller_service_capability::Type
pub fn bpfman_csi::v1::group_controller_service_capability::Type::encode<B>(&self, buf: &mut B) where B: bytes::buf::buf_mut::BufMut
pub fn bpfman_csi::v1::group_controller_service_capability::Type::encoded_len(&self) -> usize
pub fn bpfman_csi::v1::group_controller_service_capability::Type::merge<B>(field: &mut core::option::Option<bpfman_csi::v1::group_controller_service_capability::Type>, tag: u32, wire_type: prost::encoding::WireType, buf: &mut B, ctx: prost::encoding::DecodeContext) -> core::result::Result<(), prost::error::DecodeError> where B: bytes::buf::buf_impl::Buf
impl core::clone::Clone for bpfman_csi::v1::group_controller_service_capability::Type
pub fn bpfman_csi::v1::group_controller_service_capability::Type::clone(&self) -> bpfman_csi::v1::group_controller_service_capability::Type
impl core::cmp::PartialEq for bpfman_csi::v1::group_controller_service_capability::Type
pub fn bpfman_csi::v1::group_controller_service_capability::Type::eq(&self, other: &bpfman_csi::v1::group_controller_service_capability::Type) -> bool
impl core::fmt::Debug for bpfman_csi::v1::group_controller_service_capability::Type
pub fn bpfman_csi::v1::group_controller_service_capability::Type::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::group_controller_service_capability::Type
impl core::marker::Freeze for bpfman_csi::v1::group_controller_service_capability::Type
impl core::marker::Send for bpfman_csi::v1::group_controller_service_capability::Type
impl core::marker::Sync for bpfman_csi::v1::group_controller_service_capability::Type
impl core::marker::Unpin for bpfman_csi::v1::group_controller_service_capability::Type
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::group_controller_service_capability::Type
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::group_controller_service_capability::Type
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::group_controller_service_capability::Type where U: core::convert::From<T>
pub fn bpfman_csi::v1::group_controller_service_capability::Type::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::group_controller_service_capability::Type where U: core::convert::Into<T>
pub type bpfman_csi::v1::group_controller_service_capability::Type::Error = core::convert::Infallible
pub fn bpfman_csi::v1::group_controller_service_capability::Type::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::group_controller_service_capability::Type where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::group_controller_service_capability::Type::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::group_controller_service_capability::Type::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::group_controller_service_capability::Type where T: core::clone::Clone
pub type bpfman_csi::v1::group_controller_service_capability::Type::Owned = T
pub fn bpfman_csi::v1::group_controller_service_capability::Type::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::group_controller_service_capability::Type::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::group_controller_service_capability::Type where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::group_controller_service_capability::Type::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::group_controller_service_capability::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::group_controller_service_capability::Type::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::group_controller_service_capability::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::group_controller_service_capability::Type::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::group_controller_service_capability::Type
pub fn bpfman_csi::v1::group_controller_service_capability::Type::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::group_controller_service_capability::Type
pub fn bpfman_csi::v1::group_controller_service_capability::Type::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::group_controller_service_capability::Type
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::group_controller_service_capability::Type
pub struct bpfman_csi::v1::group_controller_service_capability::Rpc
pub bpfman_csi::v1::group_controller_service_capability::Rpc::type: i32
impl bpfman_csi::v1::group_controller_service_capability::Rpc
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::set_type(&mut self, value: bpfman_csi::v1::group_controller_service_capability::rpc::Type)
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::type(&self) -> bpfman_csi::v1::group_controller_service_capability::rpc::Type
impl core::clone::Clone for bpfman_csi::v1::group_controller_service_capability::Rpc
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::clone(&self) -> bpfman_csi::v1::group_controller_service_capability::Rpc
impl core::cmp::PartialEq for bpfman_csi::v1::group_controller_service_capability::Rpc
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::eq(&self, other: &bpfman_csi::v1::group_controller_service_capability::Rpc) -> bool
impl core::default::Default for bpfman_csi::v1::group_controller_service_capability::Rpc
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::group_controller_service_capability::Rpc
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::group_controller_service_capability::Rpc
impl prost::message::Message for bpfman_csi::v1::group_controller_service_capability::Rpc
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::clear(&mut self)
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::group_controller_service_capability::Rpc
impl core::marker::Send for bpfman_csi::v1::group_controller_service_capability::Rpc
impl core::marker::Sync for bpfman_csi::v1::group_controller_service_capability::Rpc
impl core::marker::Unpin for bpfman_csi::v1::group_controller_service_capability::Rpc
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::group_controller_service_capability::Rpc
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::group_controller_service_capability::Rpc
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::group_controller_service_capability::Rpc where U: core::convert::From<T>
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::group_controller_service_capability::Rpc where U: core::convert::Into<T>
pub type bpfman_csi::v1::group_controller_service_capability::Rpc::Error = core::convert::Infallible
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::group_controller_service_capability::Rpc where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::group_controller_service_capability::Rpc::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::group_controller_service_capability::Rpc where T: core::clone::Clone
pub type bpfman_csi::v1::group_controller_service_capability::Rpc::Owned = T
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::group_controller_service_capability::Rpc where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::group_controller_service_capability::Rpc where T: core::marker::Sized
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::group_controller_service_capability::Rpc where T: core::marker::Sized
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::group_controller_service_capability::Rpc
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::group_controller_service_capability::Rpc
pub fn bpfman_csi::v1::group_controller_service_capability::Rpc::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::group_controller_service_capability::Rpc
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::group_controller_service_capability::Rpc
pub mod bpfman_csi::v1::identity_client
pub struct bpfman_csi::v1::identity_client::IdentityClient<T>
impl<T> bpfman_csi::v1::identity_client::IdentityClient<T> where T: tonic::client::service::GrpcService<tonic::body::BoxBody>, <T as tonic::client::service::GrpcService>::Error: core::convert::Into<tonic::codegen::StdError>, <T as tonic::client::service::GrpcService>::ResponseBody: http_body::Body<Data = bytes::bytes::Bytes> + core::marker::Send + 'static, <<T as tonic::client::service::GrpcService>::ResponseBody as http_body::Body>::Error: core::convert::Into<tonic::codegen::StdError> + core::marker::Send
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::accept_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub async fn bpfman_csi::v1::identity_client::IdentityClient<T>::get_plugin_capabilities(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::GetPluginCapabilitiesRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::GetPluginCapabilitiesResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::identity_client::IdentityClient<T>::get_plugin_info(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::GetPluginInfoRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::GetPluginInfoResponse>, tonic::status::Status>
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::max_decoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::max_encoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::new(inner: T) -> Self
pub async fn bpfman_csi::v1::identity_client::IdentityClient<T>::probe(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::ProbeRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::ProbeResponse>, tonic::status::Status>
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::send_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::with_interceptor<F>(inner: T, interceptor: F) -> bpfman_csi::v1::identity_client::IdentityClient<tonic::service::interceptor::InterceptedService<T, F>> where F: tonic::service::interceptor::Interceptor, <T as tonic::client::service::GrpcService>::ResponseBody: core::default::Default, T: tower_service::Service<http::request::Request<tonic::body::BoxBody>, Response = http::response::Response<<T as tonic::client::service::GrpcService<tonic::body::BoxBody>>::ResponseBody>>, <T as tower_service::Service<http::request::Request<tonic::body::BoxBody>>>::Error: core::convert::Into<tonic::codegen::StdError> + core::marker::Send + core::marker::Sync
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::with_origin(inner: T, origin: http::uri::Uri) -> Self
impl<T: core::clone::Clone> core::clone::Clone for bpfman_csi::v1::identity_client::IdentityClient<T>
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::clone(&self) -> bpfman_csi::v1::identity_client::IdentityClient<T>
impl<T: core::fmt::Debug> core::fmt::Debug for bpfman_csi::v1::identity_client::IdentityClient<T>
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T> !core::marker::Freeze for bpfman_csi::v1::identity_client::IdentityClient<T>
impl<T> core::marker::Send for bpfman_csi::v1::identity_client::IdentityClient<T> where T: core::marker::Send
impl<T> core::marker::Sync for bpfman_csi::v1::identity_client::IdentityClient<T> where T: core::marker::Sync
impl<T> core::marker::Unpin for bpfman_csi::v1::identity_client::IdentityClient<T> where T: core::marker::Unpin
impl<T> core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::identity_client::IdentityClient<T> where T: core::panic::unwind_safe::RefUnwindSafe
impl<T> core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::identity_client::IdentityClient<T> where T: core::panic::unwind_safe::UnwindSafe
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::identity_client::IdentityClient<T> where U: core::convert::From<T>
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::identity_client::IdentityClient<T> where U: core::convert::Into<T>
pub type bpfman_csi::v1::identity_client::IdentityClient<T>::Error = core::convert::Infallible
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::identity_client::IdentityClient<T> where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::identity_client::IdentityClient<T>::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::identity_client::IdentityClient<T> where T: core::clone::Clone
pub type bpfman_csi::v1::identity_client::IdentityClient<T>::Owned = T
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::identity_client::IdentityClient<T> where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::identity_client::IdentityClient<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::identity_client::IdentityClient<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::identity_client::IdentityClient<T>
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::identity_client::IdentityClient<T>
pub fn bpfman_csi::v1::identity_client::IdentityClient<T>::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::identity_client::IdentityClient<T>
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::identity_client::IdentityClient<T>
pub mod bpfman_csi::v1::identity_server
pub struct bpfman_csi::v1::identity_server::IdentityServer<T: bpfman_csi::v1::identity_server::Identity>
impl<T: bpfman_csi::v1::identity_server::Identity> bpfman_csi::v1::identity_server::IdentityServer<T>
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::accept_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::from_arc(inner: alloc::sync::Arc<T>) -> Self
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::max_decoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::max_encoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::new(inner: T) -> Self
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::send_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::with_interceptor<F>(inner: T, interceptor: F) -> tonic::service::interceptor::InterceptedService<Self, F> where F: tonic::service::interceptor::Interceptor
impl<T, B> tower_service::Service<http::request::Request<B>> for bpfman_csi::v1::identity_server::IdentityServer<T> where T: bpfman_csi::v1::identity_server::Identity, B: http_body::Body + core::marker::Send + 'static, <B as http_body::Body>::Error: core::convert::Into<tonic::codegen::StdError> + core::marker::Send + 'static
pub type bpfman_csi::v1::identity_server::IdentityServer<T>::Error = core::convert::Infallible
pub type bpfman_csi::v1::identity_server::IdentityServer<T>::Future = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<<bpfman_csi::v1::identity_server::IdentityServer<T> as tower_service::Service<http::request::Request<B>>>::Response, <bpfman_csi::v1::identity_server::IdentityServer<T> as tower_service::Service<http::request::Request<B>>>::Error>> + core::marker::Send)>>
pub type bpfman_csi::v1::identity_server::IdentityServer<T>::Response = http::response::Response<http_body::combinators::box_body::UnsyncBoxBody<bytes::bytes::Bytes, tonic::status::Status>>
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::call(&mut self, req: http::request::Request<B>) -> Self::Future
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::poll_ready(&mut self, _cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::result::Result<(), Self::Error>>
impl<T: bpfman_csi::v1::identity_server::Identity> core::clone::Clone for bpfman_csi::v1::identity_server::IdentityServer<T>
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::clone(&self) -> Self
impl<T: bpfman_csi::v1::identity_server::Identity> tonic::server::NamedService for bpfman_csi::v1::identity_server::IdentityServer<T>
pub const bpfman_csi::v1::identity_server::IdentityServer<T>::NAME: &'static str
impl<T: core::fmt::Debug + bpfman_csi::v1::identity_server::Identity> core::fmt::Debug for bpfman_csi::v1::identity_server::IdentityServer<T>
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T> core::marker::Freeze for bpfman_csi::v1::identity_server::IdentityServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::marker::Send for bpfman_csi::v1::identity_server::IdentityServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::marker::Sync for bpfman_csi::v1::identity_server::IdentityServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::marker::Unpin for bpfman_csi::v1::identity_server::IdentityServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::identity_server::IdentityServer<T> where T: core::marker::Sync + core::marker::Send + 'static + core::panic::unwind_safe::RefUnwindSafe
impl<T> core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::identity_server::IdentityServer<T> where T: core::marker::Sync + core::marker::Send + 'static + core::panic::unwind_safe::RefUnwindSafe
impl<T, ReqBody, ResBody> tonic::client::service::GrpcService<ReqBody> for bpfman_csi::v1::identity_server::IdentityServer<T> where T: tower_service::Service<http::request::Request<ReqBody>, Response = http::response::Response<ResBody>>, <T as tower_service::Service<http::request::Request<ReqBody>>>::Error: core::convert::Into<alloc::boxed::Box<(dyn core::error::Error + core::marker::Sync + core::marker::Send)>>, ResBody: http_body::Body, <ResBody as http_body::Body>::Error: core::convert::Into<alloc::boxed::Box<(dyn core::error::Error + core::marker::Sync + core::marker::Send)>>
pub type bpfman_csi::v1::identity_server::IdentityServer<T>::Error = <T as tower_service::Service<http::request::Request<ReqBody>>>::Error
pub type bpfman_csi::v1::identity_server::IdentityServer<T>::Future = <T as tower_service::Service<http::request::Request<ReqBody>>>::Future
pub type bpfman_csi::v1::identity_server::IdentityServer<T>::ResponseBody = ResBody
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::call(&mut self, request: http::request::Request<ReqBody>) -> <T as tonic::client::service::GrpcService<ReqBody>>::Future
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::poll_ready(&mut self, cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::result::Result<(), <T as tonic::client::service::GrpcService<ReqBody>>::Error>>
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::identity_server::IdentityServer<T> where U: core::convert::From<T>
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::identity_server::IdentityServer<T> where U: core::convert::Into<T>
pub type bpfman_csi::v1::identity_server::IdentityServer<T>::Error = core::convert::Infallible
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::identity_server::IdentityServer<T> where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::identity_server::IdentityServer<T>::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::identity_server::IdentityServer<T> where T: core::clone::Clone
pub type bpfman_csi::v1::identity_server::IdentityServer<T>::Owned = T
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::identity_server::IdentityServer<T> where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::identity_server::IdentityServer<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::identity_server::IdentityServer<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::identity_server::IdentityServer<T>
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::identity_server::IdentityServer<T>
pub fn bpfman_csi::v1::identity_server::IdentityServer<T>::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::identity_server::IdentityServer<T>
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::identity_server::IdentityServer<T>
pub trait bpfman_csi::v1::identity_server::Identity: core::marker::Send + core::marker::Sync + 'static
pub fn bpfman_csi::v1::identity_server::Identity::get_plugin_capabilities<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::GetPluginCapabilitiesRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::GetPluginCapabilitiesResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::identity_server::Identity::get_plugin_info<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::GetPluginInfoRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::GetPluginInfoResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::identity_server::Identity::probe<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::ProbeRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::ProbeResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub mod bpfman_csi::v1::list_snapshots_response
pub struct bpfman_csi::v1::list_snapshots_response::Entry
pub bpfman_csi::v1::list_snapshots_response::Entry::snapshot: core::option::Option<bpfman_csi::v1::Snapshot>
impl core::clone::Clone for bpfman_csi::v1::list_snapshots_response::Entry
pub fn bpfman_csi::v1::list_snapshots_response::Entry::clone(&self) -> bpfman_csi::v1::list_snapshots_response::Entry
impl core::cmp::PartialEq for bpfman_csi::v1::list_snapshots_response::Entry
pub fn bpfman_csi::v1::list_snapshots_response::Entry::eq(&self, other: &bpfman_csi::v1::list_snapshots_response::Entry) -> bool
impl core::default::Default for bpfman_csi::v1::list_snapshots_response::Entry
pub fn bpfman_csi::v1::list_snapshots_response::Entry::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::list_snapshots_response::Entry
pub fn bpfman_csi::v1::list_snapshots_response::Entry::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::list_snapshots_response::Entry
impl prost::message::Message for bpfman_csi::v1::list_snapshots_response::Entry
pub fn bpfman_csi::v1::list_snapshots_response::Entry::clear(&mut self)
pub fn bpfman_csi::v1::list_snapshots_response::Entry::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::list_snapshots_response::Entry
impl core::marker::Send for bpfman_csi::v1::list_snapshots_response::Entry
impl core::marker::Sync for bpfman_csi::v1::list_snapshots_response::Entry
impl core::marker::Unpin for bpfman_csi::v1::list_snapshots_response::Entry
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::list_snapshots_response::Entry
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::list_snapshots_response::Entry
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::list_snapshots_response::Entry where U: core::convert::From<T>
pub fn bpfman_csi::v1::list_snapshots_response::Entry::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::list_snapshots_response::Entry where U: core::convert::Into<T>
pub type bpfman_csi::v1::list_snapshots_response::Entry::Error = core::convert::Infallible
pub fn bpfman_csi::v1::list_snapshots_response::Entry::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::list_snapshots_response::Entry where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::list_snapshots_response::Entry::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::list_snapshots_response::Entry::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::list_snapshots_response::Entry where T: core::clone::Clone
pub type bpfman_csi::v1::list_snapshots_response::Entry::Owned = T
pub fn bpfman_csi::v1::list_snapshots_response::Entry::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::list_snapshots_response::Entry::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::list_snapshots_response::Entry where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::list_snapshots_response::Entry::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::list_snapshots_response::Entry where T: core::marker::Sized
pub fn bpfman_csi::v1::list_snapshots_response::Entry::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::list_snapshots_response::Entry where T: core::marker::Sized
pub fn bpfman_csi::v1::list_snapshots_response::Entry::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::list_snapshots_response::Entry
pub fn bpfman_csi::v1::list_snapshots_response::Entry::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::list_snapshots_response::Entry
pub fn bpfman_csi::v1::list_snapshots_response::Entry::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::list_snapshots_response::Entry
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::list_snapshots_response::Entry
pub mod bpfman_csi::v1::list_volumes_response
pub struct bpfman_csi::v1::list_volumes_response::Entry
pub bpfman_csi::v1::list_volumes_response::Entry::status: core::option::Option<bpfman_csi::v1::list_volumes_response::VolumeStatus>
pub bpfman_csi::v1::list_volumes_response::Entry::volume: core::option::Option<bpfman_csi::v1::Volume>
impl core::clone::Clone for bpfman_csi::v1::list_volumes_response::Entry
pub fn bpfman_csi::v1::list_volumes_response::Entry::clone(&self) -> bpfman_csi::v1::list_volumes_response::Entry
impl core::cmp::PartialEq for bpfman_csi::v1::list_volumes_response::Entry
pub fn bpfman_csi::v1::list_volumes_response::Entry::eq(&self, other: &bpfman_csi::v1::list_volumes_response::Entry) -> bool
impl core::default::Default for bpfman_csi::v1::list_volumes_response::Entry
pub fn bpfman_csi::v1::list_volumes_response::Entry::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::list_volumes_response::Entry
pub fn bpfman_csi::v1::list_volumes_response::Entry::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::list_volumes_response::Entry
impl prost::message::Message for bpfman_csi::v1::list_volumes_response::Entry
pub fn bpfman_csi::v1::list_volumes_response::Entry::clear(&mut self)
pub fn bpfman_csi::v1::list_volumes_response::Entry::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::list_volumes_response::Entry
impl core::marker::Send for bpfman_csi::v1::list_volumes_response::Entry
impl core::marker::Sync for bpfman_csi::v1::list_volumes_response::Entry
impl core::marker::Unpin for bpfman_csi::v1::list_volumes_response::Entry
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::list_volumes_response::Entry
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::list_volumes_response::Entry
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::list_volumes_response::Entry where U: core::convert::From<T>
pub fn bpfman_csi::v1::list_volumes_response::Entry::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::list_volumes_response::Entry where U: core::convert::Into<T>
pub type bpfman_csi::v1::list_volumes_response::Entry::Error = core::convert::Infallible
pub fn bpfman_csi::v1::list_volumes_response::Entry::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::list_volumes_response::Entry where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::list_volumes_response::Entry::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::list_volumes_response::Entry::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::list_volumes_response::Entry where T: core::clone::Clone
pub type bpfman_csi::v1::list_volumes_response::Entry::Owned = T
pub fn bpfman_csi::v1::list_volumes_response::Entry::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::list_volumes_response::Entry::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::list_volumes_response::Entry where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::list_volumes_response::Entry::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::list_volumes_response::Entry where T: core::marker::Sized
pub fn bpfman_csi::v1::list_volumes_response::Entry::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::list_volumes_response::Entry where T: core::marker::Sized
pub fn bpfman_csi::v1::list_volumes_response::Entry::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::list_volumes_response::Entry
pub fn bpfman_csi::v1::list_volumes_response::Entry::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::list_volumes_response::Entry
pub fn bpfman_csi::v1::list_volumes_response::Entry::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::list_volumes_response::Entry
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::list_volumes_response::Entry
pub struct bpfman_csi::v1::list_volumes_response::VolumeStatus
pub bpfman_csi::v1::list_volumes_response::VolumeStatus::published_node_ids: alloc::vec::Vec<alloc::string::String>
pub bpfman_csi::v1::list_volumes_response::VolumeStatus::volume_condition: core::option::Option<bpfman_csi::v1::VolumeCondition>
impl core::clone::Clone for bpfman_csi::v1::list_volumes_response::VolumeStatus
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::clone(&self) -> bpfman_csi::v1::list_volumes_response::VolumeStatus
impl core::cmp::PartialEq for bpfman_csi::v1::list_volumes_response::VolumeStatus
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::eq(&self, other: &bpfman_csi::v1::list_volumes_response::VolumeStatus) -> bool
impl core::default::Default for bpfman_csi::v1::list_volumes_response::VolumeStatus
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::list_volumes_response::VolumeStatus
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::list_volumes_response::VolumeStatus
impl prost::message::Message for bpfman_csi::v1::list_volumes_response::VolumeStatus
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::clear(&mut self)
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::list_volumes_response::VolumeStatus
impl core::marker::Send for bpfman_csi::v1::list_volumes_response::VolumeStatus
impl core::marker::Sync for bpfman_csi::v1::list_volumes_response::VolumeStatus
impl core::marker::Unpin for bpfman_csi::v1::list_volumes_response::VolumeStatus
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::list_volumes_response::VolumeStatus
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::list_volumes_response::VolumeStatus
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::list_volumes_response::VolumeStatus where U: core::convert::From<T>
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::list_volumes_response::VolumeStatus where U: core::convert::Into<T>
pub type bpfman_csi::v1::list_volumes_response::VolumeStatus::Error = core::convert::Infallible
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::list_volumes_response::VolumeStatus where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::list_volumes_response::VolumeStatus::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::list_volumes_response::VolumeStatus where T: core::clone::Clone
pub type bpfman_csi::v1::list_volumes_response::VolumeStatus::Owned = T
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::list_volumes_response::VolumeStatus where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::list_volumes_response::VolumeStatus where T: core::marker::Sized
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::list_volumes_response::VolumeStatus where T: core::marker::Sized
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::list_volumes_response::VolumeStatus
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::list_volumes_response::VolumeStatus
pub fn bpfman_csi::v1::list_volumes_response::VolumeStatus::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::list_volumes_response::VolumeStatus
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::list_volumes_response::VolumeStatus
pub mod bpfman_csi::v1::node_client
pub struct bpfman_csi::v1::node_client::NodeClient<T>
impl<T> bpfman_csi::v1::node_client::NodeClient<T> where T: tonic::client::service::GrpcService<tonic::body::BoxBody>, <T as tonic::client::service::GrpcService>::Error: core::convert::Into<tonic::codegen::StdError>, <T as tonic::client::service::GrpcService>::ResponseBody: http_body::Body<Data = bytes::bytes::Bytes> + core::marker::Send + 'static, <<T as tonic::client::service::GrpcService>::ResponseBody as http_body::Body>::Error: core::convert::Into<tonic::codegen::StdError> + core::marker::Send
pub fn bpfman_csi::v1::node_client::NodeClient<T>::accept_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub fn bpfman_csi::v1::node_client::NodeClient<T>::max_decoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::node_client::NodeClient<T>::max_encoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::node_client::NodeClient<T>::new(inner: T) -> Self
pub async fn bpfman_csi::v1::node_client::NodeClient<T>::node_expand_volume(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::NodeExpandVolumeRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::NodeExpandVolumeResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::node_client::NodeClient<T>::node_get_capabilities(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::NodeGetCapabilitiesRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::NodeGetCapabilitiesResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::node_client::NodeClient<T>::node_get_info(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::NodeGetInfoRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::NodeGetInfoResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::node_client::NodeClient<T>::node_get_volume_stats(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::NodeGetVolumeStatsRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::NodeGetVolumeStatsResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::node_client::NodeClient<T>::node_publish_volume(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::NodePublishVolumeRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::NodePublishVolumeResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::node_client::NodeClient<T>::node_stage_volume(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::NodeStageVolumeRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::NodeStageVolumeResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::node_client::NodeClient<T>::node_unpublish_volume(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::NodeUnpublishVolumeRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::NodeUnpublishVolumeResponse>, tonic::status::Status>
pub async fn bpfman_csi::v1::node_client::NodeClient<T>::node_unstage_volume(&mut self, request: impl tonic::request::IntoRequest<bpfman_csi::v1::NodeUnstageVolumeRequest>) -> core::result::Result<tonic::response::Response<bpfman_csi::v1::NodeUnstageVolumeResponse>, tonic::status::Status>
pub fn bpfman_csi::v1::node_client::NodeClient<T>::send_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub fn bpfman_csi::v1::node_client::NodeClient<T>::with_interceptor<F>(inner: T, interceptor: F) -> bpfman_csi::v1::node_client::NodeClient<tonic::service::interceptor::InterceptedService<T, F>> where F: tonic::service::interceptor::Interceptor, <T as tonic::client::service::GrpcService>::ResponseBody: core::default::Default, T: tower_service::Service<http::request::Request<tonic::body::BoxBody>, Response = http::response::Response<<T as tonic::client::service::GrpcService<tonic::body::BoxBody>>::ResponseBody>>, <T as tower_service::Service<http::request::Request<tonic::body::BoxBody>>>::Error: core::convert::Into<tonic::codegen::StdError> + core::marker::Send + core::marker::Sync
pub fn bpfman_csi::v1::node_client::NodeClient<T>::with_origin(inner: T, origin: http::uri::Uri) -> Self
impl<T: core::clone::Clone> core::clone::Clone for bpfman_csi::v1::node_client::NodeClient<T>
pub fn bpfman_csi::v1::node_client::NodeClient<T>::clone(&self) -> bpfman_csi::v1::node_client::NodeClient<T>
impl<T: core::fmt::Debug> core::fmt::Debug for bpfman_csi::v1::node_client::NodeClient<T>
pub fn bpfman_csi::v1::node_client::NodeClient<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T> !core::marker::Freeze for bpfman_csi::v1::node_client::NodeClient<T>
impl<T> core::marker::Send for bpfman_csi::v1::node_client::NodeClient<T> where T: core::marker::Send
impl<T> core::marker::Sync for bpfman_csi::v1::node_client::NodeClient<T> where T: core::marker::Sync
impl<T> core::marker::Unpin for bpfman_csi::v1::node_client::NodeClient<T> where T: core::marker::Unpin
impl<T> core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::node_client::NodeClient<T> where T: core::panic::unwind_safe::RefUnwindSafe
impl<T> core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::node_client::NodeClient<T> where T: core::panic::unwind_safe::UnwindSafe
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::node_client::NodeClient<T> where U: core::convert::From<T>
pub fn bpfman_csi::v1::node_client::NodeClient<T>::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::node_client::NodeClient<T> where U: core::convert::Into<T>
pub type bpfman_csi::v1::node_client::NodeClient<T>::Error = core::convert::Infallible
pub fn bpfman_csi::v1::node_client::NodeClient<T>::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::node_client::NodeClient<T> where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::node_client::NodeClient<T>::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::node_client::NodeClient<T>::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::node_client::NodeClient<T> where T: core::clone::Clone
pub type bpfman_csi::v1::node_client::NodeClient<T>::Owned = T
pub fn bpfman_csi::v1::node_client::NodeClient<T>::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::node_client::NodeClient<T>::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::node_client::NodeClient<T> where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::node_client::NodeClient<T>::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::node_client::NodeClient<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::node_client::NodeClient<T>::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::node_client::NodeClient<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::node_client::NodeClient<T>::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::node_client::NodeClient<T>
pub fn bpfman_csi::v1::node_client::NodeClient<T>::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::node_client::NodeClient<T>
pub fn bpfman_csi::v1::node_client::NodeClient<T>::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::node_client::NodeClient<T>
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::node_client::NodeClient<T>
pub mod bpfman_csi::v1::node_server
pub struct bpfman_csi::v1::node_server::NodeServer<T: bpfman_csi::v1::node_server::Node>
impl<T: bpfman_csi::v1::node_server::Node> bpfman_csi::v1::node_server::NodeServer<T>
pub fn bpfman_csi::v1::node_server::NodeServer<T>::accept_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub fn bpfman_csi::v1::node_server::NodeServer<T>::from_arc(inner: alloc::sync::Arc<T>) -> Self
pub fn bpfman_csi::v1::node_server::NodeServer<T>::max_decoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::node_server::NodeServer<T>::max_encoding_message_size(self, limit: usize) -> Self
pub fn bpfman_csi::v1::node_server::NodeServer<T>::new(inner: T) -> Self
pub fn bpfman_csi::v1::node_server::NodeServer<T>::send_compressed(self, encoding: tonic::codec::compression::CompressionEncoding) -> Self
pub fn bpfman_csi::v1::node_server::NodeServer<T>::with_interceptor<F>(inner: T, interceptor: F) -> tonic::service::interceptor::InterceptedService<Self, F> where F: tonic::service::interceptor::Interceptor
impl<T, B> tower_service::Service<http::request::Request<B>> for bpfman_csi::v1::node_server::NodeServer<T> where T: bpfman_csi::v1::node_server::Node, B: http_body::Body + core::marker::Send + 'static, <B as http_body::Body>::Error: core::convert::Into<tonic::codegen::StdError> + core::marker::Send + 'static
pub type bpfman_csi::v1::node_server::NodeServer<T>::Error = core::convert::Infallible
pub type bpfman_csi::v1::node_server::NodeServer<T>::Future = core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<<bpfman_csi::v1::node_server::NodeServer<T> as tower_service::Service<http::request::Request<B>>>::Response, <bpfman_csi::v1::node_server::NodeServer<T> as tower_service::Service<http::request::Request<B>>>::Error>> + core::marker::Send)>>
pub type bpfman_csi::v1::node_server::NodeServer<T>::Response = http::response::Response<http_body::combinators::box_body::UnsyncBoxBody<bytes::bytes::Bytes, tonic::status::Status>>
pub fn bpfman_csi::v1::node_server::NodeServer<T>::call(&mut self, req: http::request::Request<B>) -> Self::Future
pub fn bpfman_csi::v1::node_server::NodeServer<T>::poll_ready(&mut self, _cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::result::Result<(), Self::Error>>
impl<T: bpfman_csi::v1::node_server::Node> core::clone::Clone for bpfman_csi::v1::node_server::NodeServer<T>
pub fn bpfman_csi::v1::node_server::NodeServer<T>::clone(&self) -> Self
impl<T: bpfman_csi::v1::node_server::Node> tonic::server::NamedService for bpfman_csi::v1::node_server::NodeServer<T>
pub const bpfman_csi::v1::node_server::NodeServer<T>::NAME: &'static str
impl<T: core::fmt::Debug + bpfman_csi::v1::node_server::Node> core::fmt::Debug for bpfman_csi::v1::node_server::NodeServer<T>
pub fn bpfman_csi::v1::node_server::NodeServer<T>::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl<T> core::marker::Freeze for bpfman_csi::v1::node_server::NodeServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::marker::Send for bpfman_csi::v1::node_server::NodeServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::marker::Sync for bpfman_csi::v1::node_server::NodeServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::marker::Unpin for bpfman_csi::v1::node_server::NodeServer<T> where T: core::marker::Sync + core::marker::Send + 'static
impl<T> core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::node_server::NodeServer<T> where T: core::marker::Sync + core::marker::Send + 'static + core::panic::unwind_safe::RefUnwindSafe
impl<T> core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::node_server::NodeServer<T> where T: core::marker::Sync + core::marker::Send + 'static + core::panic::unwind_safe::RefUnwindSafe
impl<T, ReqBody, ResBody> tonic::client::service::GrpcService<ReqBody> for bpfman_csi::v1::node_server::NodeServer<T> where T: tower_service::Service<http::request::Request<ReqBody>, Response = http::response::Response<ResBody>>, <T as tower_service::Service<http::request::Request<ReqBody>>>::Error: core::convert::Into<alloc::boxed::Box<(dyn core::error::Error + core::marker::Sync + core::marker::Send)>>, ResBody: http_body::Body, <ResBody as http_body::Body>::Error: core::convert::Into<alloc::boxed::Box<(dyn core::error::Error + core::marker::Sync + core::marker::Send)>>
pub type bpfman_csi::v1::node_server::NodeServer<T>::Error = <T as tower_service::Service<http::request::Request<ReqBody>>>::Error
pub type bpfman_csi::v1::node_server::NodeServer<T>::Future = <T as tower_service::Service<http::request::Request<ReqBody>>>::Future
pub type bpfman_csi::v1::node_server::NodeServer<T>::ResponseBody = ResBody
pub fn bpfman_csi::v1::node_server::NodeServer<T>::call(&mut self, request: http::request::Request<ReqBody>) -> <T as tonic::client::service::GrpcService<ReqBody>>::Future
pub fn bpfman_csi::v1::node_server::NodeServer<T>::poll_ready(&mut self, cx: &mut core::task::wake::Context<'_>) -> core::task::poll::Poll<core::result::Result<(), <T as tonic::client::service::GrpcService<ReqBody>>::Error>>
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::node_server::NodeServer<T> where U: core::convert::From<T>
pub fn bpfman_csi::v1::node_server::NodeServer<T>::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::node_server::NodeServer<T> where U: core::convert::Into<T>
pub type bpfman_csi::v1::node_server::NodeServer<T>::Error = core::convert::Infallible
pub fn bpfman_csi::v1::node_server::NodeServer<T>::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::node_server::NodeServer<T> where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::node_server::NodeServer<T>::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::node_server::NodeServer<T>::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::node_server::NodeServer<T> where T: core::clone::Clone
pub type bpfman_csi::v1::node_server::NodeServer<T>::Owned = T
pub fn bpfman_csi::v1::node_server::NodeServer<T>::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::node_server::NodeServer<T>::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::node_server::NodeServer<T> where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::node_server::NodeServer<T>::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::node_server::NodeServer<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::node_server::NodeServer<T>::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::node_server::NodeServer<T> where T: core::marker::Sized
pub fn bpfman_csi::v1::node_server::NodeServer<T>::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::node_server::NodeServer<T>
pub fn bpfman_csi::v1::node_server::NodeServer<T>::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::node_server::NodeServer<T>
pub fn bpfman_csi::v1::node_server::NodeServer<T>::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::node_server::NodeServer<T>
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::node_server::NodeServer<T>
pub trait bpfman_csi::v1::node_server::Node: core::marker::Send + core::marker::Sync + 'static
pub fn bpfman_csi::v1::node_server::Node::node_expand_volume<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::NodeExpandVolumeRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::NodeExpandVolumeResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::node_server::Node::node_get_capabilities<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::NodeGetCapabilitiesRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::NodeGetCapabilitiesResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::node_server::Node::node_get_info<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::NodeGetInfoRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::NodeGetInfoResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::node_server::Node::node_get_volume_stats<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::NodeGetVolumeStatsRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::NodeGetVolumeStatsResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::node_server::Node::node_publish_volume<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::NodePublishVolumeRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::NodePublishVolumeResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::node_server::Node::node_stage_volume<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::NodeStageVolumeRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::NodeStageVolumeResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::node_server::Node::node_unpublish_volume<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::NodeUnpublishVolumeRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::NodeUnpublishVolumeResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub fn bpfman_csi::v1::node_server::Node::node_unstage_volume<'life0, 'async_trait>(&'life0 self, request: tonic::request::Request<bpfman_csi::v1::NodeUnstageVolumeRequest>) -> core::pin::Pin<alloc::boxed::Box<(dyn core::future::future::Future<Output = core::result::Result<tonic::response::Response<bpfman_csi::v1::NodeUnstageVolumeResponse>, tonic::status::Status>> + core::marker::Send + 'async_trait)>> where Self: 'async_trait, 'life0
pub mod bpfman_csi::v1::node_service_capability
pub mod bpfman_csi::v1::node_service_capability::rpc
#[repr(i32)] pub enum bpfman_csi::v1::node_service_capability::rpc::Type
pub bpfman_csi::v1::node_service_capability::rpc::Type::ExpandVolume = 3
pub bpfman_csi::v1::node_service_capability::rpc::Type::GetVolumeStats = 2
pub bpfman_csi::v1::node_service_capability::rpc::Type::SingleNodeMultiWriter = 5
pub bpfman_csi::v1::node_service_capability::rpc::Type::StageUnstageVolume = 1
pub bpfman_csi::v1::node_service_capability::rpc::Type::Unknown = 0
pub bpfman_csi::v1::node_service_capability::rpc::Type::VolumeCondition = 4
pub bpfman_csi::v1::node_service_capability::rpc::Type::VolumeMountGroup = 6
impl bpfman_csi::v1::node_service_capability::rpc::Type
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::as_str_name(&self) -> &'static str
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::from_str_name(value: &str) -> core::option::Option<Self>
impl bpfman_csi::v1::node_service_capability::rpc::Type
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::from_i32(value: i32) -> core::option::Option<bpfman_csi::v1::node_service_capability::rpc::Type>
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::is_valid(value: i32) -> bool
impl core::clone::Clone for bpfman_csi::v1::node_service_capability::rpc::Type
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::clone(&self) -> bpfman_csi::v1::node_service_capability::rpc::Type
impl core::cmp::Eq for bpfman_csi::v1::node_service_capability::rpc::Type
impl core::cmp::Ord for bpfman_csi::v1::node_service_capability::rpc::Type
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::cmp(&self, other: &bpfman_csi::v1::node_service_capability::rpc::Type) -> core::cmp::Ordering
impl core::cmp::PartialEq for bpfman_csi::v1::node_service_capability::rpc::Type
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::eq(&self, other: &bpfman_csi::v1::node_service_capability::rpc::Type) -> bool
impl core::cmp::PartialOrd for bpfman_csi::v1::node_service_capability::rpc::Type
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::partial_cmp(&self, other: &bpfman_csi::v1::node_service_capability::rpc::Type) -> core::option::Option<core::cmp::Ordering>
impl core::convert::From<bpfman_csi::v1::node_service_capability::rpc::Type> for i32
pub fn i32::from(value: bpfman_csi::v1::node_service_capability::rpc::Type) -> i32
impl core::convert::TryFrom<i32> for bpfman_csi::v1::node_service_capability::rpc::Type
pub type bpfman_csi::v1::node_service_capability::rpc::Type::Error = prost::error::DecodeError
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::try_from(value: i32) -> core::result::Result<bpfman_csi::v1::node_service_capability::rpc::Type, prost::error::DecodeError>
impl core::default::Default for bpfman_csi::v1::node_service_capability::rpc::Type
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::default() -> bpfman_csi::v1::node_service_capability::rpc::Type
impl core::fmt::Debug for bpfman_csi::v1::node_service_capability::rpc::Type
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::hash::Hash for bpfman_csi::v1::node_service_capability::rpc::Type
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::hash<__H: core::hash::Hasher>(&self, state: &mut __H)
impl core::marker::Copy for bpfman_csi::v1::node_service_capability::rpc::Type
impl core::marker::StructuralPartialEq for bpfman_csi::v1::node_service_capability::rpc::Type
impl core::marker::Freeze for bpfman_csi::v1::node_service_capability::rpc::Type
impl core::marker::Send for bpfman_csi::v1::node_service_capability::rpc::Type
impl core::marker::Sync for bpfman_csi::v1::node_service_capability::rpc::Type
impl core::marker::Unpin for bpfman_csi::v1::node_service_capability::rpc::Type
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::node_service_capability::rpc::Type
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::node_service_capability::rpc::Type
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::node_service_capability::rpc::Type where U: core::convert::From<T>
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::node_service_capability::rpc::Type where U: core::convert::Into<T>
pub type bpfman_csi::v1::node_service_capability::rpc::Type::Error = core::convert::Infallible
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::node_service_capability::rpc::Type where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::node_service_capability::rpc::Type::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::node_service_capability::rpc::Type where T: core::clone::Clone
pub type bpfman_csi::v1::node_service_capability::rpc::Type::Owned = T
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::node_service_capability::rpc::Type where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::node_service_capability::rpc::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::node_service_capability::rpc::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::node_service_capability::rpc::Type
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::node_service_capability::rpc::Type
pub fn bpfman_csi::v1::node_service_capability::rpc::Type::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::node_service_capability::rpc::Type
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::node_service_capability::rpc::Type
pub enum bpfman_csi::v1::node_service_capability::Type
pub bpfman_csi::v1::node_service_capability::Type::Rpc(bpfman_csi::v1::node_service_capability::Rpc)
impl bpfman_csi::v1::node_service_capability::Type
pub fn bpfman_csi::v1::node_service_capability::Type::encode<B>(&self, buf: &mut B) where B: bytes::buf::buf_mut::BufMut
pub fn bpfman_csi::v1::node_service_capability::Type::encoded_len(&self) -> usize
pub fn bpfman_csi::v1::node_service_capability::Type::merge<B>(field: &mut core::option::Option<bpfman_csi::v1::node_service_capability::Type>, tag: u32, wire_type: prost::encoding::WireType, buf: &mut B, ctx: prost::encoding::DecodeContext) -> core::result::Result<(), prost::error::DecodeError> where B: bytes::buf::buf_impl::Buf
impl core::clone::Clone for bpfman_csi::v1::node_service_capability::Type
pub fn bpfman_csi::v1::node_service_capability::Type::clone(&self) -> bpfman_csi::v1::node_service_capability::Type
impl core::cmp::PartialEq for bpfman_csi::v1::node_service_capability::Type
pub fn bpfman_csi::v1::node_service_capability::Type::eq(&self, other: &bpfman_csi::v1::node_service_capability::Type) -> bool
impl core::fmt::Debug for bpfman_csi::v1::node_service_capability::Type
pub fn bpfman_csi::v1::node_service_capability::Type::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::node_service_capability::Type
impl core::marker::Freeze for bpfman_csi::v1::node_service_capability::Type
impl core::marker::Send for bpfman_csi::v1::node_service_capability::Type
impl core::marker::Sync for bpfman_csi::v1::node_service_capability::Type
impl core::marker::Unpin for bpfman_csi::v1::node_service_capability::Type
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::node_service_capability::Type
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::node_service_capability::Type
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::node_service_capability::Type where U: core::convert::From<T>
pub fn bpfman_csi::v1::node_service_capability::Type::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::node_service_capability::Type where U: core::convert::Into<T>
pub type bpfman_csi::v1::node_service_capability::Type::Error = core::convert::Infallible
pub fn bpfman_csi::v1::node_service_capability::Type::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::node_service_capability::Type where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::node_service_capability::Type::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::node_service_capability::Type::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::node_service_capability::Type where T: core::clone::Clone
pub type bpfman_csi::v1::node_service_capability::Type::Owned = T
pub fn bpfman_csi::v1::node_service_capability::Type::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::node_service_capability::Type::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::node_service_capability::Type where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::node_service_capability::Type::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::node_service_capability::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::node_service_capability::Type::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::node_service_capability::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::node_service_capability::Type::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::node_service_capability::Type
pub fn bpfman_csi::v1::node_service_capability::Type::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::node_service_capability::Type
pub fn bpfman_csi::v1::node_service_capability::Type::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::node_service_capability::Type
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::node_service_capability::Type
pub struct bpfman_csi::v1::node_service_capability::Rpc
pub bpfman_csi::v1::node_service_capability::Rpc::type: i32
impl bpfman_csi::v1::node_service_capability::Rpc
pub fn bpfman_csi::v1::node_service_capability::Rpc::set_type(&mut self, value: bpfman_csi::v1::node_service_capability::rpc::Type)
pub fn bpfman_csi::v1::node_service_capability::Rpc::type(&self) -> bpfman_csi::v1::node_service_capability::rpc::Type
impl core::clone::Clone for bpfman_csi::v1::node_service_capability::Rpc
pub fn bpfman_csi::v1::node_service_capability::Rpc::clone(&self) -> bpfman_csi::v1::node_service_capability::Rpc
impl core::cmp::PartialEq for bpfman_csi::v1::node_service_capability::Rpc
pub fn bpfman_csi::v1::node_service_capability::Rpc::eq(&self, other: &bpfman_csi::v1::node_service_capability::Rpc) -> bool
impl core::default::Default for bpfman_csi::v1::node_service_capability::Rpc
pub fn bpfman_csi::v1::node_service_capability::Rpc::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::node_service_capability::Rpc
pub fn bpfman_csi::v1::node_service_capability::Rpc::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::node_service_capability::Rpc
impl prost::message::Message for bpfman_csi::v1::node_service_capability::Rpc
pub fn bpfman_csi::v1::node_service_capability::Rpc::clear(&mut self)
pub fn bpfman_csi::v1::node_service_capability::Rpc::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::node_service_capability::Rpc
impl core::marker::Send for bpfman_csi::v1::node_service_capability::Rpc
impl core::marker::Sync for bpfman_csi::v1::node_service_capability::Rpc
impl core::marker::Unpin for bpfman_csi::v1::node_service_capability::Rpc
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::node_service_capability::Rpc
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::node_service_capability::Rpc
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::node_service_capability::Rpc where U: core::convert::From<T>
pub fn bpfman_csi::v1::node_service_capability::Rpc::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::node_service_capability::Rpc where U: core::convert::Into<T>
pub type bpfman_csi::v1::node_service_capability::Rpc::Error = core::convert::Infallible
pub fn bpfman_csi::v1::node_service_capability::Rpc::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::node_service_capability::Rpc where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::node_service_capability::Rpc::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::node_service_capability::Rpc::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::node_service_capability::Rpc where T: core::clone::Clone
pub type bpfman_csi::v1::node_service_capability::Rpc::Owned = T
pub fn bpfman_csi::v1::node_service_capability::Rpc::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::node_service_capability::Rpc::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::node_service_capability::Rpc where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::node_service_capability::Rpc::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::node_service_capability::Rpc where T: core::marker::Sized
pub fn bpfman_csi::v1::node_service_capability::Rpc::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::node_service_capability::Rpc where T: core::marker::Sized
pub fn bpfman_csi::v1::node_service_capability::Rpc::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::node_service_capability::Rpc
pub fn bpfman_csi::v1::node_service_capability::Rpc::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::node_service_capability::Rpc
pub fn bpfman_csi::v1::node_service_capability::Rpc::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::node_service_capability::Rpc
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::node_service_capability::Rpc
pub mod bpfman_csi::v1::plugin_capability
pub mod bpfman_csi::v1::plugin_capability::service
#[repr(i32)] pub enum bpfman_csi::v1::plugin_capability::service::Type
pub bpfman_csi::v1::plugin_capability::service::Type::ControllerService = 1
pub bpfman_csi::v1::plugin_capability::service::Type::GroupControllerService = 3
pub bpfman_csi::v1::plugin_capability::service::Type::Unknown = 0
pub bpfman_csi::v1::plugin_capability::service::Type::VolumeAccessibilityConstraints = 2
impl bpfman_csi::v1::plugin_capability::service::Type
pub fn bpfman_csi::v1::plugin_capability::service::Type::as_str_name(&self) -> &'static str
pub fn bpfman_csi::v1::plugin_capability::service::Type::from_str_name(value: &str) -> core::option::Option<Self>
impl bpfman_csi::v1::plugin_capability::service::Type
pub fn bpfman_csi::v1::plugin_capability::service::Type::from_i32(value: i32) -> core::option::Option<bpfman_csi::v1::plugin_capability::service::Type>
pub fn bpfman_csi::v1::plugin_capability::service::Type::is_valid(value: i32) -> bool
impl core::clone::Clone for bpfman_csi::v1::plugin_capability::service::Type
pub fn bpfman_csi::v1::plugin_capability::service::Type::clone(&self) -> bpfman_csi::v1::plugin_capability::service::Type
impl core::cmp::Eq for bpfman_csi::v1::plugin_capability::service::Type
impl core::cmp::Ord for bpfman_csi::v1::plugin_capability::service::Type
pub fn bpfman_csi::v1::plugin_capability::service::Type::cmp(&self, other: &bpfman_csi::v1::plugin_capability::service::Type) -> core::cmp::Ordering
impl core::cmp::PartialEq for bpfman_csi::v1::plugin_capability::service::Type
pub fn bpfman_csi::v1::plugin_capability::service::Type::eq(&self, other: &bpfman_csi::v1::plugin_capability::service::Type) -> bool
impl core::cmp::PartialOrd for bpfman_csi::v1::plugin_capability::service::Type
pub fn bpfman_csi::v1::plugin_capability::service::Type::partial_cmp(&self, other: &bpfman_csi::v1::plugin_capability::service::Type) -> core::option::Option<core::cmp::Ordering>
impl core::convert::From<bpfman_csi::v1::plugin_capability::service::Type> for i32
pub fn i32::from(value: bpfman_csi::v1::plugin_capability::service::Type) -> i32
impl core::convert::TryFrom<i32> for bpfman_csi::v1::plugin_capability::service::Type
pub type bpfman_csi::v1::plugin_capability::service::Type::Error = prost::error::DecodeError
pub fn bpfman_csi::v1::plugin_capability::service::Type::try_from(value: i32) -> core::result::Result<bpfman_csi::v1::plugin_capability::service::Type, prost::error::DecodeError>
impl core::default::Default for bpfman_csi::v1::plugin_capability::service::Type
pub fn bpfman_csi::v1::plugin_capability::service::Type::default() -> bpfman_csi::v1::plugin_capability::service::Type
impl core::fmt::Debug for bpfman_csi::v1::plugin_capability::service::Type
pub fn bpfman_csi::v1::plugin_capability::service::Type::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::hash::Hash for bpfman_csi::v1::plugin_capability::service::Type
pub fn bpfman_csi::v1::plugin_capability::service::Type::hash<__H: core::hash::Hasher>(&self, state: &mut __H)
impl core::marker::Copy for bpfman_csi::v1::plugin_capability::service::Type
impl core::marker::StructuralPartialEq for bpfman_csi::v1::plugin_capability::service::Type
impl core::marker::Freeze for bpfman_csi::v1::plugin_capability::service::Type
impl core::marker::Send for bpfman_csi::v1::plugin_capability::service::Type
impl core::marker::Sync for bpfman_csi::v1::plugin_capability::service::Type
impl core::marker::Unpin for bpfman_csi::v1::plugin_capability::service::Type
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::plugin_capability::service::Type
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::plugin_capability::service::Type
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::plugin_capability::service::Type where U: core::convert::From<T>
pub fn bpfman_csi::v1::plugin_capability::service::Type::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::plugin_capability::service::Type where U: core::convert::Into<T>
pub type bpfman_csi::v1::plugin_capability::service::Type::Error = core::convert::Infallible
pub fn bpfman_csi::v1::plugin_capability::service::Type::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::plugin_capability::service::Type where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::plugin_capability::service::Type::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::plugin_capability::service::Type::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::plugin_capability::service::Type where T: core::clone::Clone
pub type bpfman_csi::v1::plugin_capability::service::Type::Owned = T
pub fn bpfman_csi::v1::plugin_capability::service::Type::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::plugin_capability::service::Type::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::plugin_capability::service::Type where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::plugin_capability::service::Type::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::plugin_capability::service::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::plugin_capability::service::Type::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::plugin_capability::service::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::plugin_capability::service::Type::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::plugin_capability::service::Type
pub fn bpfman_csi::v1::plugin_capability::service::Type::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::plugin_capability::service::Type
pub fn bpfman_csi::v1::plugin_capability::service::Type::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::plugin_capability::service::Type
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::plugin_capability::service::Type
pub mod bpfman_csi::v1::plugin_capability::volume_expansion
#[repr(i32)] pub enum bpfman_csi::v1::plugin_capability::volume_expansion::Type
pub bpfman_csi::v1::plugin_capability::volume_expansion::Type::Offline = 2
pub bpfman_csi::v1::plugin_capability::volume_expansion::Type::Online = 1
pub bpfman_csi::v1::plugin_capability::volume_expansion::Type::Unknown = 0
impl bpfman_csi::v1::plugin_capability::volume_expansion::Type
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::as_str_name(&self) -> &'static str
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::from_str_name(value: &str) -> core::option::Option<Self>
impl bpfman_csi::v1::plugin_capability::volume_expansion::Type
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::from_i32(value: i32) -> core::option::Option<bpfman_csi::v1::plugin_capability::volume_expansion::Type>
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::is_valid(value: i32) -> bool
impl core::clone::Clone for bpfman_csi::v1::plugin_capability::volume_expansion::Type
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::clone(&self) -> bpfman_csi::v1::plugin_capability::volume_expansion::Type
impl core::cmp::Eq for bpfman_csi::v1::plugin_capability::volume_expansion::Type
impl core::cmp::Ord for bpfman_csi::v1::plugin_capability::volume_expansion::Type
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::cmp(&self, other: &bpfman_csi::v1::plugin_capability::volume_expansion::Type) -> core::cmp::Ordering
impl core::cmp::PartialEq for bpfman_csi::v1::plugin_capability::volume_expansion::Type
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::eq(&self, other: &bpfman_csi::v1::plugin_capability::volume_expansion::Type) -> bool
impl core::cmp::PartialOrd for bpfman_csi::v1::plugin_capability::volume_expansion::Type
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::partial_cmp(&self, other: &bpfman_csi::v1::plugin_capability::volume_expansion::Type) -> core::option::Option<core::cmp::Ordering>
impl core::convert::From<bpfman_csi::v1::plugin_capability::volume_expansion::Type> for i32
pub fn i32::from(value: bpfman_csi::v1::plugin_capability::volume_expansion::Type) -> i32
impl core::convert::TryFrom<i32> for bpfman_csi::v1::plugin_capability::volume_expansion::Type
pub type bpfman_csi::v1::plugin_capability::volume_expansion::Type::Error = prost::error::DecodeError
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::try_from(value: i32) -> core::result::Result<bpfman_csi::v1::plugin_capability::volume_expansion::Type, prost::error::DecodeError>
impl core::default::Default for bpfman_csi::v1::plugin_capability::volume_expansion::Type
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::default() -> bpfman_csi::v1::plugin_capability::volume_expansion::Type
impl core::fmt::Debug for bpfman_csi::v1::plugin_capability::volume_expansion::Type
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::hash::Hash for bpfman_csi::v1::plugin_capability::volume_expansion::Type
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::hash<__H: core::hash::Hasher>(&self, state: &mut __H)
impl core::marker::Copy for bpfman_csi::v1::plugin_capability::volume_expansion::Type
impl core::marker::StructuralPartialEq for bpfman_csi::v1::plugin_capability::volume_expansion::Type
impl core::marker::Freeze for bpfman_csi::v1::plugin_capability::volume_expansion::Type
impl core::marker::Send for bpfman_csi::v1::plugin_capability::volume_expansion::Type
impl core::marker::Sync for bpfman_csi::v1::plugin_capability::volume_expansion::Type
impl core::marker::Unpin for bpfman_csi::v1::plugin_capability::volume_expansion::Type
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::plugin_capability::volume_expansion::Type
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::plugin_capability::volume_expansion::Type
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::plugin_capability::volume_expansion::Type where U: core::convert::From<T>
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::plugin_capability::volume_expansion::Type where U: core::convert::Into<T>
pub type bpfman_csi::v1::plugin_capability::volume_expansion::Type::Error = core::convert::Infallible
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::plugin_capability::volume_expansion::Type where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::plugin_capability::volume_expansion::Type::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::plugin_capability::volume_expansion::Type where T: core::clone::Clone
pub type bpfman_csi::v1::plugin_capability::volume_expansion::Type::Owned = T
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::plugin_capability::volume_expansion::Type where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::plugin_capability::volume_expansion::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::plugin_capability::volume_expansion::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::plugin_capability::volume_expansion::Type
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::plugin_capability::volume_expansion::Type
pub fn bpfman_csi::v1::plugin_capability::volume_expansion::Type::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::plugin_capability::volume_expansion::Type
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::plugin_capability::volume_expansion::Type
pub enum bpfman_csi::v1::plugin_capability::Type
pub bpfman_csi::v1::plugin_capability::Type::Service(bpfman_csi::v1::plugin_capability::Service)
pub bpfman_csi::v1::plugin_capability::Type::VolumeExpansion(bpfman_csi::v1::plugin_capability::VolumeExpansion)
impl bpfman_csi::v1::plugin_capability::Type
pub fn bpfman_csi::v1::plugin_capability::Type::encode<B>(&self, buf: &mut B) where B: bytes::buf::buf_mut::BufMut
pub fn bpfman_csi::v1::plugin_capability::Type::encoded_len(&self) -> usize
pub fn bpfman_csi::v1::plugin_capability::Type::merge<B>(field: &mut core::option::Option<bpfman_csi::v1::plugin_capability::Type>, tag: u32, wire_type: prost::encoding::WireType, buf: &mut B, ctx: prost::encoding::DecodeContext) -> core::result::Result<(), prost::error::DecodeError> where B: bytes::buf::buf_impl::Buf
impl core::clone::Clone for bpfman_csi::v1::plugin_capability::Type
pub fn bpfman_csi::v1::plugin_capability::Type::clone(&self) -> bpfman_csi::v1::plugin_capability::Type
impl core::cmp::PartialEq for bpfman_csi::v1::plugin_capability::Type
pub fn bpfman_csi::v1::plugin_capability::Type::eq(&self, other: &bpfman_csi::v1::plugin_capability::Type) -> bool
impl core::fmt::Debug for bpfman_csi::v1::plugin_capability::Type
pub fn bpfman_csi::v1::plugin_capability::Type::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::plugin_capability::Type
impl core::marker::Freeze for bpfman_csi::v1::plugin_capability::Type
impl core::marker::Send for bpfman_csi::v1::plugin_capability::Type
impl core::marker::Sync for bpfman_csi::v1::plugin_capability::Type
impl core::marker::Unpin for bpfman_csi::v1::plugin_capability::Type
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::plugin_capability::Type
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::plugin_capability::Type
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::plugin_capability::Type where U: core::convert::From<T>
pub fn bpfman_csi::v1::plugin_capability::Type::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::plugin_capability::Type where U: core::convert::Into<T>
pub type bpfman_csi::v1::plugin_capability::Type::Error = core::convert::Infallible
pub fn bpfman_csi::v1::plugin_capability::Type::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::plugin_capability::Type where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::plugin_capability::Type::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::plugin_capability::Type::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::plugin_capability::Type where T: core::clone::Clone
pub type bpfman_csi::v1::plugin_capability::Type::Owned = T
pub fn bpfman_csi::v1::plugin_capability::Type::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::plugin_capability::Type::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::plugin_capability::Type where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::plugin_capability::Type::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::plugin_capability::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::plugin_capability::Type::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::plugin_capability::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::plugin_capability::Type::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::plugin_capability::Type
pub fn bpfman_csi::v1::plugin_capability::Type::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::plugin_capability::Type
pub fn bpfman_csi::v1::plugin_capability::Type::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::plugin_capability::Type
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::plugin_capability::Type
pub struct bpfman_csi::v1::plugin_capability::Service
pub bpfman_csi::v1::plugin_capability::Service::type: i32
impl bpfman_csi::v1::plugin_capability::Service
pub fn bpfman_csi::v1::plugin_capability::Service::set_type(&mut self, value: bpfman_csi::v1::plugin_capability::service::Type)
pub fn bpfman_csi::v1::plugin_capability::Service::type(&self) -> bpfman_csi::v1::plugin_capability::service::Type
impl core::clone::Clone for bpfman_csi::v1::plugin_capability::Service
pub fn bpfman_csi::v1::plugin_capability::Service::clone(&self) -> bpfman_csi::v1::plugin_capability::Service
impl core::cmp::PartialEq for bpfman_csi::v1::plugin_capability::Service
pub fn bpfman_csi::v1::plugin_capability::Service::eq(&self, other: &bpfman_csi::v1::plugin_capability::Service) -> bool
impl core::default::Default for bpfman_csi::v1::plugin_capability::Service
pub fn bpfman_csi::v1::plugin_capability::Service::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::plugin_capability::Service
pub fn bpfman_csi::v1::plugin_capability::Service::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::plugin_capability::Service
impl prost::message::Message for bpfman_csi::v1::plugin_capability::Service
pub fn bpfman_csi::v1::plugin_capability::Service::clear(&mut self)
pub fn bpfman_csi::v1::plugin_capability::Service::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::plugin_capability::Service
impl core::marker::Send for bpfman_csi::v1::plugin_capability::Service
impl core::marker::Sync for bpfman_csi::v1::plugin_capability::Service
impl core::marker::Unpin for bpfman_csi::v1::plugin_capability::Service
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::plugin_capability::Service
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::plugin_capability::Service
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::plugin_capability::Service where U: core::convert::From<T>
pub fn bpfman_csi::v1::plugin_capability::Service::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::plugin_capability::Service where U: core::convert::Into<T>
pub type bpfman_csi::v1::plugin_capability::Service::Error = core::convert::Infallible
pub fn bpfman_csi::v1::plugin_capability::Service::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::plugin_capability::Service where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::plugin_capability::Service::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::plugin_capability::Service::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::plugin_capability::Service where T: core::clone::Clone
pub type bpfman_csi::v1::plugin_capability::Service::Owned = T
pub fn bpfman_csi::v1::plugin_capability::Service::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::plugin_capability::Service::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::plugin_capability::Service where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::plugin_capability::Service::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::plugin_capability::Service where T: core::marker::Sized
pub fn bpfman_csi::v1::plugin_capability::Service::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::plugin_capability::Service where T: core::marker::Sized
pub fn bpfman_csi::v1::plugin_capability::Service::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::plugin_capability::Service
pub fn bpfman_csi::v1::plugin_capability::Service::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::plugin_capability::Service
pub fn bpfman_csi::v1::plugin_capability::Service::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::plugin_capability::Service
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::plugin_capability::Service
pub struct bpfman_csi::v1::plugin_capability::VolumeExpansion
pub bpfman_csi::v1::plugin_capability::VolumeExpansion::type: i32
impl bpfman_csi::v1::plugin_capability::VolumeExpansion
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::set_type(&mut self, value: bpfman_csi::v1::plugin_capability::volume_expansion::Type)
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::type(&self) -> bpfman_csi::v1::plugin_capability::volume_expansion::Type
impl core::clone::Clone for bpfman_csi::v1::plugin_capability::VolumeExpansion
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::clone(&self) -> bpfman_csi::v1::plugin_capability::VolumeExpansion
impl core::cmp::PartialEq for bpfman_csi::v1::plugin_capability::VolumeExpansion
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::eq(&self, other: &bpfman_csi::v1::plugin_capability::VolumeExpansion) -> bool
impl core::default::Default for bpfman_csi::v1::plugin_capability::VolumeExpansion
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::plugin_capability::VolumeExpansion
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::plugin_capability::VolumeExpansion
impl prost::message::Message for bpfman_csi::v1::plugin_capability::VolumeExpansion
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::clear(&mut self)
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::plugin_capability::VolumeExpansion
impl core::marker::Send for bpfman_csi::v1::plugin_capability::VolumeExpansion
impl core::marker::Sync for bpfman_csi::v1::plugin_capability::VolumeExpansion
impl core::marker::Unpin for bpfman_csi::v1::plugin_capability::VolumeExpansion
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::plugin_capability::VolumeExpansion
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::plugin_capability::VolumeExpansion
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::plugin_capability::VolumeExpansion where U: core::convert::From<T>
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::plugin_capability::VolumeExpansion where U: core::convert::Into<T>
pub type bpfman_csi::v1::plugin_capability::VolumeExpansion::Error = core::convert::Infallible
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::plugin_capability::VolumeExpansion where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::plugin_capability::VolumeExpansion::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::plugin_capability::VolumeExpansion where T: core::clone::Clone
pub type bpfman_csi::v1::plugin_capability::VolumeExpansion::Owned = T
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::plugin_capability::VolumeExpansion where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::plugin_capability::VolumeExpansion where T: core::marker::Sized
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::plugin_capability::VolumeExpansion where T: core::marker::Sized
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::plugin_capability::VolumeExpansion
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::plugin_capability::VolumeExpansion
pub fn bpfman_csi::v1::plugin_capability::VolumeExpansion::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::plugin_capability::VolumeExpansion
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::plugin_capability::VolumeExpansion
pub mod bpfman_csi::v1::validate_volume_capabilities_response
pub struct bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
pub bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::mutable_parameters: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::parameters: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::volume_capabilities: alloc::vec::Vec<bpfman_csi::v1::VolumeCapability>
pub bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::volume_context: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
impl core::clone::Clone for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::clone(&self) -> bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
impl core::cmp::PartialEq for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::eq(&self, other: &bpfman_csi::v1::validate_volume_capabilities_response::Confirmed) -> bool
impl core::default::Default for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
impl prost::message::Message for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::clear(&mut self)
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
impl core::marker::Send for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
impl core::marker::Sync for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
impl core::marker::Unpin for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed where U: core::convert::From<T>
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed where U: core::convert::Into<T>
pub type bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::Error = core::convert::Infallible
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed where T: core::clone::Clone
pub type bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::Owned = T
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed where T: core::marker::Sized
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed where T: core::marker::Sized
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
pub fn bpfman_csi::v1::validate_volume_capabilities_response::Confirmed::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::validate_volume_capabilities_response::Confirmed
pub mod bpfman_csi::v1::volume_capability
pub mod bpfman_csi::v1::volume_capability::access_mode
#[repr(i32)] pub enum bpfman_csi::v1::volume_capability::access_mode::Mode
pub bpfman_csi::v1::volume_capability::access_mode::Mode::MultiNodeMultiWriter = 5
pub bpfman_csi::v1::volume_capability::access_mode::Mode::MultiNodeReaderOnly = 3
pub bpfman_csi::v1::volume_capability::access_mode::Mode::MultiNodeSingleWriter = 4
pub bpfman_csi::v1::volume_capability::access_mode::Mode::SingleNodeMultiWriter = 7
pub bpfman_csi::v1::volume_capability::access_mode::Mode::SingleNodeReaderOnly = 2
pub bpfman_csi::v1::volume_capability::access_mode::Mode::SingleNodeSingleWriter = 6
pub bpfman_csi::v1::volume_capability::access_mode::Mode::SingleNodeWriter = 1
pub bpfman_csi::v1::volume_capability::access_mode::Mode::Unknown = 0
impl bpfman_csi::v1::volume_capability::access_mode::Mode
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::as_str_name(&self) -> &'static str
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::from_str_name(value: &str) -> core::option::Option<Self>
impl bpfman_csi::v1::volume_capability::access_mode::Mode
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::from_i32(value: i32) -> core::option::Option<bpfman_csi::v1::volume_capability::access_mode::Mode>
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::is_valid(value: i32) -> bool
impl core::clone::Clone for bpfman_csi::v1::volume_capability::access_mode::Mode
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::clone(&self) -> bpfman_csi::v1::volume_capability::access_mode::Mode
impl core::cmp::Eq for bpfman_csi::v1::volume_capability::access_mode::Mode
impl core::cmp::Ord for bpfman_csi::v1::volume_capability::access_mode::Mode
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::cmp(&self, other: &bpfman_csi::v1::volume_capability::access_mode::Mode) -> core::cmp::Ordering
impl core::cmp::PartialEq for bpfman_csi::v1::volume_capability::access_mode::Mode
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::eq(&self, other: &bpfman_csi::v1::volume_capability::access_mode::Mode) -> bool
impl core::cmp::PartialOrd for bpfman_csi::v1::volume_capability::access_mode::Mode
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::partial_cmp(&self, other: &bpfman_csi::v1::volume_capability::access_mode::Mode) -> core::option::Option<core::cmp::Ordering>
impl core::convert::From<bpfman_csi::v1::volume_capability::access_mode::Mode> for i32
pub fn i32::from(value: bpfman_csi::v1::volume_capability::access_mode::Mode) -> i32
impl core::convert::TryFrom<i32> for bpfman_csi::v1::volume_capability::access_mode::Mode
pub type bpfman_csi::v1::volume_capability::access_mode::Mode::Error = prost::error::DecodeError
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::try_from(value: i32) -> core::result::Result<bpfman_csi::v1::volume_capability::access_mode::Mode, prost::error::DecodeError>
impl core::default::Default for bpfman_csi::v1::volume_capability::access_mode::Mode
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::default() -> bpfman_csi::v1::volume_capability::access_mode::Mode
impl core::fmt::Debug for bpfman_csi::v1::volume_capability::access_mode::Mode
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::hash::Hash for bpfman_csi::v1::volume_capability::access_mode::Mode
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::hash<__H: core::hash::Hasher>(&self, state: &mut __H)
impl core::marker::Copy for bpfman_csi::v1::volume_capability::access_mode::Mode
impl core::marker::StructuralPartialEq for bpfman_csi::v1::volume_capability::access_mode::Mode
impl core::marker::Freeze for bpfman_csi::v1::volume_capability::access_mode::Mode
impl core::marker::Send for bpfman_csi::v1::volume_capability::access_mode::Mode
impl core::marker::Sync for bpfman_csi::v1::volume_capability::access_mode::Mode
impl core::marker::Unpin for bpfman_csi::v1::volume_capability::access_mode::Mode
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::volume_capability::access_mode::Mode
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::volume_capability::access_mode::Mode
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::volume_capability::access_mode::Mode where U: core::convert::From<T>
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::volume_capability::access_mode::Mode where U: core::convert::Into<T>
pub type bpfman_csi::v1::volume_capability::access_mode::Mode::Error = core::convert::Infallible
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::volume_capability::access_mode::Mode where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::volume_capability::access_mode::Mode::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::volume_capability::access_mode::Mode where T: core::clone::Clone
pub type bpfman_csi::v1::volume_capability::access_mode::Mode::Owned = T
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::volume_capability::access_mode::Mode where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::volume_capability::access_mode::Mode where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::volume_capability::access_mode::Mode where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::volume_capability::access_mode::Mode
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::volume_capability::access_mode::Mode
pub fn bpfman_csi::v1::volume_capability::access_mode::Mode::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::volume_capability::access_mode::Mode
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::volume_capability::access_mode::Mode
pub enum bpfman_csi::v1::volume_capability::AccessType
pub bpfman_csi::v1::volume_capability::AccessType::Block(bpfman_csi::v1::volume_capability::BlockVolume)
pub bpfman_csi::v1::volume_capability::AccessType::Mount(bpfman_csi::v1::volume_capability::MountVolume)
impl bpfman_csi::v1::volume_capability::AccessType
pub fn bpfman_csi::v1::volume_capability::AccessType::encode<B>(&self, buf: &mut B) where B: bytes::buf::buf_mut::BufMut
pub fn bpfman_csi::v1::volume_capability::AccessType::encoded_len(&self) -> usize
pub fn bpfman_csi::v1::volume_capability::AccessType::merge<B>(field: &mut core::option::Option<bpfman_csi::v1::volume_capability::AccessType>, tag: u32, wire_type: prost::encoding::WireType, buf: &mut B, ctx: prost::encoding::DecodeContext) -> core::result::Result<(), prost::error::DecodeError> where B: bytes::buf::buf_impl::Buf
impl core::clone::Clone for bpfman_csi::v1::volume_capability::AccessType
pub fn bpfman_csi::v1::volume_capability::AccessType::clone(&self) -> bpfman_csi::v1::volume_capability::AccessType
impl core::cmp::PartialEq for bpfman_csi::v1::volume_capability::AccessType
pub fn bpfman_csi::v1::volume_capability::AccessType::eq(&self, other: &bpfman_csi::v1::volume_capability::AccessType) -> bool
impl core::fmt::Debug for bpfman_csi::v1::volume_capability::AccessType
pub fn bpfman_csi::v1::volume_capability::AccessType::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::volume_capability::AccessType
impl core::marker::Freeze for bpfman_csi::v1::volume_capability::AccessType
impl core::marker::Send for bpfman_csi::v1::volume_capability::AccessType
impl core::marker::Sync for bpfman_csi::v1::volume_capability::AccessType
impl core::marker::Unpin for bpfman_csi::v1::volume_capability::AccessType
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::volume_capability::AccessType
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::volume_capability::AccessType
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::volume_capability::AccessType where U: core::convert::From<T>
pub fn bpfman_csi::v1::volume_capability::AccessType::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::volume_capability::AccessType where U: core::convert::Into<T>
pub type bpfman_csi::v1::volume_capability::AccessType::Error = core::convert::Infallible
pub fn bpfman_csi::v1::volume_capability::AccessType::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::volume_capability::AccessType where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::volume_capability::AccessType::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::volume_capability::AccessType::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::volume_capability::AccessType where T: core::clone::Clone
pub type bpfman_csi::v1::volume_capability::AccessType::Owned = T
pub fn bpfman_csi::v1::volume_capability::AccessType::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::volume_capability::AccessType::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::volume_capability::AccessType where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::volume_capability::AccessType::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::volume_capability::AccessType where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_capability::AccessType::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::volume_capability::AccessType where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_capability::AccessType::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::volume_capability::AccessType
pub fn bpfman_csi::v1::volume_capability::AccessType::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::volume_capability::AccessType
pub fn bpfman_csi::v1::volume_capability::AccessType::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::volume_capability::AccessType
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::volume_capability::AccessType
pub struct bpfman_csi::v1::volume_capability::AccessMode
pub bpfman_csi::v1::volume_capability::AccessMode::mode: i32
impl bpfman_csi::v1::volume_capability::AccessMode
pub fn bpfman_csi::v1::volume_capability::AccessMode::mode(&self) -> bpfman_csi::v1::volume_capability::access_mode::Mode
pub fn bpfman_csi::v1::volume_capability::AccessMode::set_mode(&mut self, value: bpfman_csi::v1::volume_capability::access_mode::Mode)
impl core::clone::Clone for bpfman_csi::v1::volume_capability::AccessMode
pub fn bpfman_csi::v1::volume_capability::AccessMode::clone(&self) -> bpfman_csi::v1::volume_capability::AccessMode
impl core::cmp::PartialEq for bpfman_csi::v1::volume_capability::AccessMode
pub fn bpfman_csi::v1::volume_capability::AccessMode::eq(&self, other: &bpfman_csi::v1::volume_capability::AccessMode) -> bool
impl core::default::Default for bpfman_csi::v1::volume_capability::AccessMode
pub fn bpfman_csi::v1::volume_capability::AccessMode::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::volume_capability::AccessMode
pub fn bpfman_csi::v1::volume_capability::AccessMode::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::volume_capability::AccessMode
impl prost::message::Message for bpfman_csi::v1::volume_capability::AccessMode
pub fn bpfman_csi::v1::volume_capability::AccessMode::clear(&mut self)
pub fn bpfman_csi::v1::volume_capability::AccessMode::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::volume_capability::AccessMode
impl core::marker::Send for bpfman_csi::v1::volume_capability::AccessMode
impl core::marker::Sync for bpfman_csi::v1::volume_capability::AccessMode
impl core::marker::Unpin for bpfman_csi::v1::volume_capability::AccessMode
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::volume_capability::AccessMode
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::volume_capability::AccessMode
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::volume_capability::AccessMode where U: core::convert::From<T>
pub fn bpfman_csi::v1::volume_capability::AccessMode::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::volume_capability::AccessMode where U: core::convert::Into<T>
pub type bpfman_csi::v1::volume_capability::AccessMode::Error = core::convert::Infallible
pub fn bpfman_csi::v1::volume_capability::AccessMode::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::volume_capability::AccessMode where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::volume_capability::AccessMode::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::volume_capability::AccessMode::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::volume_capability::AccessMode where T: core::clone::Clone
pub type bpfman_csi::v1::volume_capability::AccessMode::Owned = T
pub fn bpfman_csi::v1::volume_capability::AccessMode::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::volume_capability::AccessMode::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::volume_capability::AccessMode where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::volume_capability::AccessMode::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::volume_capability::AccessMode where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_capability::AccessMode::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::volume_capability::AccessMode where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_capability::AccessMode::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::volume_capability::AccessMode
pub fn bpfman_csi::v1::volume_capability::AccessMode::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::volume_capability::AccessMode
pub fn bpfman_csi::v1::volume_capability::AccessMode::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::volume_capability::AccessMode
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::volume_capability::AccessMode
pub struct bpfman_csi::v1::volume_capability::BlockVolume
impl core::clone::Clone for bpfman_csi::v1::volume_capability::BlockVolume
pub fn bpfman_csi::v1::volume_capability::BlockVolume::clone(&self) -> bpfman_csi::v1::volume_capability::BlockVolume
impl core::cmp::PartialEq for bpfman_csi::v1::volume_capability::BlockVolume
pub fn bpfman_csi::v1::volume_capability::BlockVolume::eq(&self, other: &bpfman_csi::v1::volume_capability::BlockVolume) -> bool
impl core::default::Default for bpfman_csi::v1::volume_capability::BlockVolume
pub fn bpfman_csi::v1::volume_capability::BlockVolume::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::volume_capability::BlockVolume
pub fn bpfman_csi::v1::volume_capability::BlockVolume::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::volume_capability::BlockVolume
impl prost::message::Message for bpfman_csi::v1::volume_capability::BlockVolume
pub fn bpfman_csi::v1::volume_capability::BlockVolume::clear(&mut self)
pub fn bpfman_csi::v1::volume_capability::BlockVolume::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::volume_capability::BlockVolume
impl core::marker::Send for bpfman_csi::v1::volume_capability::BlockVolume
impl core::marker::Sync for bpfman_csi::v1::volume_capability::BlockVolume
impl core::marker::Unpin for bpfman_csi::v1::volume_capability::BlockVolume
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::volume_capability::BlockVolume
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::volume_capability::BlockVolume
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::volume_capability::BlockVolume where U: core::convert::From<T>
pub fn bpfman_csi::v1::volume_capability::BlockVolume::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::volume_capability::BlockVolume where U: core::convert::Into<T>
pub type bpfman_csi::v1::volume_capability::BlockVolume::Error = core::convert::Infallible
pub fn bpfman_csi::v1::volume_capability::BlockVolume::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::volume_capability::BlockVolume where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::volume_capability::BlockVolume::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::volume_capability::BlockVolume::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::volume_capability::BlockVolume where T: core::clone::Clone
pub type bpfman_csi::v1::volume_capability::BlockVolume::Owned = T
pub fn bpfman_csi::v1::volume_capability::BlockVolume::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::volume_capability::BlockVolume::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::volume_capability::BlockVolume where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::volume_capability::BlockVolume::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::volume_capability::BlockVolume where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_capability::BlockVolume::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::volume_capability::BlockVolume where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_capability::BlockVolume::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::volume_capability::BlockVolume
pub fn bpfman_csi::v1::volume_capability::BlockVolume::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::volume_capability::BlockVolume
pub fn bpfman_csi::v1::volume_capability::BlockVolume::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::volume_capability::BlockVolume
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::volume_capability::BlockVolume
pub struct bpfman_csi::v1::volume_capability::MountVolume
pub bpfman_csi::v1::volume_capability::MountVolume::fs_type: alloc::string::String
pub bpfman_csi::v1::volume_capability::MountVolume::mount_flags: alloc::vec::Vec<alloc::string::String>
pub bpfman_csi::v1::volume_capability::MountVolume::volume_mount_group: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::volume_capability::MountVolume
pub fn bpfman_csi::v1::volume_capability::MountVolume::clone(&self) -> bpfman_csi::v1::volume_capability::MountVolume
impl core::cmp::PartialEq for bpfman_csi::v1::volume_capability::MountVolume
pub fn bpfman_csi::v1::volume_capability::MountVolume::eq(&self, other: &bpfman_csi::v1::volume_capability::MountVolume) -> bool
impl core::default::Default for bpfman_csi::v1::volume_capability::MountVolume
pub fn bpfman_csi::v1::volume_capability::MountVolume::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::volume_capability::MountVolume
pub fn bpfman_csi::v1::volume_capability::MountVolume::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::volume_capability::MountVolume
impl prost::message::Message for bpfman_csi::v1::volume_capability::MountVolume
pub fn bpfman_csi::v1::volume_capability::MountVolume::clear(&mut self)
pub fn bpfman_csi::v1::volume_capability::MountVolume::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::volume_capability::MountVolume
impl core::marker::Send for bpfman_csi::v1::volume_capability::MountVolume
impl core::marker::Sync for bpfman_csi::v1::volume_capability::MountVolume
impl core::marker::Unpin for bpfman_csi::v1::volume_capability::MountVolume
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::volume_capability::MountVolume
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::volume_capability::MountVolume
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::volume_capability::MountVolume where U: core::convert::From<T>
pub fn bpfman_csi::v1::volume_capability::MountVolume::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::volume_capability::MountVolume where U: core::convert::Into<T>
pub type bpfman_csi::v1::volume_capability::MountVolume::Error = core::convert::Infallible
pub fn bpfman_csi::v1::volume_capability::MountVolume::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::volume_capability::MountVolume where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::volume_capability::MountVolume::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::volume_capability::MountVolume::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::volume_capability::MountVolume where T: core::clone::Clone
pub type bpfman_csi::v1::volume_capability::MountVolume::Owned = T
pub fn bpfman_csi::v1::volume_capability::MountVolume::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::volume_capability::MountVolume::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::volume_capability::MountVolume where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::volume_capability::MountVolume::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::volume_capability::MountVolume where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_capability::MountVolume::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::volume_capability::MountVolume where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_capability::MountVolume::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::volume_capability::MountVolume
pub fn bpfman_csi::v1::volume_capability::MountVolume::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::volume_capability::MountVolume
pub fn bpfman_csi::v1::volume_capability::MountVolume::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::volume_capability::MountVolume
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::volume_capability::MountVolume
pub mod bpfman_csi::v1::volume_content_source
pub enum bpfman_csi::v1::volume_content_source::Type
pub bpfman_csi::v1::volume_content_source::Type::Snapshot(bpfman_csi::v1::volume_content_source::SnapshotSource)
pub bpfman_csi::v1::volume_content_source::Type::Volume(bpfman_csi::v1::volume_content_source::VolumeSource)
impl bpfman_csi::v1::volume_content_source::Type
pub fn bpfman_csi::v1::volume_content_source::Type::encode<B>(&self, buf: &mut B) where B: bytes::buf::buf_mut::BufMut
pub fn bpfman_csi::v1::volume_content_source::Type::encoded_len(&self) -> usize
pub fn bpfman_csi::v1::volume_content_source::Type::merge<B>(field: &mut core::option::Option<bpfman_csi::v1::volume_content_source::Type>, tag: u32, wire_type: prost::encoding::WireType, buf: &mut B, ctx: prost::encoding::DecodeContext) -> core::result::Result<(), prost::error::DecodeError> where B: bytes::buf::buf_impl::Buf
impl core::clone::Clone for bpfman_csi::v1::volume_content_source::Type
pub fn bpfman_csi::v1::volume_content_source::Type::clone(&self) -> bpfman_csi::v1::volume_content_source::Type
impl core::cmp::PartialEq for bpfman_csi::v1::volume_content_source::Type
pub fn bpfman_csi::v1::volume_content_source::Type::eq(&self, other: &bpfman_csi::v1::volume_content_source::Type) -> bool
impl core::fmt::Debug for bpfman_csi::v1::volume_content_source::Type
pub fn bpfman_csi::v1::volume_content_source::Type::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::volume_content_source::Type
impl core::marker::Freeze for bpfman_csi::v1::volume_content_source::Type
impl core::marker::Send for bpfman_csi::v1::volume_content_source::Type
impl core::marker::Sync for bpfman_csi::v1::volume_content_source::Type
impl core::marker::Unpin for bpfman_csi::v1::volume_content_source::Type
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::volume_content_source::Type
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::volume_content_source::Type
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::volume_content_source::Type where U: core::convert::From<T>
pub fn bpfman_csi::v1::volume_content_source::Type::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::volume_content_source::Type where U: core::convert::Into<T>
pub type bpfman_csi::v1::volume_content_source::Type::Error = core::convert::Infallible
pub fn bpfman_csi::v1::volume_content_source::Type::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::volume_content_source::Type where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::volume_content_source::Type::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::volume_content_source::Type::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::volume_content_source::Type where T: core::clone::Clone
pub type bpfman_csi::v1::volume_content_source::Type::Owned = T
pub fn bpfman_csi::v1::volume_content_source::Type::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::volume_content_source::Type::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::volume_content_source::Type where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::volume_content_source::Type::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::volume_content_source::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_content_source::Type::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::volume_content_source::Type where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_content_source::Type::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::volume_content_source::Type
pub fn bpfman_csi::v1::volume_content_source::Type::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::volume_content_source::Type
pub fn bpfman_csi::v1::volume_content_source::Type::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::volume_content_source::Type
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::volume_content_source::Type
pub struct bpfman_csi::v1::volume_content_source::SnapshotSource
pub bpfman_csi::v1::volume_content_source::SnapshotSource::snapshot_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::volume_content_source::SnapshotSource
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::clone(&self) -> bpfman_csi::v1::volume_content_source::SnapshotSource
impl core::cmp::PartialEq for bpfman_csi::v1::volume_content_source::SnapshotSource
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::eq(&self, other: &bpfman_csi::v1::volume_content_source::SnapshotSource) -> bool
impl core::default::Default for bpfman_csi::v1::volume_content_source::SnapshotSource
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::volume_content_source::SnapshotSource
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::volume_content_source::SnapshotSource
impl prost::message::Message for bpfman_csi::v1::volume_content_source::SnapshotSource
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::clear(&mut self)
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::volume_content_source::SnapshotSource
impl core::marker::Send for bpfman_csi::v1::volume_content_source::SnapshotSource
impl core::marker::Sync for bpfman_csi::v1::volume_content_source::SnapshotSource
impl core::marker::Unpin for bpfman_csi::v1::volume_content_source::SnapshotSource
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::volume_content_source::SnapshotSource
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::volume_content_source::SnapshotSource
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::volume_content_source::SnapshotSource where U: core::convert::From<T>
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::volume_content_source::SnapshotSource where U: core::convert::Into<T>
pub type bpfman_csi::v1::volume_content_source::SnapshotSource::Error = core::convert::Infallible
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::volume_content_source::SnapshotSource where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::volume_content_source::SnapshotSource::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::volume_content_source::SnapshotSource where T: core::clone::Clone
pub type bpfman_csi::v1::volume_content_source::SnapshotSource::Owned = T
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::volume_content_source::SnapshotSource where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::volume_content_source::SnapshotSource where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::volume_content_source::SnapshotSource where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::volume_content_source::SnapshotSource
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::volume_content_source::SnapshotSource
pub fn bpfman_csi::v1::volume_content_source::SnapshotSource::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::volume_content_source::SnapshotSource
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::volume_content_source::SnapshotSource
pub struct bpfman_csi::v1::volume_content_source::VolumeSource
pub bpfman_csi::v1::volume_content_source::VolumeSource::volume_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::volume_content_source::VolumeSource
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::clone(&self) -> bpfman_csi::v1::volume_content_source::VolumeSource
impl core::cmp::PartialEq for bpfman_csi::v1::volume_content_source::VolumeSource
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::eq(&self, other: &bpfman_csi::v1::volume_content_source::VolumeSource) -> bool
impl core::default::Default for bpfman_csi::v1::volume_content_source::VolumeSource
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::volume_content_source::VolumeSource
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::volume_content_source::VolumeSource
impl prost::message::Message for bpfman_csi::v1::volume_content_source::VolumeSource
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::clear(&mut self)
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::volume_content_source::VolumeSource
impl core::marker::Send for bpfman_csi::v1::volume_content_source::VolumeSource
impl core::marker::Sync for bpfman_csi::v1::volume_content_source::VolumeSource
impl core::marker::Unpin for bpfman_csi::v1::volume_content_source::VolumeSource
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::volume_content_source::VolumeSource
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::volume_content_source::VolumeSource
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::volume_content_source::VolumeSource where U: core::convert::From<T>
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::volume_content_source::VolumeSource where U: core::convert::Into<T>
pub type bpfman_csi::v1::volume_content_source::VolumeSource::Error = core::convert::Infallible
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::volume_content_source::VolumeSource where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::volume_content_source::VolumeSource::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::volume_content_source::VolumeSource where T: core::clone::Clone
pub type bpfman_csi::v1::volume_content_source::VolumeSource::Owned = T
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::volume_content_source::VolumeSource where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::volume_content_source::VolumeSource where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::volume_content_source::VolumeSource where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::volume_content_source::VolumeSource
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::volume_content_source::VolumeSource
pub fn bpfman_csi::v1::volume_content_source::VolumeSource::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::volume_content_source::VolumeSource
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::volume_content_source::VolumeSource
pub mod bpfman_csi::v1::volume_usage
#[repr(i32)] pub enum bpfman_csi::v1::volume_usage::Unit
pub bpfman_csi::v1::volume_usage::Unit::Bytes = 1
pub bpfman_csi::v1::volume_usage::Unit::Inodes = 2
pub bpfman_csi::v1::volume_usage::Unit::Unknown = 0
impl bpfman_csi::v1::volume_usage::Unit
pub fn bpfman_csi::v1::volume_usage::Unit::as_str_name(&self) -> &'static str
pub fn bpfman_csi::v1::volume_usage::Unit::from_str_name(value: &str) -> core::option::Option<Self>
impl bpfman_csi::v1::volume_usage::Unit
pub fn bpfman_csi::v1::volume_usage::Unit::from_i32(value: i32) -> core::option::Option<bpfman_csi::v1::volume_usage::Unit>
pub fn bpfman_csi::v1::volume_usage::Unit::is_valid(value: i32) -> bool
impl core::clone::Clone for bpfman_csi::v1::volume_usage::Unit
pub fn bpfman_csi::v1::volume_usage::Unit::clone(&self) -> bpfman_csi::v1::volume_usage::Unit
impl core::cmp::Eq for bpfman_csi::v1::volume_usage::Unit
impl core::cmp::Ord for bpfman_csi::v1::volume_usage::Unit
pub fn bpfman_csi::v1::volume_usage::Unit::cmp(&self, other: &bpfman_csi::v1::volume_usage::Unit) -> core::cmp::Ordering
impl core::cmp::PartialEq for bpfman_csi::v1::volume_usage::Unit
pub fn bpfman_csi::v1::volume_usage::Unit::eq(&self, other: &bpfman_csi::v1::volume_usage::Unit) -> bool
impl core::cmp::PartialOrd for bpfman_csi::v1::volume_usage::Unit
pub fn bpfman_csi::v1::volume_usage::Unit::partial_cmp(&self, other: &bpfman_csi::v1::volume_usage::Unit) -> core::option::Option<core::cmp::Ordering>
impl core::convert::From<bpfman_csi::v1::volume_usage::Unit> for i32
pub fn i32::from(value: bpfman_csi::v1::volume_usage::Unit) -> i32
impl core::convert::TryFrom<i32> for bpfman_csi::v1::volume_usage::Unit
pub type bpfman_csi::v1::volume_usage::Unit::Error = prost::error::DecodeError
pub fn bpfman_csi::v1::volume_usage::Unit::try_from(value: i32) -> core::result::Result<bpfman_csi::v1::volume_usage::Unit, prost::error::DecodeError>
impl core::default::Default for bpfman_csi::v1::volume_usage::Unit
pub fn bpfman_csi::v1::volume_usage::Unit::default() -> bpfman_csi::v1::volume_usage::Unit
impl core::fmt::Debug for bpfman_csi::v1::volume_usage::Unit
pub fn bpfman_csi::v1::volume_usage::Unit::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::hash::Hash for bpfman_csi::v1::volume_usage::Unit
pub fn bpfman_csi::v1::volume_usage::Unit::hash<__H: core::hash::Hasher>(&self, state: &mut __H)
impl core::marker::Copy for bpfman_csi::v1::volume_usage::Unit
impl core::marker::StructuralPartialEq for bpfman_csi::v1::volume_usage::Unit
impl core::marker::Freeze for bpfman_csi::v1::volume_usage::Unit
impl core::marker::Send for bpfman_csi::v1::volume_usage::Unit
impl core::marker::Sync for bpfman_csi::v1::volume_usage::Unit
impl core::marker::Unpin for bpfman_csi::v1::volume_usage::Unit
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::volume_usage::Unit
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::volume_usage::Unit
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::volume_usage::Unit where U: core::convert::From<T>
pub fn bpfman_csi::v1::volume_usage::Unit::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::volume_usage::Unit where U: core::convert::Into<T>
pub type bpfman_csi::v1::volume_usage::Unit::Error = core::convert::Infallible
pub fn bpfman_csi::v1::volume_usage::Unit::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::volume_usage::Unit where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::volume_usage::Unit::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::volume_usage::Unit::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::volume_usage::Unit where T: core::clone::Clone
pub type bpfman_csi::v1::volume_usage::Unit::Owned = T
pub fn bpfman_csi::v1::volume_usage::Unit::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::volume_usage::Unit::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::volume_usage::Unit where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::volume_usage::Unit::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::volume_usage::Unit where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_usage::Unit::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::volume_usage::Unit where T: core::marker::Sized
pub fn bpfman_csi::v1::volume_usage::Unit::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::volume_usage::Unit
pub fn bpfman_csi::v1::volume_usage::Unit::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::volume_usage::Unit
pub fn bpfman_csi::v1::volume_usage::Unit::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::volume_usage::Unit
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::volume_usage::Unit
pub struct bpfman_csi::v1::CapacityRange
pub bpfman_csi::v1::CapacityRange::limit_bytes: i64
pub bpfman_csi::v1::CapacityRange::required_bytes: i64
impl core::clone::Clone for bpfman_csi::v1::CapacityRange
pub fn bpfman_csi::v1::CapacityRange::clone(&self) -> bpfman_csi::v1::CapacityRange
impl core::cmp::PartialEq for bpfman_csi::v1::CapacityRange
pub fn bpfman_csi::v1::CapacityRange::eq(&self, other: &bpfman_csi::v1::CapacityRange) -> bool
impl core::default::Default for bpfman_csi::v1::CapacityRange
pub fn bpfman_csi::v1::CapacityRange::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::CapacityRange
pub fn bpfman_csi::v1::CapacityRange::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::CapacityRange
impl prost::message::Message for bpfman_csi::v1::CapacityRange
pub fn bpfman_csi::v1::CapacityRange::clear(&mut self)
pub fn bpfman_csi::v1::CapacityRange::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::CapacityRange
impl core::marker::Send for bpfman_csi::v1::CapacityRange
impl core::marker::Sync for bpfman_csi::v1::CapacityRange
impl core::marker::Unpin for bpfman_csi::v1::CapacityRange
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::CapacityRange
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::CapacityRange
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::CapacityRange where U: core::convert::From<T>
pub fn bpfman_csi::v1::CapacityRange::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::CapacityRange where U: core::convert::Into<T>
pub type bpfman_csi::v1::CapacityRange::Error = core::convert::Infallible
pub fn bpfman_csi::v1::CapacityRange::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::CapacityRange where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::CapacityRange::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::CapacityRange::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::CapacityRange where T: core::clone::Clone
pub type bpfman_csi::v1::CapacityRange::Owned = T
pub fn bpfman_csi::v1::CapacityRange::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::CapacityRange::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::CapacityRange where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::CapacityRange::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::CapacityRange where T: core::marker::Sized
pub fn bpfman_csi::v1::CapacityRange::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::CapacityRange where T: core::marker::Sized
pub fn bpfman_csi::v1::CapacityRange::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::CapacityRange
pub fn bpfman_csi::v1::CapacityRange::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::CapacityRange
pub fn bpfman_csi::v1::CapacityRange::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::CapacityRange
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::CapacityRange
pub struct bpfman_csi::v1::ControllerExpandVolumeRequest
pub bpfman_csi::v1::ControllerExpandVolumeRequest::capacity_range: core::option::Option<bpfman_csi::v1::CapacityRange>
pub bpfman_csi::v1::ControllerExpandVolumeRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::ControllerExpandVolumeRequest::volume_capability: core::option::Option<bpfman_csi::v1::VolumeCapability>
pub bpfman_csi::v1::ControllerExpandVolumeRequest::volume_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::ControllerExpandVolumeRequest
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::clone(&self) -> bpfman_csi::v1::ControllerExpandVolumeRequest
impl core::cmp::PartialEq for bpfman_csi::v1::ControllerExpandVolumeRequest
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::eq(&self, other: &bpfman_csi::v1::ControllerExpandVolumeRequest) -> bool
impl core::default::Default for bpfman_csi::v1::ControllerExpandVolumeRequest
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ControllerExpandVolumeRequest
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ControllerExpandVolumeRequest
impl prost::message::Message for bpfman_csi::v1::ControllerExpandVolumeRequest
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::clear(&mut self)
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ControllerExpandVolumeRequest
impl core::marker::Send for bpfman_csi::v1::ControllerExpandVolumeRequest
impl core::marker::Sync for bpfman_csi::v1::ControllerExpandVolumeRequest
impl core::marker::Unpin for bpfman_csi::v1::ControllerExpandVolumeRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ControllerExpandVolumeRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ControllerExpandVolumeRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ControllerExpandVolumeRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ControllerExpandVolumeRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::ControllerExpandVolumeRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ControllerExpandVolumeRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ControllerExpandVolumeRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ControllerExpandVolumeRequest where T: core::clone::Clone
pub type bpfman_csi::v1::ControllerExpandVolumeRequest::Owned = T
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ControllerExpandVolumeRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ControllerExpandVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ControllerExpandVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ControllerExpandVolumeRequest
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ControllerExpandVolumeRequest
pub fn bpfman_csi::v1::ControllerExpandVolumeRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ControllerExpandVolumeRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ControllerExpandVolumeRequest
pub struct bpfman_csi::v1::ControllerExpandVolumeResponse
pub bpfman_csi::v1::ControllerExpandVolumeResponse::capacity_bytes: i64
pub bpfman_csi::v1::ControllerExpandVolumeResponse::node_expansion_required: bool
impl core::clone::Clone for bpfman_csi::v1::ControllerExpandVolumeResponse
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::clone(&self) -> bpfman_csi::v1::ControllerExpandVolumeResponse
impl core::cmp::PartialEq for bpfman_csi::v1::ControllerExpandVolumeResponse
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::eq(&self, other: &bpfman_csi::v1::ControllerExpandVolumeResponse) -> bool
impl core::default::Default for bpfman_csi::v1::ControllerExpandVolumeResponse
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ControllerExpandVolumeResponse
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ControllerExpandVolumeResponse
impl prost::message::Message for bpfman_csi::v1::ControllerExpandVolumeResponse
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::clear(&mut self)
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ControllerExpandVolumeResponse
impl core::marker::Send for bpfman_csi::v1::ControllerExpandVolumeResponse
impl core::marker::Sync for bpfman_csi::v1::ControllerExpandVolumeResponse
impl core::marker::Unpin for bpfman_csi::v1::ControllerExpandVolumeResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ControllerExpandVolumeResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ControllerExpandVolumeResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ControllerExpandVolumeResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ControllerExpandVolumeResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::ControllerExpandVolumeResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ControllerExpandVolumeResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ControllerExpandVolumeResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ControllerExpandVolumeResponse where T: core::clone::Clone
pub type bpfman_csi::v1::ControllerExpandVolumeResponse::Owned = T
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ControllerExpandVolumeResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ControllerExpandVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ControllerExpandVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ControllerExpandVolumeResponse
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ControllerExpandVolumeResponse
pub fn bpfman_csi::v1::ControllerExpandVolumeResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ControllerExpandVolumeResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ControllerExpandVolumeResponse
pub struct bpfman_csi::v1::ControllerGetCapabilitiesRequest
impl core::clone::Clone for bpfman_csi::v1::ControllerGetCapabilitiesRequest
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::clone(&self) -> bpfman_csi::v1::ControllerGetCapabilitiesRequest
impl core::cmp::PartialEq for bpfman_csi::v1::ControllerGetCapabilitiesRequest
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::eq(&self, other: &bpfman_csi::v1::ControllerGetCapabilitiesRequest) -> bool
impl core::default::Default for bpfman_csi::v1::ControllerGetCapabilitiesRequest
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ControllerGetCapabilitiesRequest
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ControllerGetCapabilitiesRequest
impl prost::message::Message for bpfman_csi::v1::ControllerGetCapabilitiesRequest
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::clear(&mut self)
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ControllerGetCapabilitiesRequest
impl core::marker::Send for bpfman_csi::v1::ControllerGetCapabilitiesRequest
impl core::marker::Sync for bpfman_csi::v1::ControllerGetCapabilitiesRequest
impl core::marker::Unpin for bpfman_csi::v1::ControllerGetCapabilitiesRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ControllerGetCapabilitiesRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ControllerGetCapabilitiesRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ControllerGetCapabilitiesRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ControllerGetCapabilitiesRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::ControllerGetCapabilitiesRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ControllerGetCapabilitiesRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ControllerGetCapabilitiesRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ControllerGetCapabilitiesRequest where T: core::clone::Clone
pub type bpfman_csi::v1::ControllerGetCapabilitiesRequest::Owned = T
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ControllerGetCapabilitiesRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ControllerGetCapabilitiesRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ControllerGetCapabilitiesRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ControllerGetCapabilitiesRequest
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ControllerGetCapabilitiesRequest
pub fn bpfman_csi::v1::ControllerGetCapabilitiesRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ControllerGetCapabilitiesRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ControllerGetCapabilitiesRequest
pub struct bpfman_csi::v1::ControllerGetCapabilitiesResponse
pub bpfman_csi::v1::ControllerGetCapabilitiesResponse::capabilities: alloc::vec::Vec<bpfman_csi::v1::ControllerServiceCapability>
impl core::clone::Clone for bpfman_csi::v1::ControllerGetCapabilitiesResponse
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::clone(&self) -> bpfman_csi::v1::ControllerGetCapabilitiesResponse
impl core::cmp::PartialEq for bpfman_csi::v1::ControllerGetCapabilitiesResponse
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::eq(&self, other: &bpfman_csi::v1::ControllerGetCapabilitiesResponse) -> bool
impl core::default::Default for bpfman_csi::v1::ControllerGetCapabilitiesResponse
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ControllerGetCapabilitiesResponse
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ControllerGetCapabilitiesResponse
impl prost::message::Message for bpfman_csi::v1::ControllerGetCapabilitiesResponse
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::clear(&mut self)
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ControllerGetCapabilitiesResponse
impl core::marker::Send for bpfman_csi::v1::ControllerGetCapabilitiesResponse
impl core::marker::Sync for bpfman_csi::v1::ControllerGetCapabilitiesResponse
impl core::marker::Unpin for bpfman_csi::v1::ControllerGetCapabilitiesResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ControllerGetCapabilitiesResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ControllerGetCapabilitiesResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ControllerGetCapabilitiesResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ControllerGetCapabilitiesResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::ControllerGetCapabilitiesResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ControllerGetCapabilitiesResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ControllerGetCapabilitiesResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ControllerGetCapabilitiesResponse where T: core::clone::Clone
pub type bpfman_csi::v1::ControllerGetCapabilitiesResponse::Owned = T
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ControllerGetCapabilitiesResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ControllerGetCapabilitiesResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ControllerGetCapabilitiesResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ControllerGetCapabilitiesResponse
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ControllerGetCapabilitiesResponse
pub fn bpfman_csi::v1::ControllerGetCapabilitiesResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ControllerGetCapabilitiesResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ControllerGetCapabilitiesResponse
pub struct bpfman_csi::v1::ControllerGetVolumeRequest
pub bpfman_csi::v1::ControllerGetVolumeRequest::volume_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::ControllerGetVolumeRequest
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::clone(&self) -> bpfman_csi::v1::ControllerGetVolumeRequest
impl core::cmp::PartialEq for bpfman_csi::v1::ControllerGetVolumeRequest
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::eq(&self, other: &bpfman_csi::v1::ControllerGetVolumeRequest) -> bool
impl core::default::Default for bpfman_csi::v1::ControllerGetVolumeRequest
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ControllerGetVolumeRequest
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ControllerGetVolumeRequest
impl prost::message::Message for bpfman_csi::v1::ControllerGetVolumeRequest
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::clear(&mut self)
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ControllerGetVolumeRequest
impl core::marker::Send for bpfman_csi::v1::ControllerGetVolumeRequest
impl core::marker::Sync for bpfman_csi::v1::ControllerGetVolumeRequest
impl core::marker::Unpin for bpfman_csi::v1::ControllerGetVolumeRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ControllerGetVolumeRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ControllerGetVolumeRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ControllerGetVolumeRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ControllerGetVolumeRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::ControllerGetVolumeRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ControllerGetVolumeRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ControllerGetVolumeRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ControllerGetVolumeRequest where T: core::clone::Clone
pub type bpfman_csi::v1::ControllerGetVolumeRequest::Owned = T
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ControllerGetVolumeRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ControllerGetVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ControllerGetVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ControllerGetVolumeRequest
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ControllerGetVolumeRequest
pub fn bpfman_csi::v1::ControllerGetVolumeRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ControllerGetVolumeRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ControllerGetVolumeRequest
pub struct bpfman_csi::v1::ControllerGetVolumeResponse
pub bpfman_csi::v1::ControllerGetVolumeResponse::status: core::option::Option<bpfman_csi::v1::controller_get_volume_response::VolumeStatus>
pub bpfman_csi::v1::ControllerGetVolumeResponse::volume: core::option::Option<bpfman_csi::v1::Volume>
impl core::clone::Clone for bpfman_csi::v1::ControllerGetVolumeResponse
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::clone(&self) -> bpfman_csi::v1::ControllerGetVolumeResponse
impl core::cmp::PartialEq for bpfman_csi::v1::ControllerGetVolumeResponse
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::eq(&self, other: &bpfman_csi::v1::ControllerGetVolumeResponse) -> bool
impl core::default::Default for bpfman_csi::v1::ControllerGetVolumeResponse
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ControllerGetVolumeResponse
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ControllerGetVolumeResponse
impl prost::message::Message for bpfman_csi::v1::ControllerGetVolumeResponse
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::clear(&mut self)
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ControllerGetVolumeResponse
impl core::marker::Send for bpfman_csi::v1::ControllerGetVolumeResponse
impl core::marker::Sync for bpfman_csi::v1::ControllerGetVolumeResponse
impl core::marker::Unpin for bpfman_csi::v1::ControllerGetVolumeResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ControllerGetVolumeResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ControllerGetVolumeResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ControllerGetVolumeResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ControllerGetVolumeResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::ControllerGetVolumeResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ControllerGetVolumeResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ControllerGetVolumeResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ControllerGetVolumeResponse where T: core::clone::Clone
pub type bpfman_csi::v1::ControllerGetVolumeResponse::Owned = T
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ControllerGetVolumeResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ControllerGetVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ControllerGetVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ControllerGetVolumeResponse
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ControllerGetVolumeResponse
pub fn bpfman_csi::v1::ControllerGetVolumeResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ControllerGetVolumeResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ControllerGetVolumeResponse
pub struct bpfman_csi::v1::ControllerModifyVolumeRequest
pub bpfman_csi::v1::ControllerModifyVolumeRequest::mutable_parameters: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::ControllerModifyVolumeRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::ControllerModifyVolumeRequest::volume_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::ControllerModifyVolumeRequest
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::clone(&self) -> bpfman_csi::v1::ControllerModifyVolumeRequest
impl core::cmp::PartialEq for bpfman_csi::v1::ControllerModifyVolumeRequest
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::eq(&self, other: &bpfman_csi::v1::ControllerModifyVolumeRequest) -> bool
impl core::default::Default for bpfman_csi::v1::ControllerModifyVolumeRequest
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ControllerModifyVolumeRequest
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ControllerModifyVolumeRequest
impl prost::message::Message for bpfman_csi::v1::ControllerModifyVolumeRequest
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::clear(&mut self)
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ControllerModifyVolumeRequest
impl core::marker::Send for bpfman_csi::v1::ControllerModifyVolumeRequest
impl core::marker::Sync for bpfman_csi::v1::ControllerModifyVolumeRequest
impl core::marker::Unpin for bpfman_csi::v1::ControllerModifyVolumeRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ControllerModifyVolumeRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ControllerModifyVolumeRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ControllerModifyVolumeRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ControllerModifyVolumeRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::ControllerModifyVolumeRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ControllerModifyVolumeRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ControllerModifyVolumeRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ControllerModifyVolumeRequest where T: core::clone::Clone
pub type bpfman_csi::v1::ControllerModifyVolumeRequest::Owned = T
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ControllerModifyVolumeRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ControllerModifyVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ControllerModifyVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ControllerModifyVolumeRequest
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ControllerModifyVolumeRequest
pub fn bpfman_csi::v1::ControllerModifyVolumeRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ControllerModifyVolumeRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ControllerModifyVolumeRequest
pub struct bpfman_csi::v1::ControllerModifyVolumeResponse
impl core::clone::Clone for bpfman_csi::v1::ControllerModifyVolumeResponse
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::clone(&self) -> bpfman_csi::v1::ControllerModifyVolumeResponse
impl core::cmp::PartialEq for bpfman_csi::v1::ControllerModifyVolumeResponse
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::eq(&self, other: &bpfman_csi::v1::ControllerModifyVolumeResponse) -> bool
impl core::default::Default for bpfman_csi::v1::ControllerModifyVolumeResponse
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ControllerModifyVolumeResponse
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ControllerModifyVolumeResponse
impl prost::message::Message for bpfman_csi::v1::ControllerModifyVolumeResponse
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::clear(&mut self)
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ControllerModifyVolumeResponse
impl core::marker::Send for bpfman_csi::v1::ControllerModifyVolumeResponse
impl core::marker::Sync for bpfman_csi::v1::ControllerModifyVolumeResponse
impl core::marker::Unpin for bpfman_csi::v1::ControllerModifyVolumeResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ControllerModifyVolumeResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ControllerModifyVolumeResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ControllerModifyVolumeResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ControllerModifyVolumeResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::ControllerModifyVolumeResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ControllerModifyVolumeResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ControllerModifyVolumeResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ControllerModifyVolumeResponse where T: core::clone::Clone
pub type bpfman_csi::v1::ControllerModifyVolumeResponse::Owned = T
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ControllerModifyVolumeResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ControllerModifyVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ControllerModifyVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ControllerModifyVolumeResponse
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ControllerModifyVolumeResponse
pub fn bpfman_csi::v1::ControllerModifyVolumeResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ControllerModifyVolumeResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ControllerModifyVolumeResponse
pub struct bpfman_csi::v1::ControllerPublishVolumeRequest
pub bpfman_csi::v1::ControllerPublishVolumeRequest::node_id: alloc::string::String
pub bpfman_csi::v1::ControllerPublishVolumeRequest::readonly: bool
pub bpfman_csi::v1::ControllerPublishVolumeRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::ControllerPublishVolumeRequest::volume_capability: core::option::Option<bpfman_csi::v1::VolumeCapability>
pub bpfman_csi::v1::ControllerPublishVolumeRequest::volume_context: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::ControllerPublishVolumeRequest::volume_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::ControllerPublishVolumeRequest
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::clone(&self) -> bpfman_csi::v1::ControllerPublishVolumeRequest
impl core::cmp::PartialEq for bpfman_csi::v1::ControllerPublishVolumeRequest
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::eq(&self, other: &bpfman_csi::v1::ControllerPublishVolumeRequest) -> bool
impl core::default::Default for bpfman_csi::v1::ControllerPublishVolumeRequest
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ControllerPublishVolumeRequest
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ControllerPublishVolumeRequest
impl prost::message::Message for bpfman_csi::v1::ControllerPublishVolumeRequest
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::clear(&mut self)
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ControllerPublishVolumeRequest
impl core::marker::Send for bpfman_csi::v1::ControllerPublishVolumeRequest
impl core::marker::Sync for bpfman_csi::v1::ControllerPublishVolumeRequest
impl core::marker::Unpin for bpfman_csi::v1::ControllerPublishVolumeRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ControllerPublishVolumeRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ControllerPublishVolumeRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ControllerPublishVolumeRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ControllerPublishVolumeRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::ControllerPublishVolumeRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ControllerPublishVolumeRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ControllerPublishVolumeRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ControllerPublishVolumeRequest where T: core::clone::Clone
pub type bpfman_csi::v1::ControllerPublishVolumeRequest::Owned = T
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ControllerPublishVolumeRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ControllerPublishVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ControllerPublishVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ControllerPublishVolumeRequest
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ControllerPublishVolumeRequest
pub fn bpfman_csi::v1::ControllerPublishVolumeRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ControllerPublishVolumeRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ControllerPublishVolumeRequest
pub struct bpfman_csi::v1::ControllerPublishVolumeResponse
pub bpfman_csi::v1::ControllerPublishVolumeResponse::publish_context: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
impl core::clone::Clone for bpfman_csi::v1::ControllerPublishVolumeResponse
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::clone(&self) -> bpfman_csi::v1::ControllerPublishVolumeResponse
impl core::cmp::PartialEq for bpfman_csi::v1::ControllerPublishVolumeResponse
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::eq(&self, other: &bpfman_csi::v1::ControllerPublishVolumeResponse) -> bool
impl core::default::Default for bpfman_csi::v1::ControllerPublishVolumeResponse
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ControllerPublishVolumeResponse
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ControllerPublishVolumeResponse
impl prost::message::Message for bpfman_csi::v1::ControllerPublishVolumeResponse
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::clear(&mut self)
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ControllerPublishVolumeResponse
impl core::marker::Send for bpfman_csi::v1::ControllerPublishVolumeResponse
impl core::marker::Sync for bpfman_csi::v1::ControllerPublishVolumeResponse
impl core::marker::Unpin for bpfman_csi::v1::ControllerPublishVolumeResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ControllerPublishVolumeResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ControllerPublishVolumeResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ControllerPublishVolumeResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ControllerPublishVolumeResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::ControllerPublishVolumeResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ControllerPublishVolumeResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ControllerPublishVolumeResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ControllerPublishVolumeResponse where T: core::clone::Clone
pub type bpfman_csi::v1::ControllerPublishVolumeResponse::Owned = T
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ControllerPublishVolumeResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ControllerPublishVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ControllerPublishVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ControllerPublishVolumeResponse
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ControllerPublishVolumeResponse
pub fn bpfman_csi::v1::ControllerPublishVolumeResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ControllerPublishVolumeResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ControllerPublishVolumeResponse
pub struct bpfman_csi::v1::ControllerServiceCapability
pub bpfman_csi::v1::ControllerServiceCapability::type: core::option::Option<bpfman_csi::v1::controller_service_capability::Type>
impl core::clone::Clone for bpfman_csi::v1::ControllerServiceCapability
pub fn bpfman_csi::v1::ControllerServiceCapability::clone(&self) -> bpfman_csi::v1::ControllerServiceCapability
impl core::cmp::PartialEq for bpfman_csi::v1::ControllerServiceCapability
pub fn bpfman_csi::v1::ControllerServiceCapability::eq(&self, other: &bpfman_csi::v1::ControllerServiceCapability) -> bool
impl core::default::Default for bpfman_csi::v1::ControllerServiceCapability
pub fn bpfman_csi::v1::ControllerServiceCapability::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ControllerServiceCapability
pub fn bpfman_csi::v1::ControllerServiceCapability::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ControllerServiceCapability
impl prost::message::Message for bpfman_csi::v1::ControllerServiceCapability
pub fn bpfman_csi::v1::ControllerServiceCapability::clear(&mut self)
pub fn bpfman_csi::v1::ControllerServiceCapability::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ControllerServiceCapability
impl core::marker::Send for bpfman_csi::v1::ControllerServiceCapability
impl core::marker::Sync for bpfman_csi::v1::ControllerServiceCapability
impl core::marker::Unpin for bpfman_csi::v1::ControllerServiceCapability
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ControllerServiceCapability
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ControllerServiceCapability
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ControllerServiceCapability where U: core::convert::From<T>
pub fn bpfman_csi::v1::ControllerServiceCapability::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ControllerServiceCapability where U: core::convert::Into<T>
pub type bpfman_csi::v1::ControllerServiceCapability::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ControllerServiceCapability::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ControllerServiceCapability where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ControllerServiceCapability::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ControllerServiceCapability::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ControllerServiceCapability where T: core::clone::Clone
pub type bpfman_csi::v1::ControllerServiceCapability::Owned = T
pub fn bpfman_csi::v1::ControllerServiceCapability::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ControllerServiceCapability::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ControllerServiceCapability where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ControllerServiceCapability::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ControllerServiceCapability where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerServiceCapability::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ControllerServiceCapability where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerServiceCapability::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ControllerServiceCapability
pub fn bpfman_csi::v1::ControllerServiceCapability::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ControllerServiceCapability
pub fn bpfman_csi::v1::ControllerServiceCapability::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ControllerServiceCapability
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ControllerServiceCapability
pub struct bpfman_csi::v1::ControllerUnpublishVolumeRequest
pub bpfman_csi::v1::ControllerUnpublishVolumeRequest::node_id: alloc::string::String
pub bpfman_csi::v1::ControllerUnpublishVolumeRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::ControllerUnpublishVolumeRequest::volume_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::ControllerUnpublishVolumeRequest
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::clone(&self) -> bpfman_csi::v1::ControllerUnpublishVolumeRequest
impl core::cmp::PartialEq for bpfman_csi::v1::ControllerUnpublishVolumeRequest
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::eq(&self, other: &bpfman_csi::v1::ControllerUnpublishVolumeRequest) -> bool
impl core::default::Default for bpfman_csi::v1::ControllerUnpublishVolumeRequest
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ControllerUnpublishVolumeRequest
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ControllerUnpublishVolumeRequest
impl prost::message::Message for bpfman_csi::v1::ControllerUnpublishVolumeRequest
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::clear(&mut self)
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ControllerUnpublishVolumeRequest
impl core::marker::Send for bpfman_csi::v1::ControllerUnpublishVolumeRequest
impl core::marker::Sync for bpfman_csi::v1::ControllerUnpublishVolumeRequest
impl core::marker::Unpin for bpfman_csi::v1::ControllerUnpublishVolumeRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ControllerUnpublishVolumeRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ControllerUnpublishVolumeRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ControllerUnpublishVolumeRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ControllerUnpublishVolumeRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::ControllerUnpublishVolumeRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ControllerUnpublishVolumeRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ControllerUnpublishVolumeRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ControllerUnpublishVolumeRequest where T: core::clone::Clone
pub type bpfman_csi::v1::ControllerUnpublishVolumeRequest::Owned = T
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ControllerUnpublishVolumeRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ControllerUnpublishVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ControllerUnpublishVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ControllerUnpublishVolumeRequest
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ControllerUnpublishVolumeRequest
pub fn bpfman_csi::v1::ControllerUnpublishVolumeRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ControllerUnpublishVolumeRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ControllerUnpublishVolumeRequest
pub struct bpfman_csi::v1::ControllerUnpublishVolumeResponse
impl core::clone::Clone for bpfman_csi::v1::ControllerUnpublishVolumeResponse
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::clone(&self) -> bpfman_csi::v1::ControllerUnpublishVolumeResponse
impl core::cmp::PartialEq for bpfman_csi::v1::ControllerUnpublishVolumeResponse
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::eq(&self, other: &bpfman_csi::v1::ControllerUnpublishVolumeResponse) -> bool
impl core::default::Default for bpfman_csi::v1::ControllerUnpublishVolumeResponse
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ControllerUnpublishVolumeResponse
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ControllerUnpublishVolumeResponse
impl prost::message::Message for bpfman_csi::v1::ControllerUnpublishVolumeResponse
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::clear(&mut self)
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ControllerUnpublishVolumeResponse
impl core::marker::Send for bpfman_csi::v1::ControllerUnpublishVolumeResponse
impl core::marker::Sync for bpfman_csi::v1::ControllerUnpublishVolumeResponse
impl core::marker::Unpin for bpfman_csi::v1::ControllerUnpublishVolumeResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ControllerUnpublishVolumeResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ControllerUnpublishVolumeResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ControllerUnpublishVolumeResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ControllerUnpublishVolumeResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::ControllerUnpublishVolumeResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ControllerUnpublishVolumeResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ControllerUnpublishVolumeResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ControllerUnpublishVolumeResponse where T: core::clone::Clone
pub type bpfman_csi::v1::ControllerUnpublishVolumeResponse::Owned = T
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ControllerUnpublishVolumeResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ControllerUnpublishVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ControllerUnpublishVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ControllerUnpublishVolumeResponse
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ControllerUnpublishVolumeResponse
pub fn bpfman_csi::v1::ControllerUnpublishVolumeResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ControllerUnpublishVolumeResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ControllerUnpublishVolumeResponse
pub struct bpfman_csi::v1::CreateSnapshotRequest
pub bpfman_csi::v1::CreateSnapshotRequest::name: alloc::string::String
pub bpfman_csi::v1::CreateSnapshotRequest::parameters: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::CreateSnapshotRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::CreateSnapshotRequest::source_volume_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::CreateSnapshotRequest
pub fn bpfman_csi::v1::CreateSnapshotRequest::clone(&self) -> bpfman_csi::v1::CreateSnapshotRequest
impl core::cmp::PartialEq for bpfman_csi::v1::CreateSnapshotRequest
pub fn bpfman_csi::v1::CreateSnapshotRequest::eq(&self, other: &bpfman_csi::v1::CreateSnapshotRequest) -> bool
impl core::default::Default for bpfman_csi::v1::CreateSnapshotRequest
pub fn bpfman_csi::v1::CreateSnapshotRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::CreateSnapshotRequest
pub fn bpfman_csi::v1::CreateSnapshotRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::CreateSnapshotRequest
impl prost::message::Message for bpfman_csi::v1::CreateSnapshotRequest
pub fn bpfman_csi::v1::CreateSnapshotRequest::clear(&mut self)
pub fn bpfman_csi::v1::CreateSnapshotRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::CreateSnapshotRequest
impl core::marker::Send for bpfman_csi::v1::CreateSnapshotRequest
impl core::marker::Sync for bpfman_csi::v1::CreateSnapshotRequest
impl core::marker::Unpin for bpfman_csi::v1::CreateSnapshotRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::CreateSnapshotRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::CreateSnapshotRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::CreateSnapshotRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::CreateSnapshotRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::CreateSnapshotRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::CreateSnapshotRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::CreateSnapshotRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::CreateSnapshotRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::CreateSnapshotRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::CreateSnapshotRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::CreateSnapshotRequest where T: core::clone::Clone
pub type bpfman_csi::v1::CreateSnapshotRequest::Owned = T
pub fn bpfman_csi::v1::CreateSnapshotRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::CreateSnapshotRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::CreateSnapshotRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::CreateSnapshotRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::CreateSnapshotRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::CreateSnapshotRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::CreateSnapshotRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::CreateSnapshotRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::CreateSnapshotRequest
pub fn bpfman_csi::v1::CreateSnapshotRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::CreateSnapshotRequest
pub fn bpfman_csi::v1::CreateSnapshotRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::CreateSnapshotRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::CreateSnapshotRequest
pub struct bpfman_csi::v1::CreateSnapshotResponse
pub bpfman_csi::v1::CreateSnapshotResponse::snapshot: core::option::Option<bpfman_csi::v1::Snapshot>
impl core::clone::Clone for bpfman_csi::v1::CreateSnapshotResponse
pub fn bpfman_csi::v1::CreateSnapshotResponse::clone(&self) -> bpfman_csi::v1::CreateSnapshotResponse
impl core::cmp::PartialEq for bpfman_csi::v1::CreateSnapshotResponse
pub fn bpfman_csi::v1::CreateSnapshotResponse::eq(&self, other: &bpfman_csi::v1::CreateSnapshotResponse) -> bool
impl core::default::Default for bpfman_csi::v1::CreateSnapshotResponse
pub fn bpfman_csi::v1::CreateSnapshotResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::CreateSnapshotResponse
pub fn bpfman_csi::v1::CreateSnapshotResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::CreateSnapshotResponse
impl prost::message::Message for bpfman_csi::v1::CreateSnapshotResponse
pub fn bpfman_csi::v1::CreateSnapshotResponse::clear(&mut self)
pub fn bpfman_csi::v1::CreateSnapshotResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::CreateSnapshotResponse
impl core::marker::Send for bpfman_csi::v1::CreateSnapshotResponse
impl core::marker::Sync for bpfman_csi::v1::CreateSnapshotResponse
impl core::marker::Unpin for bpfman_csi::v1::CreateSnapshotResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::CreateSnapshotResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::CreateSnapshotResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::CreateSnapshotResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::CreateSnapshotResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::CreateSnapshotResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::CreateSnapshotResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::CreateSnapshotResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::CreateSnapshotResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::CreateSnapshotResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::CreateSnapshotResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::CreateSnapshotResponse where T: core::clone::Clone
pub type bpfman_csi::v1::CreateSnapshotResponse::Owned = T
pub fn bpfman_csi::v1::CreateSnapshotResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::CreateSnapshotResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::CreateSnapshotResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::CreateSnapshotResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::CreateSnapshotResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::CreateSnapshotResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::CreateSnapshotResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::CreateSnapshotResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::CreateSnapshotResponse
pub fn bpfman_csi::v1::CreateSnapshotResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::CreateSnapshotResponse
pub fn bpfman_csi::v1::CreateSnapshotResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::CreateSnapshotResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::CreateSnapshotResponse
pub struct bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
pub bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::name: alloc::string::String
pub bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::parameters: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::source_volume_ids: alloc::vec::Vec<alloc::string::String>
impl core::clone::Clone for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::clone(&self) -> bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
impl core::cmp::PartialEq for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::eq(&self, other: &bpfman_csi::v1::CreateVolumeGroupSnapshotRequest) -> bool
impl core::default::Default for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
impl prost::message::Message for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::clear(&mut self)
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
impl core::marker::Send for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
impl core::marker::Sync for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
impl core::marker::Unpin for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest where T: core::clone::Clone
pub type bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::Owned = T
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::CreateVolumeGroupSnapshotRequest
pub struct bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
pub bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::group_snapshot: core::option::Option<bpfman_csi::v1::VolumeGroupSnapshot>
impl core::clone::Clone for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::clone(&self) -> bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
impl core::cmp::PartialEq for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::eq(&self, other: &bpfman_csi::v1::CreateVolumeGroupSnapshotResponse) -> bool
impl core::default::Default for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
impl prost::message::Message for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::clear(&mut self)
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
impl core::marker::Send for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
impl core::marker::Sync for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
impl core::marker::Unpin for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse where T: core::clone::Clone
pub type bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::Owned = T
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::CreateVolumeGroupSnapshotResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::CreateVolumeGroupSnapshotResponse
pub struct bpfman_csi::v1::CreateVolumeRequest
pub bpfman_csi::v1::CreateVolumeRequest::accessibility_requirements: core::option::Option<bpfman_csi::v1::TopologyRequirement>
pub bpfman_csi::v1::CreateVolumeRequest::capacity_range: core::option::Option<bpfman_csi::v1::CapacityRange>
pub bpfman_csi::v1::CreateVolumeRequest::mutable_parameters: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::CreateVolumeRequest::name: alloc::string::String
pub bpfman_csi::v1::CreateVolumeRequest::parameters: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::CreateVolumeRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::CreateVolumeRequest::volume_capabilities: alloc::vec::Vec<bpfman_csi::v1::VolumeCapability>
pub bpfman_csi::v1::CreateVolumeRequest::volume_content_source: core::option::Option<bpfman_csi::v1::VolumeContentSource>
impl core::clone::Clone for bpfman_csi::v1::CreateVolumeRequest
pub fn bpfman_csi::v1::CreateVolumeRequest::clone(&self) -> bpfman_csi::v1::CreateVolumeRequest
impl core::cmp::PartialEq for bpfman_csi::v1::CreateVolumeRequest
pub fn bpfman_csi::v1::CreateVolumeRequest::eq(&self, other: &bpfman_csi::v1::CreateVolumeRequest) -> bool
impl core::default::Default for bpfman_csi::v1::CreateVolumeRequest
pub fn bpfman_csi::v1::CreateVolumeRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::CreateVolumeRequest
pub fn bpfman_csi::v1::CreateVolumeRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::CreateVolumeRequest
impl prost::message::Message for bpfman_csi::v1::CreateVolumeRequest
pub fn bpfman_csi::v1::CreateVolumeRequest::clear(&mut self)
pub fn bpfman_csi::v1::CreateVolumeRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::CreateVolumeRequest
impl core::marker::Send for bpfman_csi::v1::CreateVolumeRequest
impl core::marker::Sync for bpfman_csi::v1::CreateVolumeRequest
impl core::marker::Unpin for bpfman_csi::v1::CreateVolumeRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::CreateVolumeRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::CreateVolumeRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::CreateVolumeRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::CreateVolumeRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::CreateVolumeRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::CreateVolumeRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::CreateVolumeRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::CreateVolumeRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::CreateVolumeRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::CreateVolumeRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::CreateVolumeRequest where T: core::clone::Clone
pub type bpfman_csi::v1::CreateVolumeRequest::Owned = T
pub fn bpfman_csi::v1::CreateVolumeRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::CreateVolumeRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::CreateVolumeRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::CreateVolumeRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::CreateVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::CreateVolumeRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::CreateVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::CreateVolumeRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::CreateVolumeRequest
pub fn bpfman_csi::v1::CreateVolumeRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::CreateVolumeRequest
pub fn bpfman_csi::v1::CreateVolumeRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::CreateVolumeRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::CreateVolumeRequest
pub struct bpfman_csi::v1::CreateVolumeResponse
pub bpfman_csi::v1::CreateVolumeResponse::volume: core::option::Option<bpfman_csi::v1::Volume>
impl core::clone::Clone for bpfman_csi::v1::CreateVolumeResponse
pub fn bpfman_csi::v1::CreateVolumeResponse::clone(&self) -> bpfman_csi::v1::CreateVolumeResponse
impl core::cmp::PartialEq for bpfman_csi::v1::CreateVolumeResponse
pub fn bpfman_csi::v1::CreateVolumeResponse::eq(&self, other: &bpfman_csi::v1::CreateVolumeResponse) -> bool
impl core::default::Default for bpfman_csi::v1::CreateVolumeResponse
pub fn bpfman_csi::v1::CreateVolumeResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::CreateVolumeResponse
pub fn bpfman_csi::v1::CreateVolumeResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::CreateVolumeResponse
impl prost::message::Message for bpfman_csi::v1::CreateVolumeResponse
pub fn bpfman_csi::v1::CreateVolumeResponse::clear(&mut self)
pub fn bpfman_csi::v1::CreateVolumeResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::CreateVolumeResponse
impl core::marker::Send for bpfman_csi::v1::CreateVolumeResponse
impl core::marker::Sync for bpfman_csi::v1::CreateVolumeResponse
impl core::marker::Unpin for bpfman_csi::v1::CreateVolumeResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::CreateVolumeResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::CreateVolumeResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::CreateVolumeResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::CreateVolumeResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::CreateVolumeResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::CreateVolumeResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::CreateVolumeResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::CreateVolumeResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::CreateVolumeResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::CreateVolumeResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::CreateVolumeResponse where T: core::clone::Clone
pub type bpfman_csi::v1::CreateVolumeResponse::Owned = T
pub fn bpfman_csi::v1::CreateVolumeResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::CreateVolumeResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::CreateVolumeResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::CreateVolumeResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::CreateVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::CreateVolumeResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::CreateVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::CreateVolumeResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::CreateVolumeResponse
pub fn bpfman_csi::v1::CreateVolumeResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::CreateVolumeResponse
pub fn bpfman_csi::v1::CreateVolumeResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::CreateVolumeResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::CreateVolumeResponse
pub struct bpfman_csi::v1::DeleteSnapshotRequest
pub bpfman_csi::v1::DeleteSnapshotRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::DeleteSnapshotRequest::snapshot_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::DeleteSnapshotRequest
pub fn bpfman_csi::v1::DeleteSnapshotRequest::clone(&self) -> bpfman_csi::v1::DeleteSnapshotRequest
impl core::cmp::PartialEq for bpfman_csi::v1::DeleteSnapshotRequest
pub fn bpfman_csi::v1::DeleteSnapshotRequest::eq(&self, other: &bpfman_csi::v1::DeleteSnapshotRequest) -> bool
impl core::default::Default for bpfman_csi::v1::DeleteSnapshotRequest
pub fn bpfman_csi::v1::DeleteSnapshotRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::DeleteSnapshotRequest
pub fn bpfman_csi::v1::DeleteSnapshotRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::DeleteSnapshotRequest
impl prost::message::Message for bpfman_csi::v1::DeleteSnapshotRequest
pub fn bpfman_csi::v1::DeleteSnapshotRequest::clear(&mut self)
pub fn bpfman_csi::v1::DeleteSnapshotRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::DeleteSnapshotRequest
impl core::marker::Send for bpfman_csi::v1::DeleteSnapshotRequest
impl core::marker::Sync for bpfman_csi::v1::DeleteSnapshotRequest
impl core::marker::Unpin for bpfman_csi::v1::DeleteSnapshotRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::DeleteSnapshotRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::DeleteSnapshotRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::DeleteSnapshotRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::DeleteSnapshotRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::DeleteSnapshotRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::DeleteSnapshotRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::DeleteSnapshotRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::DeleteSnapshotRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::DeleteSnapshotRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::DeleteSnapshotRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::DeleteSnapshotRequest where T: core::clone::Clone
pub type bpfman_csi::v1::DeleteSnapshotRequest::Owned = T
pub fn bpfman_csi::v1::DeleteSnapshotRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::DeleteSnapshotRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::DeleteSnapshotRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::DeleteSnapshotRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::DeleteSnapshotRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::DeleteSnapshotRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::DeleteSnapshotRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::DeleteSnapshotRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::DeleteSnapshotRequest
pub fn bpfman_csi::v1::DeleteSnapshotRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::DeleteSnapshotRequest
pub fn bpfman_csi::v1::DeleteSnapshotRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::DeleteSnapshotRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::DeleteSnapshotRequest
pub struct bpfman_csi::v1::DeleteSnapshotResponse
impl core::clone::Clone for bpfman_csi::v1::DeleteSnapshotResponse
pub fn bpfman_csi::v1::DeleteSnapshotResponse::clone(&self) -> bpfman_csi::v1::DeleteSnapshotResponse
impl core::cmp::PartialEq for bpfman_csi::v1::DeleteSnapshotResponse
pub fn bpfman_csi::v1::DeleteSnapshotResponse::eq(&self, other: &bpfman_csi::v1::DeleteSnapshotResponse) -> bool
impl core::default::Default for bpfman_csi::v1::DeleteSnapshotResponse
pub fn bpfman_csi::v1::DeleteSnapshotResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::DeleteSnapshotResponse
pub fn bpfman_csi::v1::DeleteSnapshotResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::DeleteSnapshotResponse
impl prost::message::Message for bpfman_csi::v1::DeleteSnapshotResponse
pub fn bpfman_csi::v1::DeleteSnapshotResponse::clear(&mut self)
pub fn bpfman_csi::v1::DeleteSnapshotResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::DeleteSnapshotResponse
impl core::marker::Send for bpfman_csi::v1::DeleteSnapshotResponse
impl core::marker::Sync for bpfman_csi::v1::DeleteSnapshotResponse
impl core::marker::Unpin for bpfman_csi::v1::DeleteSnapshotResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::DeleteSnapshotResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::DeleteSnapshotResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::DeleteSnapshotResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::DeleteSnapshotResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::DeleteSnapshotResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::DeleteSnapshotResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::DeleteSnapshotResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::DeleteSnapshotResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::DeleteSnapshotResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::DeleteSnapshotResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::DeleteSnapshotResponse where T: core::clone::Clone
pub type bpfman_csi::v1::DeleteSnapshotResponse::Owned = T
pub fn bpfman_csi::v1::DeleteSnapshotResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::DeleteSnapshotResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::DeleteSnapshotResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::DeleteSnapshotResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::DeleteSnapshotResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::DeleteSnapshotResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::DeleteSnapshotResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::DeleteSnapshotResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::DeleteSnapshotResponse
pub fn bpfman_csi::v1::DeleteSnapshotResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::DeleteSnapshotResponse
pub fn bpfman_csi::v1::DeleteSnapshotResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::DeleteSnapshotResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::DeleteSnapshotResponse
pub struct bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
pub bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::group_snapshot_id: alloc::string::String
pub bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::snapshot_ids: alloc::vec::Vec<alloc::string::String>
impl core::clone::Clone for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::clone(&self) -> bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
impl core::cmp::PartialEq for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::eq(&self, other: &bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest) -> bool
impl core::default::Default for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
impl prost::message::Message for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::clear(&mut self)
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
impl core::marker::Send for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
impl core::marker::Sync for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
impl core::marker::Unpin for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest where T: core::clone::Clone
pub type bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::Owned = T
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::DeleteVolumeGroupSnapshotRequest
pub struct bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
impl core::clone::Clone for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::clone(&self) -> bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
impl core::cmp::PartialEq for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::eq(&self, other: &bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse) -> bool
impl core::default::Default for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
impl prost::message::Message for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::clear(&mut self)
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
impl core::marker::Send for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
impl core::marker::Sync for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
impl core::marker::Unpin for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse where T: core::clone::Clone
pub type bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::Owned = T
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::DeleteVolumeGroupSnapshotResponse
pub struct bpfman_csi::v1::DeleteVolumeRequest
pub bpfman_csi::v1::DeleteVolumeRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::DeleteVolumeRequest::volume_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::DeleteVolumeRequest
pub fn bpfman_csi::v1::DeleteVolumeRequest::clone(&self) -> bpfman_csi::v1::DeleteVolumeRequest
impl core::cmp::PartialEq for bpfman_csi::v1::DeleteVolumeRequest
pub fn bpfman_csi::v1::DeleteVolumeRequest::eq(&self, other: &bpfman_csi::v1::DeleteVolumeRequest) -> bool
impl core::default::Default for bpfman_csi::v1::DeleteVolumeRequest
pub fn bpfman_csi::v1::DeleteVolumeRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::DeleteVolumeRequest
pub fn bpfman_csi::v1::DeleteVolumeRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::DeleteVolumeRequest
impl prost::message::Message for bpfman_csi::v1::DeleteVolumeRequest
pub fn bpfman_csi::v1::DeleteVolumeRequest::clear(&mut self)
pub fn bpfman_csi::v1::DeleteVolumeRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::DeleteVolumeRequest
impl core::marker::Send for bpfman_csi::v1::DeleteVolumeRequest
impl core::marker::Sync for bpfman_csi::v1::DeleteVolumeRequest
impl core::marker::Unpin for bpfman_csi::v1::DeleteVolumeRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::DeleteVolumeRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::DeleteVolumeRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::DeleteVolumeRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::DeleteVolumeRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::DeleteVolumeRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::DeleteVolumeRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::DeleteVolumeRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::DeleteVolumeRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::DeleteVolumeRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::DeleteVolumeRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::DeleteVolumeRequest where T: core::clone::Clone
pub type bpfman_csi::v1::DeleteVolumeRequest::Owned = T
pub fn bpfman_csi::v1::DeleteVolumeRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::DeleteVolumeRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::DeleteVolumeRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::DeleteVolumeRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::DeleteVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::DeleteVolumeRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::DeleteVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::DeleteVolumeRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::DeleteVolumeRequest
pub fn bpfman_csi::v1::DeleteVolumeRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::DeleteVolumeRequest
pub fn bpfman_csi::v1::DeleteVolumeRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::DeleteVolumeRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::DeleteVolumeRequest
pub struct bpfman_csi::v1::DeleteVolumeResponse
impl core::clone::Clone for bpfman_csi::v1::DeleteVolumeResponse
pub fn bpfman_csi::v1::DeleteVolumeResponse::clone(&self) -> bpfman_csi::v1::DeleteVolumeResponse
impl core::cmp::PartialEq for bpfman_csi::v1::DeleteVolumeResponse
pub fn bpfman_csi::v1::DeleteVolumeResponse::eq(&self, other: &bpfman_csi::v1::DeleteVolumeResponse) -> bool
impl core::default::Default for bpfman_csi::v1::DeleteVolumeResponse
pub fn bpfman_csi::v1::DeleteVolumeResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::DeleteVolumeResponse
pub fn bpfman_csi::v1::DeleteVolumeResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::DeleteVolumeResponse
impl prost::message::Message for bpfman_csi::v1::DeleteVolumeResponse
pub fn bpfman_csi::v1::DeleteVolumeResponse::clear(&mut self)
pub fn bpfman_csi::v1::DeleteVolumeResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::DeleteVolumeResponse
impl core::marker::Send for bpfman_csi::v1::DeleteVolumeResponse
impl core::marker::Sync for bpfman_csi::v1::DeleteVolumeResponse
impl core::marker::Unpin for bpfman_csi::v1::DeleteVolumeResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::DeleteVolumeResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::DeleteVolumeResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::DeleteVolumeResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::DeleteVolumeResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::DeleteVolumeResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::DeleteVolumeResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::DeleteVolumeResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::DeleteVolumeResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::DeleteVolumeResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::DeleteVolumeResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::DeleteVolumeResponse where T: core::clone::Clone
pub type bpfman_csi::v1::DeleteVolumeResponse::Owned = T
pub fn bpfman_csi::v1::DeleteVolumeResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::DeleteVolumeResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::DeleteVolumeResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::DeleteVolumeResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::DeleteVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::DeleteVolumeResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::DeleteVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::DeleteVolumeResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::DeleteVolumeResponse
pub fn bpfman_csi::v1::DeleteVolumeResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::DeleteVolumeResponse
pub fn bpfman_csi::v1::DeleteVolumeResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::DeleteVolumeResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::DeleteVolumeResponse
pub struct bpfman_csi::v1::GetCapacityRequest
pub bpfman_csi::v1::GetCapacityRequest::accessible_topology: core::option::Option<bpfman_csi::v1::Topology>
pub bpfman_csi::v1::GetCapacityRequest::parameters: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::GetCapacityRequest::volume_capabilities: alloc::vec::Vec<bpfman_csi::v1::VolumeCapability>
impl core::clone::Clone for bpfman_csi::v1::GetCapacityRequest
pub fn bpfman_csi::v1::GetCapacityRequest::clone(&self) -> bpfman_csi::v1::GetCapacityRequest
impl core::cmp::PartialEq for bpfman_csi::v1::GetCapacityRequest
pub fn bpfman_csi::v1::GetCapacityRequest::eq(&self, other: &bpfman_csi::v1::GetCapacityRequest) -> bool
impl core::default::Default for bpfman_csi::v1::GetCapacityRequest
pub fn bpfman_csi::v1::GetCapacityRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::GetCapacityRequest
pub fn bpfman_csi::v1::GetCapacityRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::GetCapacityRequest
impl prost::message::Message for bpfman_csi::v1::GetCapacityRequest
pub fn bpfman_csi::v1::GetCapacityRequest::clear(&mut self)
pub fn bpfman_csi::v1::GetCapacityRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::GetCapacityRequest
impl core::marker::Send for bpfman_csi::v1::GetCapacityRequest
impl core::marker::Sync for bpfman_csi::v1::GetCapacityRequest
impl core::marker::Unpin for bpfman_csi::v1::GetCapacityRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::GetCapacityRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::GetCapacityRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::GetCapacityRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::GetCapacityRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::GetCapacityRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::GetCapacityRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::GetCapacityRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::GetCapacityRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::GetCapacityRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::GetCapacityRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::GetCapacityRequest where T: core::clone::Clone
pub type bpfman_csi::v1::GetCapacityRequest::Owned = T
pub fn bpfman_csi::v1::GetCapacityRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::GetCapacityRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::GetCapacityRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::GetCapacityRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::GetCapacityRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::GetCapacityRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::GetCapacityRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::GetCapacityRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::GetCapacityRequest
pub fn bpfman_csi::v1::GetCapacityRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::GetCapacityRequest
pub fn bpfman_csi::v1::GetCapacityRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::GetCapacityRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::GetCapacityRequest
pub struct bpfman_csi::v1::GetCapacityResponse
pub bpfman_csi::v1::GetCapacityResponse::available_capacity: i64
pub bpfman_csi::v1::GetCapacityResponse::maximum_volume_size: core::option::Option<i64>
pub bpfman_csi::v1::GetCapacityResponse::minimum_volume_size: core::option::Option<i64>
impl core::clone::Clone for bpfman_csi::v1::GetCapacityResponse
pub fn bpfman_csi::v1::GetCapacityResponse::clone(&self) -> bpfman_csi::v1::GetCapacityResponse
impl core::cmp::PartialEq for bpfman_csi::v1::GetCapacityResponse
pub fn bpfman_csi::v1::GetCapacityResponse::eq(&self, other: &bpfman_csi::v1::GetCapacityResponse) -> bool
impl core::default::Default for bpfman_csi::v1::GetCapacityResponse
pub fn bpfman_csi::v1::GetCapacityResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::GetCapacityResponse
pub fn bpfman_csi::v1::GetCapacityResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::GetCapacityResponse
impl prost::message::Message for bpfman_csi::v1::GetCapacityResponse
pub fn bpfman_csi::v1::GetCapacityResponse::clear(&mut self)
pub fn bpfman_csi::v1::GetCapacityResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::GetCapacityResponse
impl core::marker::Send for bpfman_csi::v1::GetCapacityResponse
impl core::marker::Sync for bpfman_csi::v1::GetCapacityResponse
impl core::marker::Unpin for bpfman_csi::v1::GetCapacityResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::GetCapacityResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::GetCapacityResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::GetCapacityResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::GetCapacityResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::GetCapacityResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::GetCapacityResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::GetCapacityResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::GetCapacityResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::GetCapacityResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::GetCapacityResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::GetCapacityResponse where T: core::clone::Clone
pub type bpfman_csi::v1::GetCapacityResponse::Owned = T
pub fn bpfman_csi::v1::GetCapacityResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::GetCapacityResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::GetCapacityResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::GetCapacityResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::GetCapacityResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::GetCapacityResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::GetCapacityResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::GetCapacityResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::GetCapacityResponse
pub fn bpfman_csi::v1::GetCapacityResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::GetCapacityResponse
pub fn bpfman_csi::v1::GetCapacityResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::GetCapacityResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::GetCapacityResponse
pub struct bpfman_csi::v1::GetPluginCapabilitiesRequest
impl core::clone::Clone for bpfman_csi::v1::GetPluginCapabilitiesRequest
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::clone(&self) -> bpfman_csi::v1::GetPluginCapabilitiesRequest
impl core::cmp::PartialEq for bpfman_csi::v1::GetPluginCapabilitiesRequest
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::eq(&self, other: &bpfman_csi::v1::GetPluginCapabilitiesRequest) -> bool
impl core::default::Default for bpfman_csi::v1::GetPluginCapabilitiesRequest
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::GetPluginCapabilitiesRequest
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::GetPluginCapabilitiesRequest
impl prost::message::Message for bpfman_csi::v1::GetPluginCapabilitiesRequest
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::clear(&mut self)
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::GetPluginCapabilitiesRequest
impl core::marker::Send for bpfman_csi::v1::GetPluginCapabilitiesRequest
impl core::marker::Sync for bpfman_csi::v1::GetPluginCapabilitiesRequest
impl core::marker::Unpin for bpfman_csi::v1::GetPluginCapabilitiesRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::GetPluginCapabilitiesRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::GetPluginCapabilitiesRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::GetPluginCapabilitiesRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::GetPluginCapabilitiesRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::GetPluginCapabilitiesRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::GetPluginCapabilitiesRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::GetPluginCapabilitiesRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::GetPluginCapabilitiesRequest where T: core::clone::Clone
pub type bpfman_csi::v1::GetPluginCapabilitiesRequest::Owned = T
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::GetPluginCapabilitiesRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::GetPluginCapabilitiesRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::GetPluginCapabilitiesRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::GetPluginCapabilitiesRequest
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::GetPluginCapabilitiesRequest
pub fn bpfman_csi::v1::GetPluginCapabilitiesRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::GetPluginCapabilitiesRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::GetPluginCapabilitiesRequest
pub struct bpfman_csi::v1::GetPluginCapabilitiesResponse
pub bpfman_csi::v1::GetPluginCapabilitiesResponse::capabilities: alloc::vec::Vec<bpfman_csi::v1::PluginCapability>
impl core::clone::Clone for bpfman_csi::v1::GetPluginCapabilitiesResponse
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::clone(&self) -> bpfman_csi::v1::GetPluginCapabilitiesResponse
impl core::cmp::PartialEq for bpfman_csi::v1::GetPluginCapabilitiesResponse
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::eq(&self, other: &bpfman_csi::v1::GetPluginCapabilitiesResponse) -> bool
impl core::default::Default for bpfman_csi::v1::GetPluginCapabilitiesResponse
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::GetPluginCapabilitiesResponse
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::GetPluginCapabilitiesResponse
impl prost::message::Message for bpfman_csi::v1::GetPluginCapabilitiesResponse
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::clear(&mut self)
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::GetPluginCapabilitiesResponse
impl core::marker::Send for bpfman_csi::v1::GetPluginCapabilitiesResponse
impl core::marker::Sync for bpfman_csi::v1::GetPluginCapabilitiesResponse
impl core::marker::Unpin for bpfman_csi::v1::GetPluginCapabilitiesResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::GetPluginCapabilitiesResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::GetPluginCapabilitiesResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::GetPluginCapabilitiesResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::GetPluginCapabilitiesResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::GetPluginCapabilitiesResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::GetPluginCapabilitiesResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::GetPluginCapabilitiesResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::GetPluginCapabilitiesResponse where T: core::clone::Clone
pub type bpfman_csi::v1::GetPluginCapabilitiesResponse::Owned = T
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::GetPluginCapabilitiesResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::GetPluginCapabilitiesResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::GetPluginCapabilitiesResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::GetPluginCapabilitiesResponse
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::GetPluginCapabilitiesResponse
pub fn bpfman_csi::v1::GetPluginCapabilitiesResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::GetPluginCapabilitiesResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::GetPluginCapabilitiesResponse
pub struct bpfman_csi::v1::GetPluginInfoRequest
impl core::clone::Clone for bpfman_csi::v1::GetPluginInfoRequest
pub fn bpfman_csi::v1::GetPluginInfoRequest::clone(&self) -> bpfman_csi::v1::GetPluginInfoRequest
impl core::cmp::PartialEq for bpfman_csi::v1::GetPluginInfoRequest
pub fn bpfman_csi::v1::GetPluginInfoRequest::eq(&self, other: &bpfman_csi::v1::GetPluginInfoRequest) -> bool
impl core::default::Default for bpfman_csi::v1::GetPluginInfoRequest
pub fn bpfman_csi::v1::GetPluginInfoRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::GetPluginInfoRequest
pub fn bpfman_csi::v1::GetPluginInfoRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::GetPluginInfoRequest
impl prost::message::Message for bpfman_csi::v1::GetPluginInfoRequest
pub fn bpfman_csi::v1::GetPluginInfoRequest::clear(&mut self)
pub fn bpfman_csi::v1::GetPluginInfoRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::GetPluginInfoRequest
impl core::marker::Send for bpfman_csi::v1::GetPluginInfoRequest
impl core::marker::Sync for bpfman_csi::v1::GetPluginInfoRequest
impl core::marker::Unpin for bpfman_csi::v1::GetPluginInfoRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::GetPluginInfoRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::GetPluginInfoRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::GetPluginInfoRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::GetPluginInfoRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::GetPluginInfoRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::GetPluginInfoRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::GetPluginInfoRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::GetPluginInfoRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::GetPluginInfoRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::GetPluginInfoRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::GetPluginInfoRequest where T: core::clone::Clone
pub type bpfman_csi::v1::GetPluginInfoRequest::Owned = T
pub fn bpfman_csi::v1::GetPluginInfoRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::GetPluginInfoRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::GetPluginInfoRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::GetPluginInfoRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::GetPluginInfoRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::GetPluginInfoRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::GetPluginInfoRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::GetPluginInfoRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::GetPluginInfoRequest
pub fn bpfman_csi::v1::GetPluginInfoRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::GetPluginInfoRequest
pub fn bpfman_csi::v1::GetPluginInfoRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::GetPluginInfoRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::GetPluginInfoRequest
pub struct bpfman_csi::v1::GetPluginInfoResponse
pub bpfman_csi::v1::GetPluginInfoResponse::manifest: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::GetPluginInfoResponse::name: alloc::string::String
pub bpfman_csi::v1::GetPluginInfoResponse::vendor_version: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::GetPluginInfoResponse
pub fn bpfman_csi::v1::GetPluginInfoResponse::clone(&self) -> bpfman_csi::v1::GetPluginInfoResponse
impl core::cmp::PartialEq for bpfman_csi::v1::GetPluginInfoResponse
pub fn bpfman_csi::v1::GetPluginInfoResponse::eq(&self, other: &bpfman_csi::v1::GetPluginInfoResponse) -> bool
impl core::default::Default for bpfman_csi::v1::GetPluginInfoResponse
pub fn bpfman_csi::v1::GetPluginInfoResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::GetPluginInfoResponse
pub fn bpfman_csi::v1::GetPluginInfoResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::GetPluginInfoResponse
impl prost::message::Message for bpfman_csi::v1::GetPluginInfoResponse
pub fn bpfman_csi::v1::GetPluginInfoResponse::clear(&mut self)
pub fn bpfman_csi::v1::GetPluginInfoResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::GetPluginInfoResponse
impl core::marker::Send for bpfman_csi::v1::GetPluginInfoResponse
impl core::marker::Sync for bpfman_csi::v1::GetPluginInfoResponse
impl core::marker::Unpin for bpfman_csi::v1::GetPluginInfoResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::GetPluginInfoResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::GetPluginInfoResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::GetPluginInfoResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::GetPluginInfoResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::GetPluginInfoResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::GetPluginInfoResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::GetPluginInfoResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::GetPluginInfoResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::GetPluginInfoResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::GetPluginInfoResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::GetPluginInfoResponse where T: core::clone::Clone
pub type bpfman_csi::v1::GetPluginInfoResponse::Owned = T
pub fn bpfman_csi::v1::GetPluginInfoResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::GetPluginInfoResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::GetPluginInfoResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::GetPluginInfoResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::GetPluginInfoResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::GetPluginInfoResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::GetPluginInfoResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::GetPluginInfoResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::GetPluginInfoResponse
pub fn bpfman_csi::v1::GetPluginInfoResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::GetPluginInfoResponse
pub fn bpfman_csi::v1::GetPluginInfoResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::GetPluginInfoResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::GetPluginInfoResponse
pub struct bpfman_csi::v1::GetVolumeGroupSnapshotRequest
pub bpfman_csi::v1::GetVolumeGroupSnapshotRequest::group_snapshot_id: alloc::string::String
pub bpfman_csi::v1::GetVolumeGroupSnapshotRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::GetVolumeGroupSnapshotRequest::snapshot_ids: alloc::vec::Vec<alloc::string::String>
impl core::clone::Clone for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::clone(&self) -> bpfman_csi::v1::GetVolumeGroupSnapshotRequest
impl core::cmp::PartialEq for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::eq(&self, other: &bpfman_csi::v1::GetVolumeGroupSnapshotRequest) -> bool
impl core::default::Default for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
impl prost::message::Message for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::clear(&mut self)
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
impl core::marker::Send for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
impl core::marker::Sync for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
impl core::marker::Unpin for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::GetVolumeGroupSnapshotRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::GetVolumeGroupSnapshotRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::GetVolumeGroupSnapshotRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::GetVolumeGroupSnapshotRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::GetVolumeGroupSnapshotRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::GetVolumeGroupSnapshotRequest where T: core::clone::Clone
pub type bpfman_csi::v1::GetVolumeGroupSnapshotRequest::Owned = T
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::GetVolumeGroupSnapshotRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::GetVolumeGroupSnapshotRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::GetVolumeGroupSnapshotRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::GetVolumeGroupSnapshotRequest
pub struct bpfman_csi::v1::GetVolumeGroupSnapshotResponse
pub bpfman_csi::v1::GetVolumeGroupSnapshotResponse::group_snapshot: core::option::Option<bpfman_csi::v1::VolumeGroupSnapshot>
impl core::clone::Clone for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::clone(&self) -> bpfman_csi::v1::GetVolumeGroupSnapshotResponse
impl core::cmp::PartialEq for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::eq(&self, other: &bpfman_csi::v1::GetVolumeGroupSnapshotResponse) -> bool
impl core::default::Default for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
impl prost::message::Message for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::clear(&mut self)
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
impl core::marker::Send for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
impl core::marker::Sync for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
impl core::marker::Unpin for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::GetVolumeGroupSnapshotResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::GetVolumeGroupSnapshotResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::GetVolumeGroupSnapshotResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::GetVolumeGroupSnapshotResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::GetVolumeGroupSnapshotResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::GetVolumeGroupSnapshotResponse where T: core::clone::Clone
pub type bpfman_csi::v1::GetVolumeGroupSnapshotResponse::Owned = T
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::GetVolumeGroupSnapshotResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::GetVolumeGroupSnapshotResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::GetVolumeGroupSnapshotResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
pub fn bpfman_csi::v1::GetVolumeGroupSnapshotResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::GetVolumeGroupSnapshotResponse
pub struct bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
impl core::clone::Clone for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::clone(&self) -> bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
impl core::cmp::PartialEq for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::eq(&self, other: &bpfman_csi::v1::GroupControllerGetCapabilitiesRequest) -> bool
impl core::default::Default for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
impl prost::message::Message for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::clear(&mut self)
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
impl core::marker::Send for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
impl core::marker::Sync for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
impl core::marker::Unpin for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest where T: core::clone::Clone
pub type bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::Owned = T
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::GroupControllerGetCapabilitiesRequest
pub struct bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
pub bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::capabilities: alloc::vec::Vec<bpfman_csi::v1::GroupControllerServiceCapability>
impl core::clone::Clone for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::clone(&self) -> bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
impl core::cmp::PartialEq for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::eq(&self, other: &bpfman_csi::v1::GroupControllerGetCapabilitiesResponse) -> bool
impl core::default::Default for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
impl prost::message::Message for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::clear(&mut self)
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
impl core::marker::Send for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
impl core::marker::Sync for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
impl core::marker::Unpin for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse where T: core::clone::Clone
pub type bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::Owned = T
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
pub fn bpfman_csi::v1::GroupControllerGetCapabilitiesResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::GroupControllerGetCapabilitiesResponse
pub struct bpfman_csi::v1::GroupControllerServiceCapability
pub bpfman_csi::v1::GroupControllerServiceCapability::type: core::option::Option<bpfman_csi::v1::group_controller_service_capability::Type>
impl core::clone::Clone for bpfman_csi::v1::GroupControllerServiceCapability
pub fn bpfman_csi::v1::GroupControllerServiceCapability::clone(&self) -> bpfman_csi::v1::GroupControllerServiceCapability
impl core::cmp::PartialEq for bpfman_csi::v1::GroupControllerServiceCapability
pub fn bpfman_csi::v1::GroupControllerServiceCapability::eq(&self, other: &bpfman_csi::v1::GroupControllerServiceCapability) -> bool
impl core::default::Default for bpfman_csi::v1::GroupControllerServiceCapability
pub fn bpfman_csi::v1::GroupControllerServiceCapability::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::GroupControllerServiceCapability
pub fn bpfman_csi::v1::GroupControllerServiceCapability::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::GroupControllerServiceCapability
impl prost::message::Message for bpfman_csi::v1::GroupControllerServiceCapability
pub fn bpfman_csi::v1::GroupControllerServiceCapability::clear(&mut self)
pub fn bpfman_csi::v1::GroupControllerServiceCapability::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::GroupControllerServiceCapability
impl core::marker::Send for bpfman_csi::v1::GroupControllerServiceCapability
impl core::marker::Sync for bpfman_csi::v1::GroupControllerServiceCapability
impl core::marker::Unpin for bpfman_csi::v1::GroupControllerServiceCapability
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::GroupControllerServiceCapability
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::GroupControllerServiceCapability
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::GroupControllerServiceCapability where U: core::convert::From<T>
pub fn bpfman_csi::v1::GroupControllerServiceCapability::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::GroupControllerServiceCapability where U: core::convert::Into<T>
pub type bpfman_csi::v1::GroupControllerServiceCapability::Error = core::convert::Infallible
pub fn bpfman_csi::v1::GroupControllerServiceCapability::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::GroupControllerServiceCapability where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::GroupControllerServiceCapability::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::GroupControllerServiceCapability::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::GroupControllerServiceCapability where T: core::clone::Clone
pub type bpfman_csi::v1::GroupControllerServiceCapability::Owned = T
pub fn bpfman_csi::v1::GroupControllerServiceCapability::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::GroupControllerServiceCapability::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::GroupControllerServiceCapability where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::GroupControllerServiceCapability::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::GroupControllerServiceCapability where T: core::marker::Sized
pub fn bpfman_csi::v1::GroupControllerServiceCapability::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::GroupControllerServiceCapability where T: core::marker::Sized
pub fn bpfman_csi::v1::GroupControllerServiceCapability::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::GroupControllerServiceCapability
pub fn bpfman_csi::v1::GroupControllerServiceCapability::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::GroupControllerServiceCapability
pub fn bpfman_csi::v1::GroupControllerServiceCapability::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::GroupControllerServiceCapability
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::GroupControllerServiceCapability
pub struct bpfman_csi::v1::ListSnapshotsRequest
pub bpfman_csi::v1::ListSnapshotsRequest::max_entries: i32
pub bpfman_csi::v1::ListSnapshotsRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::ListSnapshotsRequest::snapshot_id: alloc::string::String
pub bpfman_csi::v1::ListSnapshotsRequest::source_volume_id: alloc::string::String
pub bpfman_csi::v1::ListSnapshotsRequest::starting_token: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::ListSnapshotsRequest
pub fn bpfman_csi::v1::ListSnapshotsRequest::clone(&self) -> bpfman_csi::v1::ListSnapshotsRequest
impl core::cmp::PartialEq for bpfman_csi::v1::ListSnapshotsRequest
pub fn bpfman_csi::v1::ListSnapshotsRequest::eq(&self, other: &bpfman_csi::v1::ListSnapshotsRequest) -> bool
impl core::default::Default for bpfman_csi::v1::ListSnapshotsRequest
pub fn bpfman_csi::v1::ListSnapshotsRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ListSnapshotsRequest
pub fn bpfman_csi::v1::ListSnapshotsRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ListSnapshotsRequest
impl prost::message::Message for bpfman_csi::v1::ListSnapshotsRequest
pub fn bpfman_csi::v1::ListSnapshotsRequest::clear(&mut self)
pub fn bpfman_csi::v1::ListSnapshotsRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ListSnapshotsRequest
impl core::marker::Send for bpfman_csi::v1::ListSnapshotsRequest
impl core::marker::Sync for bpfman_csi::v1::ListSnapshotsRequest
impl core::marker::Unpin for bpfman_csi::v1::ListSnapshotsRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ListSnapshotsRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ListSnapshotsRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ListSnapshotsRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::ListSnapshotsRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ListSnapshotsRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::ListSnapshotsRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ListSnapshotsRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ListSnapshotsRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ListSnapshotsRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ListSnapshotsRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ListSnapshotsRequest where T: core::clone::Clone
pub type bpfman_csi::v1::ListSnapshotsRequest::Owned = T
pub fn bpfman_csi::v1::ListSnapshotsRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ListSnapshotsRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ListSnapshotsRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ListSnapshotsRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ListSnapshotsRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ListSnapshotsRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ListSnapshotsRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ListSnapshotsRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ListSnapshotsRequest
pub fn bpfman_csi::v1::ListSnapshotsRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ListSnapshotsRequest
pub fn bpfman_csi::v1::ListSnapshotsRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ListSnapshotsRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ListSnapshotsRequest
pub struct bpfman_csi::v1::ListSnapshotsResponse
pub bpfman_csi::v1::ListSnapshotsResponse::entries: alloc::vec::Vec<bpfman_csi::v1::list_snapshots_response::Entry>
pub bpfman_csi::v1::ListSnapshotsResponse::next_token: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::ListSnapshotsResponse
pub fn bpfman_csi::v1::ListSnapshotsResponse::clone(&self) -> bpfman_csi::v1::ListSnapshotsResponse
impl core::cmp::PartialEq for bpfman_csi::v1::ListSnapshotsResponse
pub fn bpfman_csi::v1::ListSnapshotsResponse::eq(&self, other: &bpfman_csi::v1::ListSnapshotsResponse) -> bool
impl core::default::Default for bpfman_csi::v1::ListSnapshotsResponse
pub fn bpfman_csi::v1::ListSnapshotsResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ListSnapshotsResponse
pub fn bpfman_csi::v1::ListSnapshotsResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ListSnapshotsResponse
impl prost::message::Message for bpfman_csi::v1::ListSnapshotsResponse
pub fn bpfman_csi::v1::ListSnapshotsResponse::clear(&mut self)
pub fn bpfman_csi::v1::ListSnapshotsResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ListSnapshotsResponse
impl core::marker::Send for bpfman_csi::v1::ListSnapshotsResponse
impl core::marker::Sync for bpfman_csi::v1::ListSnapshotsResponse
impl core::marker::Unpin for bpfman_csi::v1::ListSnapshotsResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ListSnapshotsResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ListSnapshotsResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ListSnapshotsResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::ListSnapshotsResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ListSnapshotsResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::ListSnapshotsResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ListSnapshotsResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ListSnapshotsResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ListSnapshotsResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ListSnapshotsResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ListSnapshotsResponse where T: core::clone::Clone
pub type bpfman_csi::v1::ListSnapshotsResponse::Owned = T
pub fn bpfman_csi::v1::ListSnapshotsResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ListSnapshotsResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ListSnapshotsResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ListSnapshotsResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ListSnapshotsResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ListSnapshotsResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ListSnapshotsResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ListSnapshotsResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ListSnapshotsResponse
pub fn bpfman_csi::v1::ListSnapshotsResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ListSnapshotsResponse
pub fn bpfman_csi::v1::ListSnapshotsResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ListSnapshotsResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ListSnapshotsResponse
pub struct bpfman_csi::v1::ListVolumesRequest
pub bpfman_csi::v1::ListVolumesRequest::max_entries: i32
pub bpfman_csi::v1::ListVolumesRequest::starting_token: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::ListVolumesRequest
pub fn bpfman_csi::v1::ListVolumesRequest::clone(&self) -> bpfman_csi::v1::ListVolumesRequest
impl core::cmp::PartialEq for bpfman_csi::v1::ListVolumesRequest
pub fn bpfman_csi::v1::ListVolumesRequest::eq(&self, other: &bpfman_csi::v1::ListVolumesRequest) -> bool
impl core::default::Default for bpfman_csi::v1::ListVolumesRequest
pub fn bpfman_csi::v1::ListVolumesRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ListVolumesRequest
pub fn bpfman_csi::v1::ListVolumesRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ListVolumesRequest
impl prost::message::Message for bpfman_csi::v1::ListVolumesRequest
pub fn bpfman_csi::v1::ListVolumesRequest::clear(&mut self)
pub fn bpfman_csi::v1::ListVolumesRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ListVolumesRequest
impl core::marker::Send for bpfman_csi::v1::ListVolumesRequest
impl core::marker::Sync for bpfman_csi::v1::ListVolumesRequest
impl core::marker::Unpin for bpfman_csi::v1::ListVolumesRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ListVolumesRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ListVolumesRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ListVolumesRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::ListVolumesRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ListVolumesRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::ListVolumesRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ListVolumesRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ListVolumesRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ListVolumesRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ListVolumesRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ListVolumesRequest where T: core::clone::Clone
pub type bpfman_csi::v1::ListVolumesRequest::Owned = T
pub fn bpfman_csi::v1::ListVolumesRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ListVolumesRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ListVolumesRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ListVolumesRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ListVolumesRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ListVolumesRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ListVolumesRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ListVolumesRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ListVolumesRequest
pub fn bpfman_csi::v1::ListVolumesRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ListVolumesRequest
pub fn bpfman_csi::v1::ListVolumesRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ListVolumesRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ListVolumesRequest
pub struct bpfman_csi::v1::ListVolumesResponse
pub bpfman_csi::v1::ListVolumesResponse::entries: alloc::vec::Vec<bpfman_csi::v1::list_volumes_response::Entry>
pub bpfman_csi::v1::ListVolumesResponse::next_token: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::ListVolumesResponse
pub fn bpfman_csi::v1::ListVolumesResponse::clone(&self) -> bpfman_csi::v1::ListVolumesResponse
impl core::cmp::PartialEq for bpfman_csi::v1::ListVolumesResponse
pub fn bpfman_csi::v1::ListVolumesResponse::eq(&self, other: &bpfman_csi::v1::ListVolumesResponse) -> bool
impl core::default::Default for bpfman_csi::v1::ListVolumesResponse
pub fn bpfman_csi::v1::ListVolumesResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ListVolumesResponse
pub fn bpfman_csi::v1::ListVolumesResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ListVolumesResponse
impl prost::message::Message for bpfman_csi::v1::ListVolumesResponse
pub fn bpfman_csi::v1::ListVolumesResponse::clear(&mut self)
pub fn bpfman_csi::v1::ListVolumesResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ListVolumesResponse
impl core::marker::Send for bpfman_csi::v1::ListVolumesResponse
impl core::marker::Sync for bpfman_csi::v1::ListVolumesResponse
impl core::marker::Unpin for bpfman_csi::v1::ListVolumesResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ListVolumesResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ListVolumesResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ListVolumesResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::ListVolumesResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ListVolumesResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::ListVolumesResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ListVolumesResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ListVolumesResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ListVolumesResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ListVolumesResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ListVolumesResponse where T: core::clone::Clone
pub type bpfman_csi::v1::ListVolumesResponse::Owned = T
pub fn bpfman_csi::v1::ListVolumesResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ListVolumesResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ListVolumesResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ListVolumesResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ListVolumesResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ListVolumesResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ListVolumesResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ListVolumesResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ListVolumesResponse
pub fn bpfman_csi::v1::ListVolumesResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ListVolumesResponse
pub fn bpfman_csi::v1::ListVolumesResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ListVolumesResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ListVolumesResponse
pub struct bpfman_csi::v1::NodeExpandVolumeRequest
pub bpfman_csi::v1::NodeExpandVolumeRequest::capacity_range: core::option::Option<bpfman_csi::v1::CapacityRange>
pub bpfman_csi::v1::NodeExpandVolumeRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::NodeExpandVolumeRequest::staging_target_path: alloc::string::String
pub bpfman_csi::v1::NodeExpandVolumeRequest::volume_capability: core::option::Option<bpfman_csi::v1::VolumeCapability>
pub bpfman_csi::v1::NodeExpandVolumeRequest::volume_id: alloc::string::String
pub bpfman_csi::v1::NodeExpandVolumeRequest::volume_path: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::NodeExpandVolumeRequest
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::clone(&self) -> bpfman_csi::v1::NodeExpandVolumeRequest
impl core::cmp::PartialEq for bpfman_csi::v1::NodeExpandVolumeRequest
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::eq(&self, other: &bpfman_csi::v1::NodeExpandVolumeRequest) -> bool
impl core::default::Default for bpfman_csi::v1::NodeExpandVolumeRequest
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodeExpandVolumeRequest
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodeExpandVolumeRequest
impl prost::message::Message for bpfman_csi::v1::NodeExpandVolumeRequest
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::clear(&mut self)
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodeExpandVolumeRequest
impl core::marker::Send for bpfman_csi::v1::NodeExpandVolumeRequest
impl core::marker::Sync for bpfman_csi::v1::NodeExpandVolumeRequest
impl core::marker::Unpin for bpfman_csi::v1::NodeExpandVolumeRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodeExpandVolumeRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodeExpandVolumeRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodeExpandVolumeRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodeExpandVolumeRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodeExpandVolumeRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodeExpandVolumeRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodeExpandVolumeRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodeExpandVolumeRequest where T: core::clone::Clone
pub type bpfman_csi::v1::NodeExpandVolumeRequest::Owned = T
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodeExpandVolumeRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodeExpandVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodeExpandVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodeExpandVolumeRequest
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodeExpandVolumeRequest
pub fn bpfman_csi::v1::NodeExpandVolumeRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodeExpandVolumeRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodeExpandVolumeRequest
pub struct bpfman_csi::v1::NodeExpandVolumeResponse
pub bpfman_csi::v1::NodeExpandVolumeResponse::capacity_bytes: i64
impl core::clone::Clone for bpfman_csi::v1::NodeExpandVolumeResponse
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::clone(&self) -> bpfman_csi::v1::NodeExpandVolumeResponse
impl core::cmp::PartialEq for bpfman_csi::v1::NodeExpandVolumeResponse
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::eq(&self, other: &bpfman_csi::v1::NodeExpandVolumeResponse) -> bool
impl core::default::Default for bpfman_csi::v1::NodeExpandVolumeResponse
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodeExpandVolumeResponse
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodeExpandVolumeResponse
impl prost::message::Message for bpfman_csi::v1::NodeExpandVolumeResponse
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::clear(&mut self)
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodeExpandVolumeResponse
impl core::marker::Send for bpfman_csi::v1::NodeExpandVolumeResponse
impl core::marker::Sync for bpfman_csi::v1::NodeExpandVolumeResponse
impl core::marker::Unpin for bpfman_csi::v1::NodeExpandVolumeResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodeExpandVolumeResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodeExpandVolumeResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodeExpandVolumeResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodeExpandVolumeResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodeExpandVolumeResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodeExpandVolumeResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodeExpandVolumeResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodeExpandVolumeResponse where T: core::clone::Clone
pub type bpfman_csi::v1::NodeExpandVolumeResponse::Owned = T
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodeExpandVolumeResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodeExpandVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodeExpandVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodeExpandVolumeResponse
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodeExpandVolumeResponse
pub fn bpfman_csi::v1::NodeExpandVolumeResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodeExpandVolumeResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodeExpandVolumeResponse
pub struct bpfman_csi::v1::NodeGetCapabilitiesRequest
impl core::clone::Clone for bpfman_csi::v1::NodeGetCapabilitiesRequest
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::clone(&self) -> bpfman_csi::v1::NodeGetCapabilitiesRequest
impl core::cmp::PartialEq for bpfman_csi::v1::NodeGetCapabilitiesRequest
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::eq(&self, other: &bpfman_csi::v1::NodeGetCapabilitiesRequest) -> bool
impl core::default::Default for bpfman_csi::v1::NodeGetCapabilitiesRequest
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodeGetCapabilitiesRequest
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodeGetCapabilitiesRequest
impl prost::message::Message for bpfman_csi::v1::NodeGetCapabilitiesRequest
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::clear(&mut self)
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodeGetCapabilitiesRequest
impl core::marker::Send for bpfman_csi::v1::NodeGetCapabilitiesRequest
impl core::marker::Sync for bpfman_csi::v1::NodeGetCapabilitiesRequest
impl core::marker::Unpin for bpfman_csi::v1::NodeGetCapabilitiesRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodeGetCapabilitiesRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodeGetCapabilitiesRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodeGetCapabilitiesRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodeGetCapabilitiesRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodeGetCapabilitiesRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodeGetCapabilitiesRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodeGetCapabilitiesRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodeGetCapabilitiesRequest where T: core::clone::Clone
pub type bpfman_csi::v1::NodeGetCapabilitiesRequest::Owned = T
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodeGetCapabilitiesRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodeGetCapabilitiesRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodeGetCapabilitiesRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodeGetCapabilitiesRequest
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodeGetCapabilitiesRequest
pub fn bpfman_csi::v1::NodeGetCapabilitiesRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodeGetCapabilitiesRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodeGetCapabilitiesRequest
pub struct bpfman_csi::v1::NodeGetCapabilitiesResponse
pub bpfman_csi::v1::NodeGetCapabilitiesResponse::capabilities: alloc::vec::Vec<bpfman_csi::v1::NodeServiceCapability>
impl core::clone::Clone for bpfman_csi::v1::NodeGetCapabilitiesResponse
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::clone(&self) -> bpfman_csi::v1::NodeGetCapabilitiesResponse
impl core::cmp::PartialEq for bpfman_csi::v1::NodeGetCapabilitiesResponse
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::eq(&self, other: &bpfman_csi::v1::NodeGetCapabilitiesResponse) -> bool
impl core::default::Default for bpfman_csi::v1::NodeGetCapabilitiesResponse
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodeGetCapabilitiesResponse
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodeGetCapabilitiesResponse
impl prost::message::Message for bpfman_csi::v1::NodeGetCapabilitiesResponse
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::clear(&mut self)
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodeGetCapabilitiesResponse
impl core::marker::Send for bpfman_csi::v1::NodeGetCapabilitiesResponse
impl core::marker::Sync for bpfman_csi::v1::NodeGetCapabilitiesResponse
impl core::marker::Unpin for bpfman_csi::v1::NodeGetCapabilitiesResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodeGetCapabilitiesResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodeGetCapabilitiesResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodeGetCapabilitiesResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodeGetCapabilitiesResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodeGetCapabilitiesResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodeGetCapabilitiesResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodeGetCapabilitiesResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodeGetCapabilitiesResponse where T: core::clone::Clone
pub type bpfman_csi::v1::NodeGetCapabilitiesResponse::Owned = T
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodeGetCapabilitiesResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodeGetCapabilitiesResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodeGetCapabilitiesResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodeGetCapabilitiesResponse
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodeGetCapabilitiesResponse
pub fn bpfman_csi::v1::NodeGetCapabilitiesResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodeGetCapabilitiesResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodeGetCapabilitiesResponse
pub struct bpfman_csi::v1::NodeGetInfoRequest
impl core::clone::Clone for bpfman_csi::v1::NodeGetInfoRequest
pub fn bpfman_csi::v1::NodeGetInfoRequest::clone(&self) -> bpfman_csi::v1::NodeGetInfoRequest
impl core::cmp::PartialEq for bpfman_csi::v1::NodeGetInfoRequest
pub fn bpfman_csi::v1::NodeGetInfoRequest::eq(&self, other: &bpfman_csi::v1::NodeGetInfoRequest) -> bool
impl core::default::Default for bpfman_csi::v1::NodeGetInfoRequest
pub fn bpfman_csi::v1::NodeGetInfoRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodeGetInfoRequest
pub fn bpfman_csi::v1::NodeGetInfoRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodeGetInfoRequest
impl prost::message::Message for bpfman_csi::v1::NodeGetInfoRequest
pub fn bpfman_csi::v1::NodeGetInfoRequest::clear(&mut self)
pub fn bpfman_csi::v1::NodeGetInfoRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodeGetInfoRequest
impl core::marker::Send for bpfman_csi::v1::NodeGetInfoRequest
impl core::marker::Sync for bpfman_csi::v1::NodeGetInfoRequest
impl core::marker::Unpin for bpfman_csi::v1::NodeGetInfoRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodeGetInfoRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodeGetInfoRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodeGetInfoRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodeGetInfoRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodeGetInfoRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodeGetInfoRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodeGetInfoRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodeGetInfoRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodeGetInfoRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodeGetInfoRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodeGetInfoRequest where T: core::clone::Clone
pub type bpfman_csi::v1::NodeGetInfoRequest::Owned = T
pub fn bpfman_csi::v1::NodeGetInfoRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodeGetInfoRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodeGetInfoRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodeGetInfoRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodeGetInfoRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeGetInfoRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodeGetInfoRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeGetInfoRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodeGetInfoRequest
pub fn bpfman_csi::v1::NodeGetInfoRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodeGetInfoRequest
pub fn bpfman_csi::v1::NodeGetInfoRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodeGetInfoRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodeGetInfoRequest
pub struct bpfman_csi::v1::NodeGetInfoResponse
pub bpfman_csi::v1::NodeGetInfoResponse::accessible_topology: core::option::Option<bpfman_csi::v1::Topology>
pub bpfman_csi::v1::NodeGetInfoResponse::max_volumes_per_node: i64
pub bpfman_csi::v1::NodeGetInfoResponse::node_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::NodeGetInfoResponse
pub fn bpfman_csi::v1::NodeGetInfoResponse::clone(&self) -> bpfman_csi::v1::NodeGetInfoResponse
impl core::cmp::PartialEq for bpfman_csi::v1::NodeGetInfoResponse
pub fn bpfman_csi::v1::NodeGetInfoResponse::eq(&self, other: &bpfman_csi::v1::NodeGetInfoResponse) -> bool
impl core::default::Default for bpfman_csi::v1::NodeGetInfoResponse
pub fn bpfman_csi::v1::NodeGetInfoResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodeGetInfoResponse
pub fn bpfman_csi::v1::NodeGetInfoResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodeGetInfoResponse
impl prost::message::Message for bpfman_csi::v1::NodeGetInfoResponse
pub fn bpfman_csi::v1::NodeGetInfoResponse::clear(&mut self)
pub fn bpfman_csi::v1::NodeGetInfoResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodeGetInfoResponse
impl core::marker::Send for bpfman_csi::v1::NodeGetInfoResponse
impl core::marker::Sync for bpfman_csi::v1::NodeGetInfoResponse
impl core::marker::Unpin for bpfman_csi::v1::NodeGetInfoResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodeGetInfoResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodeGetInfoResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodeGetInfoResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodeGetInfoResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodeGetInfoResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodeGetInfoResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodeGetInfoResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodeGetInfoResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodeGetInfoResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodeGetInfoResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodeGetInfoResponse where T: core::clone::Clone
pub type bpfman_csi::v1::NodeGetInfoResponse::Owned = T
pub fn bpfman_csi::v1::NodeGetInfoResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodeGetInfoResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodeGetInfoResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodeGetInfoResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodeGetInfoResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeGetInfoResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodeGetInfoResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeGetInfoResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodeGetInfoResponse
pub fn bpfman_csi::v1::NodeGetInfoResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodeGetInfoResponse
pub fn bpfman_csi::v1::NodeGetInfoResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodeGetInfoResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodeGetInfoResponse
pub struct bpfman_csi::v1::NodeGetVolumeStatsRequest
pub bpfman_csi::v1::NodeGetVolumeStatsRequest::staging_target_path: alloc::string::String
pub bpfman_csi::v1::NodeGetVolumeStatsRequest::volume_id: alloc::string::String
pub bpfman_csi::v1::NodeGetVolumeStatsRequest::volume_path: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::NodeGetVolumeStatsRequest
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::clone(&self) -> bpfman_csi::v1::NodeGetVolumeStatsRequest
impl core::cmp::PartialEq for bpfman_csi::v1::NodeGetVolumeStatsRequest
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::eq(&self, other: &bpfman_csi::v1::NodeGetVolumeStatsRequest) -> bool
impl core::default::Default for bpfman_csi::v1::NodeGetVolumeStatsRequest
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodeGetVolumeStatsRequest
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodeGetVolumeStatsRequest
impl prost::message::Message for bpfman_csi::v1::NodeGetVolumeStatsRequest
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::clear(&mut self)
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodeGetVolumeStatsRequest
impl core::marker::Send for bpfman_csi::v1::NodeGetVolumeStatsRequest
impl core::marker::Sync for bpfman_csi::v1::NodeGetVolumeStatsRequest
impl core::marker::Unpin for bpfman_csi::v1::NodeGetVolumeStatsRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodeGetVolumeStatsRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodeGetVolumeStatsRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodeGetVolumeStatsRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodeGetVolumeStatsRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodeGetVolumeStatsRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodeGetVolumeStatsRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodeGetVolumeStatsRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodeGetVolumeStatsRequest where T: core::clone::Clone
pub type bpfman_csi::v1::NodeGetVolumeStatsRequest::Owned = T
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodeGetVolumeStatsRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodeGetVolumeStatsRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodeGetVolumeStatsRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodeGetVolumeStatsRequest
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodeGetVolumeStatsRequest
pub fn bpfman_csi::v1::NodeGetVolumeStatsRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodeGetVolumeStatsRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodeGetVolumeStatsRequest
pub struct bpfman_csi::v1::NodeGetVolumeStatsResponse
pub bpfman_csi::v1::NodeGetVolumeStatsResponse::usage: alloc::vec::Vec<bpfman_csi::v1::VolumeUsage>
pub bpfman_csi::v1::NodeGetVolumeStatsResponse::volume_condition: core::option::Option<bpfman_csi::v1::VolumeCondition>
impl core::clone::Clone for bpfman_csi::v1::NodeGetVolumeStatsResponse
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::clone(&self) -> bpfman_csi::v1::NodeGetVolumeStatsResponse
impl core::cmp::PartialEq for bpfman_csi::v1::NodeGetVolumeStatsResponse
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::eq(&self, other: &bpfman_csi::v1::NodeGetVolumeStatsResponse) -> bool
impl core::default::Default for bpfman_csi::v1::NodeGetVolumeStatsResponse
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodeGetVolumeStatsResponse
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodeGetVolumeStatsResponse
impl prost::message::Message for bpfman_csi::v1::NodeGetVolumeStatsResponse
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::clear(&mut self)
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodeGetVolumeStatsResponse
impl core::marker::Send for bpfman_csi::v1::NodeGetVolumeStatsResponse
impl core::marker::Sync for bpfman_csi::v1::NodeGetVolumeStatsResponse
impl core::marker::Unpin for bpfman_csi::v1::NodeGetVolumeStatsResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodeGetVolumeStatsResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodeGetVolumeStatsResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodeGetVolumeStatsResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodeGetVolumeStatsResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodeGetVolumeStatsResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodeGetVolumeStatsResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodeGetVolumeStatsResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodeGetVolumeStatsResponse where T: core::clone::Clone
pub type bpfman_csi::v1::NodeGetVolumeStatsResponse::Owned = T
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodeGetVolumeStatsResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodeGetVolumeStatsResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodeGetVolumeStatsResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodeGetVolumeStatsResponse
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodeGetVolumeStatsResponse
pub fn bpfman_csi::v1::NodeGetVolumeStatsResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodeGetVolumeStatsResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodeGetVolumeStatsResponse
pub struct bpfman_csi::v1::NodePublishVolumeRequest
pub bpfman_csi::v1::NodePublishVolumeRequest::publish_context: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::NodePublishVolumeRequest::readonly: bool
pub bpfman_csi::v1::NodePublishVolumeRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::NodePublishVolumeRequest::staging_target_path: alloc::string::String
pub bpfman_csi::v1::NodePublishVolumeRequest::target_path: alloc::string::String
pub bpfman_csi::v1::NodePublishVolumeRequest::volume_capability: core::option::Option<bpfman_csi::v1::VolumeCapability>
pub bpfman_csi::v1::NodePublishVolumeRequest::volume_context: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::NodePublishVolumeRequest::volume_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::NodePublishVolumeRequest
pub fn bpfman_csi::v1::NodePublishVolumeRequest::clone(&self) -> bpfman_csi::v1::NodePublishVolumeRequest
impl core::cmp::PartialEq for bpfman_csi::v1::NodePublishVolumeRequest
pub fn bpfman_csi::v1::NodePublishVolumeRequest::eq(&self, other: &bpfman_csi::v1::NodePublishVolumeRequest) -> bool
impl core::default::Default for bpfman_csi::v1::NodePublishVolumeRequest
pub fn bpfman_csi::v1::NodePublishVolumeRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodePublishVolumeRequest
pub fn bpfman_csi::v1::NodePublishVolumeRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodePublishVolumeRequest
impl prost::message::Message for bpfman_csi::v1::NodePublishVolumeRequest
pub fn bpfman_csi::v1::NodePublishVolumeRequest::clear(&mut self)
pub fn bpfman_csi::v1::NodePublishVolumeRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodePublishVolumeRequest
impl core::marker::Send for bpfman_csi::v1::NodePublishVolumeRequest
impl core::marker::Sync for bpfman_csi::v1::NodePublishVolumeRequest
impl core::marker::Unpin for bpfman_csi::v1::NodePublishVolumeRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodePublishVolumeRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodePublishVolumeRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodePublishVolumeRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodePublishVolumeRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodePublishVolumeRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodePublishVolumeRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodePublishVolumeRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodePublishVolumeRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodePublishVolumeRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodePublishVolumeRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodePublishVolumeRequest where T: core::clone::Clone
pub type bpfman_csi::v1::NodePublishVolumeRequest::Owned = T
pub fn bpfman_csi::v1::NodePublishVolumeRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodePublishVolumeRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodePublishVolumeRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodePublishVolumeRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodePublishVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodePublishVolumeRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodePublishVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodePublishVolumeRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodePublishVolumeRequest
pub fn bpfman_csi::v1::NodePublishVolumeRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodePublishVolumeRequest
pub fn bpfman_csi::v1::NodePublishVolumeRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodePublishVolumeRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodePublishVolumeRequest
pub struct bpfman_csi::v1::NodePublishVolumeResponse
impl core::clone::Clone for bpfman_csi::v1::NodePublishVolumeResponse
pub fn bpfman_csi::v1::NodePublishVolumeResponse::clone(&self) -> bpfman_csi::v1::NodePublishVolumeResponse
impl core::cmp::PartialEq for bpfman_csi::v1::NodePublishVolumeResponse
pub fn bpfman_csi::v1::NodePublishVolumeResponse::eq(&self, other: &bpfman_csi::v1::NodePublishVolumeResponse) -> bool
impl core::default::Default for bpfman_csi::v1::NodePublishVolumeResponse
pub fn bpfman_csi::v1::NodePublishVolumeResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodePublishVolumeResponse
pub fn bpfman_csi::v1::NodePublishVolumeResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodePublishVolumeResponse
impl prost::message::Message for bpfman_csi::v1::NodePublishVolumeResponse
pub fn bpfman_csi::v1::NodePublishVolumeResponse::clear(&mut self)
pub fn bpfman_csi::v1::NodePublishVolumeResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodePublishVolumeResponse
impl core::marker::Send for bpfman_csi::v1::NodePublishVolumeResponse
impl core::marker::Sync for bpfman_csi::v1::NodePublishVolumeResponse
impl core::marker::Unpin for bpfman_csi::v1::NodePublishVolumeResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodePublishVolumeResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodePublishVolumeResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodePublishVolumeResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodePublishVolumeResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodePublishVolumeResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodePublishVolumeResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodePublishVolumeResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodePublishVolumeResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodePublishVolumeResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodePublishVolumeResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodePublishVolumeResponse where T: core::clone::Clone
pub type bpfman_csi::v1::NodePublishVolumeResponse::Owned = T
pub fn bpfman_csi::v1::NodePublishVolumeResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodePublishVolumeResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodePublishVolumeResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodePublishVolumeResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodePublishVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodePublishVolumeResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodePublishVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodePublishVolumeResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodePublishVolumeResponse
pub fn bpfman_csi::v1::NodePublishVolumeResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodePublishVolumeResponse
pub fn bpfman_csi::v1::NodePublishVolumeResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodePublishVolumeResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodePublishVolumeResponse
pub struct bpfman_csi::v1::NodeServiceCapability
pub bpfman_csi::v1::NodeServiceCapability::type: core::option::Option<bpfman_csi::v1::node_service_capability::Type>
impl core::clone::Clone for bpfman_csi::v1::NodeServiceCapability
pub fn bpfman_csi::v1::NodeServiceCapability::clone(&self) -> bpfman_csi::v1::NodeServiceCapability
impl core::cmp::PartialEq for bpfman_csi::v1::NodeServiceCapability
pub fn bpfman_csi::v1::NodeServiceCapability::eq(&self, other: &bpfman_csi::v1::NodeServiceCapability) -> bool
impl core::default::Default for bpfman_csi::v1::NodeServiceCapability
pub fn bpfman_csi::v1::NodeServiceCapability::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodeServiceCapability
pub fn bpfman_csi::v1::NodeServiceCapability::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodeServiceCapability
impl prost::message::Message for bpfman_csi::v1::NodeServiceCapability
pub fn bpfman_csi::v1::NodeServiceCapability::clear(&mut self)
pub fn bpfman_csi::v1::NodeServiceCapability::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodeServiceCapability
impl core::marker::Send for bpfman_csi::v1::NodeServiceCapability
impl core::marker::Sync for bpfman_csi::v1::NodeServiceCapability
impl core::marker::Unpin for bpfman_csi::v1::NodeServiceCapability
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodeServiceCapability
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodeServiceCapability
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodeServiceCapability where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodeServiceCapability::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodeServiceCapability where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodeServiceCapability::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodeServiceCapability::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodeServiceCapability where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodeServiceCapability::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodeServiceCapability::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodeServiceCapability where T: core::clone::Clone
pub type bpfman_csi::v1::NodeServiceCapability::Owned = T
pub fn bpfman_csi::v1::NodeServiceCapability::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodeServiceCapability::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodeServiceCapability where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodeServiceCapability::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodeServiceCapability where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeServiceCapability::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodeServiceCapability where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeServiceCapability::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodeServiceCapability
pub fn bpfman_csi::v1::NodeServiceCapability::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodeServiceCapability
pub fn bpfman_csi::v1::NodeServiceCapability::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodeServiceCapability
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodeServiceCapability
pub struct bpfman_csi::v1::NodeStageVolumeRequest
pub bpfman_csi::v1::NodeStageVolumeRequest::publish_context: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::NodeStageVolumeRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::NodeStageVolumeRequest::staging_target_path: alloc::string::String
pub bpfman_csi::v1::NodeStageVolumeRequest::volume_capability: core::option::Option<bpfman_csi::v1::VolumeCapability>
pub bpfman_csi::v1::NodeStageVolumeRequest::volume_context: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::NodeStageVolumeRequest::volume_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::NodeStageVolumeRequest
pub fn bpfman_csi::v1::NodeStageVolumeRequest::clone(&self) -> bpfman_csi::v1::NodeStageVolumeRequest
impl core::cmp::PartialEq for bpfman_csi::v1::NodeStageVolumeRequest
pub fn bpfman_csi::v1::NodeStageVolumeRequest::eq(&self, other: &bpfman_csi::v1::NodeStageVolumeRequest) -> bool
impl core::default::Default for bpfman_csi::v1::NodeStageVolumeRequest
pub fn bpfman_csi::v1::NodeStageVolumeRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodeStageVolumeRequest
pub fn bpfman_csi::v1::NodeStageVolumeRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodeStageVolumeRequest
impl prost::message::Message for bpfman_csi::v1::NodeStageVolumeRequest
pub fn bpfman_csi::v1::NodeStageVolumeRequest::clear(&mut self)
pub fn bpfman_csi::v1::NodeStageVolumeRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodeStageVolumeRequest
impl core::marker::Send for bpfman_csi::v1::NodeStageVolumeRequest
impl core::marker::Sync for bpfman_csi::v1::NodeStageVolumeRequest
impl core::marker::Unpin for bpfman_csi::v1::NodeStageVolumeRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodeStageVolumeRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodeStageVolumeRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodeStageVolumeRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodeStageVolumeRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodeStageVolumeRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodeStageVolumeRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodeStageVolumeRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodeStageVolumeRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodeStageVolumeRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodeStageVolumeRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodeStageVolumeRequest where T: core::clone::Clone
pub type bpfman_csi::v1::NodeStageVolumeRequest::Owned = T
pub fn bpfman_csi::v1::NodeStageVolumeRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodeStageVolumeRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodeStageVolumeRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodeStageVolumeRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodeStageVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeStageVolumeRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodeStageVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeStageVolumeRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodeStageVolumeRequest
pub fn bpfman_csi::v1::NodeStageVolumeRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodeStageVolumeRequest
pub fn bpfman_csi::v1::NodeStageVolumeRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodeStageVolumeRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodeStageVolumeRequest
pub struct bpfman_csi::v1::NodeStageVolumeResponse
impl core::clone::Clone for bpfman_csi::v1::NodeStageVolumeResponse
pub fn bpfman_csi::v1::NodeStageVolumeResponse::clone(&self) -> bpfman_csi::v1::NodeStageVolumeResponse
impl core::cmp::PartialEq for bpfman_csi::v1::NodeStageVolumeResponse
pub fn bpfman_csi::v1::NodeStageVolumeResponse::eq(&self, other: &bpfman_csi::v1::NodeStageVolumeResponse) -> bool
impl core::default::Default for bpfman_csi::v1::NodeStageVolumeResponse
pub fn bpfman_csi::v1::NodeStageVolumeResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodeStageVolumeResponse
pub fn bpfman_csi::v1::NodeStageVolumeResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodeStageVolumeResponse
impl prost::message::Message for bpfman_csi::v1::NodeStageVolumeResponse
pub fn bpfman_csi::v1::NodeStageVolumeResponse::clear(&mut self)
pub fn bpfman_csi::v1::NodeStageVolumeResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodeStageVolumeResponse
impl core::marker::Send for bpfman_csi::v1::NodeStageVolumeResponse
impl core::marker::Sync for bpfman_csi::v1::NodeStageVolumeResponse
impl core::marker::Unpin for bpfman_csi::v1::NodeStageVolumeResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodeStageVolumeResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodeStageVolumeResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodeStageVolumeResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodeStageVolumeResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodeStageVolumeResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodeStageVolumeResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodeStageVolumeResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodeStageVolumeResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodeStageVolumeResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodeStageVolumeResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodeStageVolumeResponse where T: core::clone::Clone
pub type bpfman_csi::v1::NodeStageVolumeResponse::Owned = T
pub fn bpfman_csi::v1::NodeStageVolumeResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodeStageVolumeResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodeStageVolumeResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodeStageVolumeResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodeStageVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeStageVolumeResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodeStageVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeStageVolumeResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodeStageVolumeResponse
pub fn bpfman_csi::v1::NodeStageVolumeResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodeStageVolumeResponse
pub fn bpfman_csi::v1::NodeStageVolumeResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodeStageVolumeResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodeStageVolumeResponse
pub struct bpfman_csi::v1::NodeUnpublishVolumeRequest
pub bpfman_csi::v1::NodeUnpublishVolumeRequest::target_path: alloc::string::String
pub bpfman_csi::v1::NodeUnpublishVolumeRequest::volume_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::NodeUnpublishVolumeRequest
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::clone(&self) -> bpfman_csi::v1::NodeUnpublishVolumeRequest
impl core::cmp::PartialEq for bpfman_csi::v1::NodeUnpublishVolumeRequest
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::eq(&self, other: &bpfman_csi::v1::NodeUnpublishVolumeRequest) -> bool
impl core::default::Default for bpfman_csi::v1::NodeUnpublishVolumeRequest
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodeUnpublishVolumeRequest
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodeUnpublishVolumeRequest
impl prost::message::Message for bpfman_csi::v1::NodeUnpublishVolumeRequest
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::clear(&mut self)
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodeUnpublishVolumeRequest
impl core::marker::Send for bpfman_csi::v1::NodeUnpublishVolumeRequest
impl core::marker::Sync for bpfman_csi::v1::NodeUnpublishVolumeRequest
impl core::marker::Unpin for bpfman_csi::v1::NodeUnpublishVolumeRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodeUnpublishVolumeRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodeUnpublishVolumeRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodeUnpublishVolumeRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodeUnpublishVolumeRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodeUnpublishVolumeRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodeUnpublishVolumeRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodeUnpublishVolumeRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodeUnpublishVolumeRequest where T: core::clone::Clone
pub type bpfman_csi::v1::NodeUnpublishVolumeRequest::Owned = T
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodeUnpublishVolumeRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodeUnpublishVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodeUnpublishVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodeUnpublishVolumeRequest
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodeUnpublishVolumeRequest
pub fn bpfman_csi::v1::NodeUnpublishVolumeRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodeUnpublishVolumeRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodeUnpublishVolumeRequest
pub struct bpfman_csi::v1::NodeUnpublishVolumeResponse
impl core::clone::Clone for bpfman_csi::v1::NodeUnpublishVolumeResponse
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::clone(&self) -> bpfman_csi::v1::NodeUnpublishVolumeResponse
impl core::cmp::PartialEq for bpfman_csi::v1::NodeUnpublishVolumeResponse
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::eq(&self, other: &bpfman_csi::v1::NodeUnpublishVolumeResponse) -> bool
impl core::default::Default for bpfman_csi::v1::NodeUnpublishVolumeResponse
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodeUnpublishVolumeResponse
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodeUnpublishVolumeResponse
impl prost::message::Message for bpfman_csi::v1::NodeUnpublishVolumeResponse
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::clear(&mut self)
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodeUnpublishVolumeResponse
impl core::marker::Send for bpfman_csi::v1::NodeUnpublishVolumeResponse
impl core::marker::Sync for bpfman_csi::v1::NodeUnpublishVolumeResponse
impl core::marker::Unpin for bpfman_csi::v1::NodeUnpublishVolumeResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodeUnpublishVolumeResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodeUnpublishVolumeResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodeUnpublishVolumeResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodeUnpublishVolumeResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodeUnpublishVolumeResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodeUnpublishVolumeResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodeUnpublishVolumeResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodeUnpublishVolumeResponse where T: core::clone::Clone
pub type bpfman_csi::v1::NodeUnpublishVolumeResponse::Owned = T
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodeUnpublishVolumeResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodeUnpublishVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodeUnpublishVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodeUnpublishVolumeResponse
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodeUnpublishVolumeResponse
pub fn bpfman_csi::v1::NodeUnpublishVolumeResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodeUnpublishVolumeResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodeUnpublishVolumeResponse
pub struct bpfman_csi::v1::NodeUnstageVolumeRequest
pub bpfman_csi::v1::NodeUnstageVolumeRequest::staging_target_path: alloc::string::String
pub bpfman_csi::v1::NodeUnstageVolumeRequest::volume_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::NodeUnstageVolumeRequest
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::clone(&self) -> bpfman_csi::v1::NodeUnstageVolumeRequest
impl core::cmp::PartialEq for bpfman_csi::v1::NodeUnstageVolumeRequest
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::eq(&self, other: &bpfman_csi::v1::NodeUnstageVolumeRequest) -> bool
impl core::default::Default for bpfman_csi::v1::NodeUnstageVolumeRequest
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodeUnstageVolumeRequest
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodeUnstageVolumeRequest
impl prost::message::Message for bpfman_csi::v1::NodeUnstageVolumeRequest
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::clear(&mut self)
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodeUnstageVolumeRequest
impl core::marker::Send for bpfman_csi::v1::NodeUnstageVolumeRequest
impl core::marker::Sync for bpfman_csi::v1::NodeUnstageVolumeRequest
impl core::marker::Unpin for bpfman_csi::v1::NodeUnstageVolumeRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodeUnstageVolumeRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodeUnstageVolumeRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodeUnstageVolumeRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodeUnstageVolumeRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodeUnstageVolumeRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodeUnstageVolumeRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodeUnstageVolumeRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodeUnstageVolumeRequest where T: core::clone::Clone
pub type bpfman_csi::v1::NodeUnstageVolumeRequest::Owned = T
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodeUnstageVolumeRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodeUnstageVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodeUnstageVolumeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodeUnstageVolumeRequest
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodeUnstageVolumeRequest
pub fn bpfman_csi::v1::NodeUnstageVolumeRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodeUnstageVolumeRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodeUnstageVolumeRequest
pub struct bpfman_csi::v1::NodeUnstageVolumeResponse
impl core::clone::Clone for bpfman_csi::v1::NodeUnstageVolumeResponse
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::clone(&self) -> bpfman_csi::v1::NodeUnstageVolumeResponse
impl core::cmp::PartialEq for bpfman_csi::v1::NodeUnstageVolumeResponse
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::eq(&self, other: &bpfman_csi::v1::NodeUnstageVolumeResponse) -> bool
impl core::default::Default for bpfman_csi::v1::NodeUnstageVolumeResponse
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::NodeUnstageVolumeResponse
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::NodeUnstageVolumeResponse
impl prost::message::Message for bpfman_csi::v1::NodeUnstageVolumeResponse
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::clear(&mut self)
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::NodeUnstageVolumeResponse
impl core::marker::Send for bpfman_csi::v1::NodeUnstageVolumeResponse
impl core::marker::Sync for bpfman_csi::v1::NodeUnstageVolumeResponse
impl core::marker::Unpin for bpfman_csi::v1::NodeUnstageVolumeResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::NodeUnstageVolumeResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::NodeUnstageVolumeResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::NodeUnstageVolumeResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::NodeUnstageVolumeResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::NodeUnstageVolumeResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::NodeUnstageVolumeResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::NodeUnstageVolumeResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::NodeUnstageVolumeResponse where T: core::clone::Clone
pub type bpfman_csi::v1::NodeUnstageVolumeResponse::Owned = T
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::NodeUnstageVolumeResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::NodeUnstageVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::NodeUnstageVolumeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::NodeUnstageVolumeResponse
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::NodeUnstageVolumeResponse
pub fn bpfman_csi::v1::NodeUnstageVolumeResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::NodeUnstageVolumeResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::NodeUnstageVolumeResponse
pub struct bpfman_csi::v1::PluginCapability
pub bpfman_csi::v1::PluginCapability::type: core::option::Option<bpfman_csi::v1::plugin_capability::Type>
impl core::clone::Clone for bpfman_csi::v1::PluginCapability
pub fn bpfman_csi::v1::PluginCapability::clone(&self) -> bpfman_csi::v1::PluginCapability
impl core::cmp::PartialEq for bpfman_csi::v1::PluginCapability
pub fn bpfman_csi::v1::PluginCapability::eq(&self, other: &bpfman_csi::v1::PluginCapability) -> bool
impl core::default::Default for bpfman_csi::v1::PluginCapability
pub fn bpfman_csi::v1::PluginCapability::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::PluginCapability
pub fn bpfman_csi::v1::PluginCapability::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::PluginCapability
impl prost::message::Message for bpfman_csi::v1::PluginCapability
pub fn bpfman_csi::v1::PluginCapability::clear(&mut self)
pub fn bpfman_csi::v1::PluginCapability::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::PluginCapability
impl core::marker::Send for bpfman_csi::v1::PluginCapability
impl core::marker::Sync for bpfman_csi::v1::PluginCapability
impl core::marker::Unpin for bpfman_csi::v1::PluginCapability
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::PluginCapability
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::PluginCapability
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::PluginCapability where U: core::convert::From<T>
pub fn bpfman_csi::v1::PluginCapability::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::PluginCapability where U: core::convert::Into<T>
pub type bpfman_csi::v1::PluginCapability::Error = core::convert::Infallible
pub fn bpfman_csi::v1::PluginCapability::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::PluginCapability where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::PluginCapability::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::PluginCapability::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::PluginCapability where T: core::clone::Clone
pub type bpfman_csi::v1::PluginCapability::Owned = T
pub fn bpfman_csi::v1::PluginCapability::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::PluginCapability::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::PluginCapability where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::PluginCapability::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::PluginCapability where T: core::marker::Sized
pub fn bpfman_csi::v1::PluginCapability::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::PluginCapability where T: core::marker::Sized
pub fn bpfman_csi::v1::PluginCapability::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::PluginCapability
pub fn bpfman_csi::v1::PluginCapability::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::PluginCapability
pub fn bpfman_csi::v1::PluginCapability::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::PluginCapability
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::PluginCapability
pub struct bpfman_csi::v1::ProbeRequest
impl core::clone::Clone for bpfman_csi::v1::ProbeRequest
pub fn bpfman_csi::v1::ProbeRequest::clone(&self) -> bpfman_csi::v1::ProbeRequest
impl core::cmp::PartialEq for bpfman_csi::v1::ProbeRequest
pub fn bpfman_csi::v1::ProbeRequest::eq(&self, other: &bpfman_csi::v1::ProbeRequest) -> bool
impl core::default::Default for bpfman_csi::v1::ProbeRequest
pub fn bpfman_csi::v1::ProbeRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ProbeRequest
pub fn bpfman_csi::v1::ProbeRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ProbeRequest
impl prost::message::Message for bpfman_csi::v1::ProbeRequest
pub fn bpfman_csi::v1::ProbeRequest::clear(&mut self)
pub fn bpfman_csi::v1::ProbeRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ProbeRequest
impl core::marker::Send for bpfman_csi::v1::ProbeRequest
impl core::marker::Sync for bpfman_csi::v1::ProbeRequest
impl core::marker::Unpin for bpfman_csi::v1::ProbeRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ProbeRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ProbeRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ProbeRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::ProbeRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ProbeRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::ProbeRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ProbeRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ProbeRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ProbeRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ProbeRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ProbeRequest where T: core::clone::Clone
pub type bpfman_csi::v1::ProbeRequest::Owned = T
pub fn bpfman_csi::v1::ProbeRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ProbeRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ProbeRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ProbeRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ProbeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ProbeRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ProbeRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ProbeRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ProbeRequest
pub fn bpfman_csi::v1::ProbeRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ProbeRequest
pub fn bpfman_csi::v1::ProbeRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ProbeRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ProbeRequest
pub struct bpfman_csi::v1::ProbeResponse
pub bpfman_csi::v1::ProbeResponse::ready: core::option::Option<bool>
impl core::clone::Clone for bpfman_csi::v1::ProbeResponse
pub fn bpfman_csi::v1::ProbeResponse::clone(&self) -> bpfman_csi::v1::ProbeResponse
impl core::cmp::PartialEq for bpfman_csi::v1::ProbeResponse
pub fn bpfman_csi::v1::ProbeResponse::eq(&self, other: &bpfman_csi::v1::ProbeResponse) -> bool
impl core::default::Default for bpfman_csi::v1::ProbeResponse
pub fn bpfman_csi::v1::ProbeResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ProbeResponse
pub fn bpfman_csi::v1::ProbeResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ProbeResponse
impl prost::message::Message for bpfman_csi::v1::ProbeResponse
pub fn bpfman_csi::v1::ProbeResponse::clear(&mut self)
pub fn bpfman_csi::v1::ProbeResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ProbeResponse
impl core::marker::Send for bpfman_csi::v1::ProbeResponse
impl core::marker::Sync for bpfman_csi::v1::ProbeResponse
impl core::marker::Unpin for bpfman_csi::v1::ProbeResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ProbeResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ProbeResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ProbeResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::ProbeResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ProbeResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::ProbeResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ProbeResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ProbeResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ProbeResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ProbeResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ProbeResponse where T: core::clone::Clone
pub type bpfman_csi::v1::ProbeResponse::Owned = T
pub fn bpfman_csi::v1::ProbeResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ProbeResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ProbeResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ProbeResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ProbeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ProbeResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ProbeResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ProbeResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ProbeResponse
pub fn bpfman_csi::v1::ProbeResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ProbeResponse
pub fn bpfman_csi::v1::ProbeResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ProbeResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ProbeResponse
pub struct bpfman_csi::v1::Snapshot
pub bpfman_csi::v1::Snapshot::creation_time: core::option::Option<prost_types::protobuf::Timestamp>
pub bpfman_csi::v1::Snapshot::group_snapshot_id: alloc::string::String
pub bpfman_csi::v1::Snapshot::ready_to_use: bool
pub bpfman_csi::v1::Snapshot::size_bytes: i64
pub bpfman_csi::v1::Snapshot::snapshot_id: alloc::string::String
pub bpfman_csi::v1::Snapshot::source_volume_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::Snapshot
pub fn bpfman_csi::v1::Snapshot::clone(&self) -> bpfman_csi::v1::Snapshot
impl core::cmp::PartialEq for bpfman_csi::v1::Snapshot
pub fn bpfman_csi::v1::Snapshot::eq(&self, other: &bpfman_csi::v1::Snapshot) -> bool
impl core::default::Default for bpfman_csi::v1::Snapshot
pub fn bpfman_csi::v1::Snapshot::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::Snapshot
pub fn bpfman_csi::v1::Snapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::Snapshot
impl prost::message::Message for bpfman_csi::v1::Snapshot
pub fn bpfman_csi::v1::Snapshot::clear(&mut self)
pub fn bpfman_csi::v1::Snapshot::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::Snapshot
impl core::marker::Send for bpfman_csi::v1::Snapshot
impl core::marker::Sync for bpfman_csi::v1::Snapshot
impl core::marker::Unpin for bpfman_csi::v1::Snapshot
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::Snapshot
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::Snapshot
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::Snapshot where U: core::convert::From<T>
pub fn bpfman_csi::v1::Snapshot::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::Snapshot where U: core::convert::Into<T>
pub type bpfman_csi::v1::Snapshot::Error = core::convert::Infallible
pub fn bpfman_csi::v1::Snapshot::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::Snapshot where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::Snapshot::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::Snapshot::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::Snapshot where T: core::clone::Clone
pub type bpfman_csi::v1::Snapshot::Owned = T
pub fn bpfman_csi::v1::Snapshot::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::Snapshot::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::Snapshot where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::Snapshot::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::Snapshot where T: core::marker::Sized
pub fn bpfman_csi::v1::Snapshot::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::Snapshot where T: core::marker::Sized
pub fn bpfman_csi::v1::Snapshot::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::Snapshot
pub fn bpfman_csi::v1::Snapshot::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::Snapshot
pub fn bpfman_csi::v1::Snapshot::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::Snapshot
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::Snapshot
pub struct bpfman_csi::v1::Topology
pub bpfman_csi::v1::Topology::segments: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
impl core::clone::Clone for bpfman_csi::v1::Topology
pub fn bpfman_csi::v1::Topology::clone(&self) -> bpfman_csi::v1::Topology
impl core::cmp::PartialEq for bpfman_csi::v1::Topology
pub fn bpfman_csi::v1::Topology::eq(&self, other: &bpfman_csi::v1::Topology) -> bool
impl core::default::Default for bpfman_csi::v1::Topology
pub fn bpfman_csi::v1::Topology::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::Topology
pub fn bpfman_csi::v1::Topology::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::Topology
impl prost::message::Message for bpfman_csi::v1::Topology
pub fn bpfman_csi::v1::Topology::clear(&mut self)
pub fn bpfman_csi::v1::Topology::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::Topology
impl core::marker::Send for bpfman_csi::v1::Topology
impl core::marker::Sync for bpfman_csi::v1::Topology
impl core::marker::Unpin for bpfman_csi::v1::Topology
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::Topology
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::Topology
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::Topology where U: core::convert::From<T>
pub fn bpfman_csi::v1::Topology::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::Topology where U: core::convert::Into<T>
pub type bpfman_csi::v1::Topology::Error = core::convert::Infallible
pub fn bpfman_csi::v1::Topology::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::Topology where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::Topology::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::Topology::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::Topology where T: core::clone::Clone
pub type bpfman_csi::v1::Topology::Owned = T
pub fn bpfman_csi::v1::Topology::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::Topology::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::Topology where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::Topology::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::Topology where T: core::marker::Sized
pub fn bpfman_csi::v1::Topology::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::Topology where T: core::marker::Sized
pub fn bpfman_csi::v1::Topology::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::Topology
pub fn bpfman_csi::v1::Topology::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::Topology
pub fn bpfman_csi::v1::Topology::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::Topology
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::Topology
pub struct bpfman_csi::v1::TopologyRequirement
pub bpfman_csi::v1::TopologyRequirement::preferred: alloc::vec::Vec<bpfman_csi::v1::Topology>
pub bpfman_csi::v1::TopologyRequirement::requisite: alloc::vec::Vec<bpfman_csi::v1::Topology>
impl core::clone::Clone for bpfman_csi::v1::TopologyRequirement
pub fn bpfman_csi::v1::TopologyRequirement::clone(&self) -> bpfman_csi::v1::TopologyRequirement
impl core::cmp::PartialEq for bpfman_csi::v1::TopologyRequirement
pub fn bpfman_csi::v1::TopologyRequirement::eq(&self, other: &bpfman_csi::v1::TopologyRequirement) -> bool
impl core::default::Default for bpfman_csi::v1::TopologyRequirement
pub fn bpfman_csi::v1::TopologyRequirement::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::TopologyRequirement
pub fn bpfman_csi::v1::TopologyRequirement::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::TopologyRequirement
impl prost::message::Message for bpfman_csi::v1::TopologyRequirement
pub fn bpfman_csi::v1::TopologyRequirement::clear(&mut self)
pub fn bpfman_csi::v1::TopologyRequirement::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::TopologyRequirement
impl core::marker::Send for bpfman_csi::v1::TopologyRequirement
impl core::marker::Sync for bpfman_csi::v1::TopologyRequirement
impl core::marker::Unpin for bpfman_csi::v1::TopologyRequirement
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::TopologyRequirement
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::TopologyRequirement
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::TopologyRequirement where U: core::convert::From<T>
pub fn bpfman_csi::v1::TopologyRequirement::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::TopologyRequirement where U: core::convert::Into<T>
pub type bpfman_csi::v1::TopologyRequirement::Error = core::convert::Infallible
pub fn bpfman_csi::v1::TopologyRequirement::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::TopologyRequirement where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::TopologyRequirement::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::TopologyRequirement::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::TopologyRequirement where T: core::clone::Clone
pub type bpfman_csi::v1::TopologyRequirement::Owned = T
pub fn bpfman_csi::v1::TopologyRequirement::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::TopologyRequirement::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::TopologyRequirement where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::TopologyRequirement::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::TopologyRequirement where T: core::marker::Sized
pub fn bpfman_csi::v1::TopologyRequirement::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::TopologyRequirement where T: core::marker::Sized
pub fn bpfman_csi::v1::TopologyRequirement::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::TopologyRequirement
pub fn bpfman_csi::v1::TopologyRequirement::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::TopologyRequirement
pub fn bpfman_csi::v1::TopologyRequirement::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::TopologyRequirement
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::TopologyRequirement
pub struct bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
pub bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::mutable_parameters: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::parameters: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::secrets: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::volume_capabilities: alloc::vec::Vec<bpfman_csi::v1::VolumeCapability>
pub bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::volume_context: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::volume_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::clone(&self) -> bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
impl core::cmp::PartialEq for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::eq(&self, other: &bpfman_csi::v1::ValidateVolumeCapabilitiesRequest) -> bool
impl core::default::Default for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
impl prost::message::Message for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::clear(&mut self)
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
impl core::marker::Send for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
impl core::marker::Sync for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
impl core::marker::Unpin for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest where U: core::convert::From<T>
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest where U: core::convert::Into<T>
pub type bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest where T: core::clone::Clone
pub type bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::Owned = T
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest where T: core::marker::Sized
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesRequest::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ValidateVolumeCapabilitiesRequest
pub struct bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
pub bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::confirmed: core::option::Option<bpfman_csi::v1::validate_volume_capabilities_response::Confirmed>
pub bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::message: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::clone(&self) -> bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
impl core::cmp::PartialEq for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::eq(&self, other: &bpfman_csi::v1::ValidateVolumeCapabilitiesResponse) -> bool
impl core::default::Default for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
impl prost::message::Message for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::clear(&mut self)
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
impl core::marker::Send for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
impl core::marker::Sync for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
impl core::marker::Unpin for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse where U: core::convert::From<T>
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse where U: core::convert::Into<T>
pub type bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::Error = core::convert::Infallible
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse where T: core::clone::Clone
pub type bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::Owned = T
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse where T: core::marker::Sized
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
pub fn bpfman_csi::v1::ValidateVolumeCapabilitiesResponse::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::ValidateVolumeCapabilitiesResponse
pub struct bpfman_csi::v1::Volume
pub bpfman_csi::v1::Volume::accessible_topology: alloc::vec::Vec<bpfman_csi::v1::Topology>
pub bpfman_csi::v1::Volume::capacity_bytes: i64
pub bpfman_csi::v1::Volume::content_source: core::option::Option<bpfman_csi::v1::VolumeContentSource>
pub bpfman_csi::v1::Volume::volume_context: std::collections::hash::map::HashMap<alloc::string::String, alloc::string::String>
pub bpfman_csi::v1::Volume::volume_id: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::Volume
pub fn bpfman_csi::v1::Volume::clone(&self) -> bpfman_csi::v1::Volume
impl core::cmp::PartialEq for bpfman_csi::v1::Volume
pub fn bpfman_csi::v1::Volume::eq(&self, other: &bpfman_csi::v1::Volume) -> bool
impl core::default::Default for bpfman_csi::v1::Volume
pub fn bpfman_csi::v1::Volume::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::Volume
pub fn bpfman_csi::v1::Volume::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::Volume
impl prost::message::Message for bpfman_csi::v1::Volume
pub fn bpfman_csi::v1::Volume::clear(&mut self)
pub fn bpfman_csi::v1::Volume::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::Volume
impl core::marker::Send for bpfman_csi::v1::Volume
impl core::marker::Sync for bpfman_csi::v1::Volume
impl core::marker::Unpin for bpfman_csi::v1::Volume
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::Volume
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::Volume
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::Volume where U: core::convert::From<T>
pub fn bpfman_csi::v1::Volume::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::Volume where U: core::convert::Into<T>
pub type bpfman_csi::v1::Volume::Error = core::convert::Infallible
pub fn bpfman_csi::v1::Volume::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::Volume where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::Volume::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::Volume::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::Volume where T: core::clone::Clone
pub type bpfman_csi::v1::Volume::Owned = T
pub fn bpfman_csi::v1::Volume::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::Volume::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::Volume where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::Volume::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::Volume where T: core::marker::Sized
pub fn bpfman_csi::v1::Volume::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::Volume where T: core::marker::Sized
pub fn bpfman_csi::v1::Volume::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::Volume
pub fn bpfman_csi::v1::Volume::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::Volume
pub fn bpfman_csi::v1::Volume::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::Volume
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::Volume
pub struct bpfman_csi::v1::VolumeCapability
pub bpfman_csi::v1::VolumeCapability::access_mode: core::option::Option<bpfman_csi::v1::volume_capability::AccessMode>
pub bpfman_csi::v1::VolumeCapability::access_type: core::option::Option<bpfman_csi::v1::volume_capability::AccessType>
impl core::clone::Clone for bpfman_csi::v1::VolumeCapability
pub fn bpfman_csi::v1::VolumeCapability::clone(&self) -> bpfman_csi::v1::VolumeCapability
impl core::cmp::PartialEq for bpfman_csi::v1::VolumeCapability
pub fn bpfman_csi::v1::VolumeCapability::eq(&self, other: &bpfman_csi::v1::VolumeCapability) -> bool
impl core::default::Default for bpfman_csi::v1::VolumeCapability
pub fn bpfman_csi::v1::VolumeCapability::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::VolumeCapability
pub fn bpfman_csi::v1::VolumeCapability::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::VolumeCapability
impl prost::message::Message for bpfman_csi::v1::VolumeCapability
pub fn bpfman_csi::v1::VolumeCapability::clear(&mut self)
pub fn bpfman_csi::v1::VolumeCapability::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::VolumeCapability
impl core::marker::Send for bpfman_csi::v1::VolumeCapability
impl core::marker::Sync for bpfman_csi::v1::VolumeCapability
impl core::marker::Unpin for bpfman_csi::v1::VolumeCapability
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::VolumeCapability
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::VolumeCapability
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::VolumeCapability where U: core::convert::From<T>
pub fn bpfman_csi::v1::VolumeCapability::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::VolumeCapability where U: core::convert::Into<T>
pub type bpfman_csi::v1::VolumeCapability::Error = core::convert::Infallible
pub fn bpfman_csi::v1::VolumeCapability::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::VolumeCapability where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::VolumeCapability::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::VolumeCapability::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::VolumeCapability where T: core::clone::Clone
pub type bpfman_csi::v1::VolumeCapability::Owned = T
pub fn bpfman_csi::v1::VolumeCapability::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::VolumeCapability::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::VolumeCapability where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::VolumeCapability::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::VolumeCapability where T: core::marker::Sized
pub fn bpfman_csi::v1::VolumeCapability::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::VolumeCapability where T: core::marker::Sized
pub fn bpfman_csi::v1::VolumeCapability::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::VolumeCapability
pub fn bpfman_csi::v1::VolumeCapability::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::VolumeCapability
pub fn bpfman_csi::v1::VolumeCapability::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::VolumeCapability
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::VolumeCapability
pub struct bpfman_csi::v1::VolumeCondition
pub bpfman_csi::v1::VolumeCondition::abnormal: bool
pub bpfman_csi::v1::VolumeCondition::message: alloc::string::String
impl core::clone::Clone for bpfman_csi::v1::VolumeCondition
pub fn bpfman_csi::v1::VolumeCondition::clone(&self) -> bpfman_csi::v1::VolumeCondition
impl core::cmp::PartialEq for bpfman_csi::v1::VolumeCondition
pub fn bpfman_csi::v1::VolumeCondition::eq(&self, other: &bpfman_csi::v1::VolumeCondition) -> bool
impl core::default::Default for bpfman_csi::v1::VolumeCondition
pub fn bpfman_csi::v1::VolumeCondition::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::VolumeCondition
pub fn bpfman_csi::v1::VolumeCondition::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::VolumeCondition
impl prost::message::Message for bpfman_csi::v1::VolumeCondition
pub fn bpfman_csi::v1::VolumeCondition::clear(&mut self)
pub fn bpfman_csi::v1::VolumeCondition::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::VolumeCondition
impl core::marker::Send for bpfman_csi::v1::VolumeCondition
impl core::marker::Sync for bpfman_csi::v1::VolumeCondition
impl core::marker::Unpin for bpfman_csi::v1::VolumeCondition
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::VolumeCondition
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::VolumeCondition
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::VolumeCondition where U: core::convert::From<T>
pub fn bpfman_csi::v1::VolumeCondition::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::VolumeCondition where U: core::convert::Into<T>
pub type bpfman_csi::v1::VolumeCondition::Error = core::convert::Infallible
pub fn bpfman_csi::v1::VolumeCondition::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::VolumeCondition where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::VolumeCondition::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::VolumeCondition::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::VolumeCondition where T: core::clone::Clone
pub type bpfman_csi::v1::VolumeCondition::Owned = T
pub fn bpfman_csi::v1::VolumeCondition::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::VolumeCondition::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::VolumeCondition where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::VolumeCondition::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::VolumeCondition where T: core::marker::Sized
pub fn bpfman_csi::v1::VolumeCondition::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::VolumeCondition where T: core::marker::Sized
pub fn bpfman_csi::v1::VolumeCondition::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::VolumeCondition
pub fn bpfman_csi::v1::VolumeCondition::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::VolumeCondition
pub fn bpfman_csi::v1::VolumeCondition::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::VolumeCondition
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::VolumeCondition
pub struct bpfman_csi::v1::VolumeContentSource
pub bpfman_csi::v1::VolumeContentSource::type: core::option::Option<bpfman_csi::v1::volume_content_source::Type>
impl core::clone::Clone for bpfman_csi::v1::VolumeContentSource
pub fn bpfman_csi::v1::VolumeContentSource::clone(&self) -> bpfman_csi::v1::VolumeContentSource
impl core::cmp::PartialEq for bpfman_csi::v1::VolumeContentSource
pub fn bpfman_csi::v1::VolumeContentSource::eq(&self, other: &bpfman_csi::v1::VolumeContentSource) -> bool
impl core::default::Default for bpfman_csi::v1::VolumeContentSource
pub fn bpfman_csi::v1::VolumeContentSource::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::VolumeContentSource
pub fn bpfman_csi::v1::VolumeContentSource::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::VolumeContentSource
impl prost::message::Message for bpfman_csi::v1::VolumeContentSource
pub fn bpfman_csi::v1::VolumeContentSource::clear(&mut self)
pub fn bpfman_csi::v1::VolumeContentSource::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::VolumeContentSource
impl core::marker::Send for bpfman_csi::v1::VolumeContentSource
impl core::marker::Sync for bpfman_csi::v1::VolumeContentSource
impl core::marker::Unpin for bpfman_csi::v1::VolumeContentSource
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::VolumeContentSource
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::VolumeContentSource
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::VolumeContentSource where U: core::convert::From<T>
pub fn bpfman_csi::v1::VolumeContentSource::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::VolumeContentSource where U: core::convert::Into<T>
pub type bpfman_csi::v1::VolumeContentSource::Error = core::convert::Infallible
pub fn bpfman_csi::v1::VolumeContentSource::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::VolumeContentSource where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::VolumeContentSource::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::VolumeContentSource::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::VolumeContentSource where T: core::clone::Clone
pub type bpfman_csi::v1::VolumeContentSource::Owned = T
pub fn bpfman_csi::v1::VolumeContentSource::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::VolumeContentSource::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::VolumeContentSource where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::VolumeContentSource::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::VolumeContentSource where T: core::marker::Sized
pub fn bpfman_csi::v1::VolumeContentSource::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::VolumeContentSource where T: core::marker::Sized
pub fn bpfman_csi::v1::VolumeContentSource::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::VolumeContentSource
pub fn bpfman_csi::v1::VolumeContentSource::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::VolumeContentSource
pub fn bpfman_csi::v1::VolumeContentSource::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::VolumeContentSource
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::VolumeContentSource
pub struct bpfman_csi::v1::VolumeGroupSnapshot
pub bpfman_csi::v1::VolumeGroupSnapshot::creation_time: core::option::Option<prost_types::protobuf::Timestamp>
pub bpfman_csi::v1::VolumeGroupSnapshot::group_snapshot_id: alloc::string::String
pub bpfman_csi::v1::VolumeGroupSnapshot::ready_to_use: bool
pub bpfman_csi::v1::VolumeGroupSnapshot::snapshots: alloc::vec::Vec<bpfman_csi::v1::Snapshot>
impl core::clone::Clone for bpfman_csi::v1::VolumeGroupSnapshot
pub fn bpfman_csi::v1::VolumeGroupSnapshot::clone(&self) -> bpfman_csi::v1::VolumeGroupSnapshot
impl core::cmp::PartialEq for bpfman_csi::v1::VolumeGroupSnapshot
pub fn bpfman_csi::v1::VolumeGroupSnapshot::eq(&self, other: &bpfman_csi::v1::VolumeGroupSnapshot) -> bool
impl core::default::Default for bpfman_csi::v1::VolumeGroupSnapshot
pub fn bpfman_csi::v1::VolumeGroupSnapshot::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::VolumeGroupSnapshot
pub fn bpfman_csi::v1::VolumeGroupSnapshot::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::VolumeGroupSnapshot
impl prost::message::Message for bpfman_csi::v1::VolumeGroupSnapshot
pub fn bpfman_csi::v1::VolumeGroupSnapshot::clear(&mut self)
pub fn bpfman_csi::v1::VolumeGroupSnapshot::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::VolumeGroupSnapshot
impl core::marker::Send for bpfman_csi::v1::VolumeGroupSnapshot
impl core::marker::Sync for bpfman_csi::v1::VolumeGroupSnapshot
impl core::marker::Unpin for bpfman_csi::v1::VolumeGroupSnapshot
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::VolumeGroupSnapshot
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::VolumeGroupSnapshot
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::VolumeGroupSnapshot where U: core::convert::From<T>
pub fn bpfman_csi::v1::VolumeGroupSnapshot::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::VolumeGroupSnapshot where U: core::convert::Into<T>
pub type bpfman_csi::v1::VolumeGroupSnapshot::Error = core::convert::Infallible
pub fn bpfman_csi::v1::VolumeGroupSnapshot::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::VolumeGroupSnapshot where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::VolumeGroupSnapshot::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::VolumeGroupSnapshot::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::VolumeGroupSnapshot where T: core::clone::Clone
pub type bpfman_csi::v1::VolumeGroupSnapshot::Owned = T
pub fn bpfman_csi::v1::VolumeGroupSnapshot::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::VolumeGroupSnapshot::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::VolumeGroupSnapshot where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::VolumeGroupSnapshot::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::VolumeGroupSnapshot where T: core::marker::Sized
pub fn bpfman_csi::v1::VolumeGroupSnapshot::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::VolumeGroupSnapshot where T: core::marker::Sized
pub fn bpfman_csi::v1::VolumeGroupSnapshot::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::VolumeGroupSnapshot
pub fn bpfman_csi::v1::VolumeGroupSnapshot::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::VolumeGroupSnapshot
pub fn bpfman_csi::v1::VolumeGroupSnapshot::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::VolumeGroupSnapshot
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::VolumeGroupSnapshot
pub struct bpfman_csi::v1::VolumeUsage
pub bpfman_csi::v1::VolumeUsage::available: i64
pub bpfman_csi::v1::VolumeUsage::total: i64
pub bpfman_csi::v1::VolumeUsage::unit: i32
pub bpfman_csi::v1::VolumeUsage::used: i64
impl bpfman_csi::v1::VolumeUsage
pub fn bpfman_csi::v1::VolumeUsage::set_unit(&mut self, value: bpfman_csi::v1::volume_usage::Unit)
pub fn bpfman_csi::v1::VolumeUsage::unit(&self) -> bpfman_csi::v1::volume_usage::Unit
impl core::clone::Clone for bpfman_csi::v1::VolumeUsage
pub fn bpfman_csi::v1::VolumeUsage::clone(&self) -> bpfman_csi::v1::VolumeUsage
impl core::cmp::PartialEq for bpfman_csi::v1::VolumeUsage
pub fn bpfman_csi::v1::VolumeUsage::eq(&self, other: &bpfman_csi::v1::VolumeUsage) -> bool
impl core::default::Default for bpfman_csi::v1::VolumeUsage
pub fn bpfman_csi::v1::VolumeUsage::default() -> Self
impl core::fmt::Debug for bpfman_csi::v1::VolumeUsage
pub fn bpfman_csi::v1::VolumeUsage::fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result
impl core::marker::StructuralPartialEq for bpfman_csi::v1::VolumeUsage
impl prost::message::Message for bpfman_csi::v1::VolumeUsage
pub fn bpfman_csi::v1::VolumeUsage::clear(&mut self)
pub fn bpfman_csi::v1::VolumeUsage::encoded_len(&self) -> usize
impl core::marker::Freeze for bpfman_csi::v1::VolumeUsage
impl core::marker::Send for bpfman_csi::v1::VolumeUsage
impl core::marker::Sync for bpfman_csi::v1::VolumeUsage
impl core::marker::Unpin for bpfman_csi::v1::VolumeUsage
impl core::panic::unwind_safe::RefUnwindSafe for bpfman_csi::v1::VolumeUsage
impl core::panic::unwind_safe::UnwindSafe for bpfman_csi::v1::VolumeUsage
impl<T, U> core::convert::Into<U> for bpfman_csi::v1::VolumeUsage where U: core::convert::From<T>
pub fn bpfman_csi::v1::VolumeUsage::into(self) -> U
impl<T, U> core::convert::TryFrom<U> for bpfman_csi::v1::VolumeUsage where U: core::convert::Into<T>
pub type bpfman_csi::v1::VolumeUsage::Error = core::convert::Infallible
pub fn bpfman_csi::v1::VolumeUsage::try_from(value: U) -> core::result::Result<T, <T as core::convert::TryFrom<U>>::Error>
impl<T, U> core::convert::TryInto<U> for bpfman_csi::v1::VolumeUsage where U: core::convert::TryFrom<T>
pub type bpfman_csi::v1::VolumeUsage::Error = <U as core::convert::TryFrom<T>>::Error
pub fn bpfman_csi::v1::VolumeUsage::try_into(self) -> core::result::Result<U, <U as core::convert::TryFrom<T>>::Error>
impl<T> alloc::borrow::ToOwned for bpfman_csi::v1::VolumeUsage where T: core::clone::Clone
pub type bpfman_csi::v1::VolumeUsage::Owned = T
pub fn bpfman_csi::v1::VolumeUsage::clone_into(&self, target: &mut T)
pub fn bpfman_csi::v1::VolumeUsage::to_owned(&self) -> T
impl<T> core::any::Any for bpfman_csi::v1::VolumeUsage where T: 'static + core::marker::Sized
pub fn bpfman_csi::v1::VolumeUsage::type_id(&self) -> core::any::TypeId
impl<T> core::borrow::Borrow<T> for bpfman_csi::v1::VolumeUsage where T: core::marker::Sized
pub fn bpfman_csi::v1::VolumeUsage::borrow(&self) -> &T
impl<T> core::borrow::BorrowMut<T> for bpfman_csi::v1::VolumeUsage where T: core::marker::Sized
pub fn bpfman_csi::v1::VolumeUsage::borrow_mut(&mut self) -> &mut T
impl<T> core::convert::From<T> for bpfman_csi::v1::VolumeUsage
pub fn bpfman_csi::v1::VolumeUsage::from(t: T) -> T
impl<T> tonic::request::IntoRequest<T> for bpfman_csi::v1::VolumeUsage
pub fn bpfman_csi::v1::VolumeUsage::into_request(self) -> tonic::request::Request<T>
impl<T> tracing::instrument::Instrument for bpfman_csi::v1::VolumeUsage
impl<T> tracing::instrument::WithSubscriber for bpfman_csi::v1::VolumeUsage
